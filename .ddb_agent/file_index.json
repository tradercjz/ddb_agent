{
  "files": [
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db_distr_comp.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db_distr_comp.md",
      "start_line": 1,
      "end_line": 12,
      "summary": "介绍DolphinDB数据库的基本操作及前期准备事项。",
      "keywords": [
        "DolphinDB",
        "数据库操作",
        "SQL编程",
        "用户账号"
      ],
      "hypothetical_question": "DolphinDB数据库的基本操作有哪些？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/README.md",
      "chunk_id": "0",
      "source_document": "./documentation/README.md",
      "start_line": 1,
      "end_line": 1,
      "summary": "该文本片段包含一个指向DeepWiki的徽章链接。",
      "keywords": [
        "DeepWiki",
        "徽章",
        "链接"
      ],
      "hypothetical_question": "如何访问DeepWiki的文档页面？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/clients.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/clients.md",
      "start_line": 1,
      "end_line": 15,
      "summary": "介绍DolphinDB数据库管理的多种客户端工具及其类型。",
      "keywords": [
        "DolphinDB",
        "客户端",
        "数据库管理",
        "Web集群管理器",
        "VS Code插件"
      ],
      "hypothetical_question": "DolphinDB提供了哪些客户端工具用于数据库管理？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/api/connapi_intro.md",
      "chunk_id": "0",
      "source_document": "./documentation/api/connapi_intro.md",
      "start_line": 1,
      "end_line": 359,
      "summary": "DolphinDB连接器与API的交互阶段、报文格式及数据类型详解。",
      "keywords": [
        "DolphinDB",
        "API",
        "连接器",
        "报文格式",
        "数据类型"
      ],
      "hypothetical_question": "DolphinDB的连接器和API是如何进行交互的？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/drop_database_table.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/drop_database_table.md",
      "start_line": 1,
      "end_line": 75,
      "summary": "介绍在DolphinDB中删除数据库、分布式表和内存表的方法及注意事项。",
      "keywords": [
        "删除数据库",
        "删除分布式表",
        "删除内存表",
        "DROP DATABASE",
        "DROP TABLE"
      ],
      "hypothetical_question": "如何在DolphinDB中删除数据库和表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/cfg/db_intro.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/cfg/db_intro.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "DolphinDB是一款高性能分布式时序数据库，支持单实例和集群两种运行模式，集群模式包含控制节点、代理节点、数据节点和计算节点四种角色。",
      "keywords": [
        "DolphinDB",
        "分布式时序数据库",
        "集群模式",
        "数据节点",
        "计算节点"
      ],
      "hypothetical_question": "DolphinDB数据库有哪些运行模式和节点角色？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/cfg/cluster.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/cfg/cluster.md",
      "start_line": 1,
      "end_line": 93,
      "summary": "DolphinDB集群模式介绍，包括普通集群和高可用集群的配置文件和部署方法。",
      "keywords": [
        "DolphinDB",
        "集群模式",
        "配置文件",
        "高可用集群",
        "部署"
      ],
      "hypothetical_question": "DolphinDB集群有哪些类型和配置文件？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/vscode.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/vscode.md",
      "start_line": 1,
      "end_line": 582,
      "summary": "DolphinDB 的 VS Code 插件提供了智能提示、代码导航、数据管理等功能，支持 Dolphin Script 的编写、执行和调试。",
      "keywords": [
        "VS Code",
        "DolphinDB",
        "插件",
        "调试",
        "智能提示"
      ],
      "hypothetical_question": "DolphinDB 的 VS Code 插件有哪些主要功能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/api/python/BasicOperations/Subscription/Subscription.md",
      "chunk_id": "0",
      "source_document": "./documentation/api/python/BasicOperations/Subscription/Subscription.md",
      "start_line": 1,
      "end_line": 150,
      "summary": "该文档详细介绍了如何在DolphinDB中使用Python API进行流数据订阅，包括订阅方法、参数说明、订阅示例以及取消订阅的方法。",
      "keywords": [
        "DolphinDB",
        "流数据订阅",
        "Python API",
        "subscribe",
        "unsubscribe"
      ],
      "hypothetical_question": "如何在DolphinDB中使用Python API进行流数据订阅？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/about/ddb_intro.md",
      "chunk_id": "0",
      "source_document": "./documentation/about/ddb_intro.md",
      "start_line": 1,
      "end_line": 81,
      "summary": "DolphinDB 是一款高性能时序数据库和实时计算平台，支持分布式架构、多模存储引擎、批计算处理、流数据处理、多范式编程语言和良好生态。",
      "keywords": [
        "DolphinDB",
        "时序数据库",
        "实时计算平台"
      ],
      "hypothetical_question": "DolphinDB 是什么，它有哪些主要功能和特点？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/modify_table_structure.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/modify_table_structure.md",
      "start_line": 1,
      "end_line": 122,
      "summary": "DolphinDB 提供了多种方法来修改表结构，包括增加列、删除列、修改列顺序、列名和数据类型等操作。",
      "keywords": [
        "DolphinDB",
        "表结构",
        "修改列"
      ],
      "hypothetical_question": "如何在 DolphinDB 中修改表结构？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/terminal.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/terminal.md",
      "start_line": 1,
      "end_line": 150,
      "summary": "DolphinDB终端是一个命令行工具，用于连接远程服务器执行交互命令和脚本，支持本地和远程脚本执行。",
      "keywords": [
        "DolphinDB终端",
        "命令行工具",
        "远程执行",
        "脚本执行",
        "交互命令"
      ],
      "hypothetical_question": "如何使用DolphinDB终端连接远程服务器并执行脚本？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/api/python/AdvancedOperations/DataTypeCasting/PROTOCOL_PICKLE.md",
      "chunk_id": "0",
      "source_document": "./documentation/api/python/AdvancedOperations/DataTypeCasting/PROTOCOL_PICKLE.md",
      "start_line": 1,
      "end_line": 107,
      "summary": "DolphinDB Python API 中的 PROTOCOL_PICKLE 协议用于反序列化 Python 对象，支持有限的数据形式和数据类型。",
      "keywords": [
        "PROTOCOL_PICKLE",
        "反序列化",
        "DolphinDB",
        "Python API",
        "数据形式"
      ],
      "hypothetical_question": "DolphinDB Python API 中的 PROTOCOL_PICKLE 协议支持哪些数据形式和数据类型？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/api/python/AdvancedOperations/SubscriptionOptions/SubscriptionOptions.md",
      "chunk_id": "0",
      "source_document": "./documentation/api/python/AdvancedOperations/SubscriptionOptions/SubscriptionOptions.md",
      "start_line": 1,
      "end_line": 83,
      "summary": "该文本片段展示了如何在DolphinDB中使用Python API进行异构流数据表的订阅和反序列化操作。",
      "keywords": [
        "DolphinDB",
        "Python API",
        "异构流数据表",
        "订阅",
        "反序列化"
      ],
      "hypothetical_question": "如何在DolphinDB中使用Python API订阅和反序列化异构流数据表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/mod_data.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/mod_data.md",
      "start_line": 1,
      "end_line": 133,
      "summary": "DolphinDB支持多种数据更新方法，包括SQL语句、update!、upsert!、replaceColumn!和赋值，适用于不同类型的内存表和分布式表。",
      "keywords": [
        "DolphinDB",
        "数据更新",
        "SQL语句",
        "内存表",
        "分布式表"
      ],
      "hypothetical_question": "DolphinDB中有哪些方法可以用于更新数据，它们分别适用于哪些类型的表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/api/python/AdvancedOperations/DataTypeCasting/PROTOCOL_DDB.md",
      "chunk_id": "0",
      "source_document": "./documentation/api/python/AdvancedOperations/DataTypeCasting/PROTOCOL_DDB.md",
      "start_line": 1,
      "end_line": 707,
      "summary": "PROTOCOL_DDB是DolphinDB自定义的数据序列化和反序列化方案，支持多种数据形式和数据类型，并详细介绍了其在Python API中的使用方法和类型转换规则。",
      "keywords": [
        "PROTOCOL_DDB",
        "数据序列化",
        "Python API",
        "数据类型转换",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB Python API中使用PROTOCOL_DDB协议进行数据序列化和反序列化？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/gui.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/gui.md",
      "start_line": 1,
      "end_line": 177,
      "summary": "DolphinDB GUI客户端是基于Java的图形化编程和数据浏览界面，支持多种操作系统，提供脚本管理、数据库交互、数据同步等功能，并详细介绍了安装、启动及常见问题解决方法。",
      "keywords": [
        "DolphinDB GUI",
        "Java",
        "数据同步",
        "安装指南",
        "常见问题"
      ],
      "hypothetical_question": "如何安装和使用DolphinDB GUI客户端进行数据库管理和脚本开发？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/api/python/AdvancedOperations/DataTypeCasting/ForceTypeCasting.md",
      "chunk_id": "0",
      "source_document": "./documentation/api/python/AdvancedOperations/DataTypeCasting/ForceTypeCasting.md",
      "start_line": 1,
      "end_line": 94,
      "summary": "DolphinDB Python API 支持通过设置 __DolphinDB_Type__ 属性实现 pandas.DataFrame 上传时的强制类型转换，包括 UUID、IPADDR、SECOND 等特殊类型以及 Decimal32/Decimal64 的精度指定。",
      "keywords": [
        "强制类型转换",
        "pandas.DataFrame",
        "DolphinDB Python API",
        "Decimal32",
        "Decimal64"
      ],
      "hypothetical_question": "如何在 DolphinDB Python API 中上传 pandas.DataFrame 时进行强制类型转换？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/cfg/function_configuration.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/cfg/function_configuration.md",
      "start_line": 1,
      "end_line": 1080,
      "summary": "DolphinDB功能配置文档详细介绍了系统在安全、存算分离、多集群管理、高可用、日志、线程、内存、磁盘、网络、恢复与再平衡、异步复制、作业、流数据、SQL查询、数据库与数据表、TSDB、OLAP、PKEY、IMOLTP、TextDB、分级存储、单点登录、性能监控与资源跟踪以及兼容性配置等方面的配置参数及其解释。",
      "keywords": [
        "DolphinDB",
        "配置参数",
        "功能配置",
        "高可用",
        "性能监控"
      ],
      "hypothetical_question": "DolphinDB的功能配置参数有哪些及其具体作用是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/cfg/para_cfg.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/cfg/para_cfg.md",
      "start_line": 1,
      "end_line": 12,
      "summary": "DolphinDB提供了可配置参数以优化硬件资源使用，并可通过getConfig函数查看配置值。",
      "keywords": [
        "DolphinDB",
        "参数配置",
        "getConfig"
      ],
      "hypothetical_question": "如何在DolphinDB中查看和配置参数以优化硬件资源使用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/cfg/init.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/cfg/init.md",
      "start_line": 1,
      "end_line": 50,
      "summary": "介绍DolphinDB的初始化步骤，包括下载安装、目录结构、配置参数以及单机和集群模式的启动方式。",
      "keywords": [
        "DolphinDB",
        "初始化",
        "配置参数",
        "单机模式",
        "集群模式"
      ],
      "hypothetical_question": "如何在DolphinDB中进行初始化和配置参数设置？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db/db_architecture.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db/db_architecture.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "DolphinDB采用自主研发的shared-nothing分布式架构，实现了数据分布式存储、高可用、弹性扩展等功能。",
      "keywords": [
        "分布式架构",
        "shared-nothing",
        "数据分区",
        "弹性扩展",
        "高可用"
      ],
      "hypothetical_question": "DolphinDB的分布式架构有哪些特点和优势？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/cfg/standalone.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/cfg/standalone.md",
      "start_line": 1,
      "end_line": 94,
      "summary": "介绍 DolphinDB 单节点模式的启动指令、终端使用、配置参数及启动流程。",
      "keywords": [
        "DolphinDB",
        "单节点模式",
        "启动指令",
        "配置参数",
        "启动流程"
      ],
      "hypothetical_question": "如何在 DolphinDB 中启动单节点模式并配置相关参数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db/ha.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db/ha.md",
      "start_line": 1,
      "end_line": 31,
      "summary": "DolphinDB通过数据副本、元数据冗余和客户端自动重连机制实现分布式环境下的高可用性。",
      "keywords": [
        "高可用",
        "副本",
        "元数据",
        "Raft协议",
        "自动重连"
      ],
      "hypothetical_question": "DolphinDB如何保证分布式环境下的高可用性？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db/rebalance.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db/rebalance.md",
      "start_line": 1,
      "end_line": 54,
      "summary": "DolphinDB的数据平衡机制及其实现方法，包括水平扩缩容和垂直扩缩容，以及相关函数的使用和注意事项。",
      "keywords": [
        "数据平衡",
        "DolphinDB",
        "负载均衡",
        "rebalanceChunksWithinDataNode",
        "rebalanceChunksAmongDataNodes"
      ],
      "hypothetical_question": "DolphinDB如何实现数据平衡以及有哪些相关函数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db/catalog.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db/catalog.md",
      "start_line": 1,
      "end_line": 384,
      "summary": "DolphinDB 3.00.0版本引入的数据库目录（catalog）功能，用于统一管理分布式数据库对象，支持标准SQL语法操作，包括创建、查询、更新、删除等基本操作，以及权限管理。",
      "keywords": [
        "DolphinDB",
        "数据库目录",
        "catalog",
        "SQL语法",
        "权限管理"
      ],
      "hypothetical_question": "DolphinDB中的数据库目录（catalog）功能有哪些基本操作和权限管理？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db/multimodal_storage.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db/multimodal_storage.md",
      "start_line": 1,
      "end_line": 57,
      "summary": "DolphinDB的多模态存储架构支持多种存储引擎，实现统一的数据管理、查询和计算框架，适用于不同业务场景。",
      "keywords": [
        "多模态存储",
        "存储引擎",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB的多模态存储架构有哪些特点和优势？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db/db_partitioning.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db/db_partitioning.md",
      "start_line": 1,
      "end_line": 290,
      "summary": "DolphinDB数据库分区指南，介绍了分区的好处、类型（范围、哈希、值、列表、复合分区）、设计策略及最佳实践。",
      "keywords": [
        "DolphinDB",
        "数据分区",
        "分区类型",
        "分区策略",
        "分布式数据库"
      ],
      "hypothetical_question": "DolphinDB数据库有哪些分区类型及其适用场景？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db/imoltp.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db/imoltp.md",
      "start_line": 1,
      "end_line": 374,
      "summary": "DolphinDB的IMOLTP引擎是一个专为高频率、高并发OLTP场景设计的内存数据库引擎，提供ACID事务支持、高效索引和持久化恢复机制。",
      "keywords": [
        "IMOLTP",
        "内存数据库",
        "ACID事务",
        "B+树索引",
        "WAL"
      ],
      "hypothetical_question": "DolphinDB的IMOLTP引擎如何优化高频率、高并发的OLTP场景？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db/rdma.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db/rdma.md",
      "start_line": 1,
      "end_line": 170,
      "summary": "DolphinDB支持TCP/IP和RDMA两种节点间通信协议，详细介绍了它们的原理、特点、使用方法和性能对比。",
      "keywords": [
        "DolphinDB",
        "TCP/IP",
        "RDMA",
        "节点间通信",
        "性能对比"
      ],
      "hypothetical_question": "DolphinDB支持哪些节点间通信协议，它们各有什么特点和适用场景？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db/olap.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db/olap.md",
      "start_line": 1,
      "end_line": 99,
      "summary": "DolphinDB OLAP存储引擎通过分区和列式存储技术优化大规模数据分析性能，支持多种数据压缩算法，提供高效的数据写入、查询、更新和删除操作。",
      "keywords": [
        "OLAP",
        "列式存储",
        "数据压缩",
        "分区技术",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB的OLAP存储引擎如何优化大规模数据分析性能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db/iotdb.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db/iotdb.md",
      "start_line": 1,
      "end_line": 411,
      "summary": "DolphinDB的物联网点位管理引擎（IOTDB引擎）提供了对海量测点的高效管理，包括IOTANY列和最新值缓存功能，以优化查询性能。",
      "keywords": [
        "物联网点位管理引擎",
        "IOTANY列",
        "最新值缓存",
        "DolphinDB",
        "TSDB引擎"
      ],
      "hypothetical_question": "DolphinDB的物联网点位管理引擎如何优化海量测点的查询性能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db/textdb.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db/textdb.md",
      "start_line": 1,
      "end_line": 337,
      "summary": "DolphinDB的文本存储引擎（TextDB）基于倒排索引技术，显著提升文本数据的全文检索性能，支持多种分词器和查询功能，适用于金融和物联网等领域的高效文本处理。",
      "keywords": [
        "倒排索引",
        "全文检索",
        "分词器",
        "TextDB",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB的TextDB如何提升文本数据的检索性能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db/recovery.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db/recovery.md",
      "start_line": 1,
      "end_line": 69,
      "summary": "DolphinDB的在线恢复技术通过增量复制和异步/同步恢复机制，在分布式文件系统中高效修复不一致或损坏的数据副本，同时最小化对正常数据处理的影响。",
      "keywords": [
        "在线恢复",
        "增量复制",
        "分布式文件系统",
        "数据副本",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB的在线恢复技术是如何在不中断正常数据处理的情况下修复损坏的数据副本的？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db/storage_compute_separation.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db/storage_compute_separation.md",
      "start_line": 1,
      "end_line": 288,
      "summary": "DolphinDB 3.00.2版本引入的存算分离架构通过计算组实现资源与故障隔离，支持多级缓存和查询优化策略，提供弹性扩缩容能力。",
      "keywords": [
        "存算分离",
        "计算组",
        "多级缓存",
        "查询优化",
        "弹性扩缩"
      ],
      "hypothetical_question": "DolphinDB的存算分离架构是如何通过计算组实现资源隔离和查询优化的？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db/pkey_engine.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db/pkey_engine.md",
      "start_line": 1,
      "end_line": 354,
      "summary": "DolphinDB的主键存储引擎（PKEY）是一种支持主键唯一性保证、实时更新和高效查询的存储引擎，采用Merge-on-Write方案和LSM-Tree设计，适用于OLTP数据库CDC到DolphinDB的数据分析需求。",
      "keywords": [
        "主键存储引擎",
        "Merge-on-Write",
        "LSM-Tree",
        "实时更新",
        "高效查询"
      ],
      "hypothetical_question": "DolphinDB的主键存储引擎（PKEY）是如何实现主键唯一性保证和高效查询的？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db/tiered_storage.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db/tiered_storage.md",
      "start_line": 1,
      "end_line": 212,
      "summary": "DolphinDB的分级存储功能允许将冷数据从高速磁盘迁移到低速磁盘或云端，以优化资源使用，支持自动和手动迁移机制，并提供了详细的数据保留和迁移策略配置方法。",
      "keywords": [
        "分级存储",
        "数据迁移",
        "数据保留策略",
        "DolphinDB",
        "冷数据"
      ],
      "hypothetical_question": "DolphinDB如何实现分级存储以及如何配置数据迁移策略？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db/transaction.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db/transaction.md",
      "start_line": 1,
      "end_line": 197,
      "summary": "DolphinDB通过两阶段提交（2PC）和多版本并发控制（MVCC）机制实现分布式事务，确保事务的原子性、一致性、隔离性和持久性，并支持高可用性和多副本写入控制。",
      "keywords": [
        "分布式事务",
        "两阶段提交",
        "MVCC",
        "高可用性",
        "多副本写入"
      ],
      "hypothetical_question": "DolphinDB如何实现分布式事务的高可用性和数据一致性？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db_man/web/GettingStart.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db_man/web/GettingStart.md",
      "start_line": 1,
      "end_line": 205,
      "summary": "本文档介绍了如何配置、登录和启动DolphinDB集群，包括相关配置文件的设置、Web客户端访问方法以及Linux和Windows环境下的启动步骤。",
      "keywords": [
        "DolphinDB",
        "集群配置",
        "启动集群",
        "Web客户端",
        "防火墙设置"
      ],
      "hypothetical_question": "如何在Linux和Windows环境下配置和启动DolphinDB集群？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db/vectordb.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db/vectordb.md",
      "start_line": 1,
      "end_line": 153,
      "summary": "DolphinDB 3.00.1版本引入了基于TSDB存储引擎的向量存储引擎（VectorDB），支持向量索引的持久化存储、高效近似最近邻搜索和混合搜索，适用于多种应用场景。",
      "keywords": [
        "DolphinDB",
        "VectorDB",
        "向量索引",
        "近似最近邻搜索",
        "TSDB"
      ],
      "hypothetical_question": "DolphinDB的VectorDB支持哪些向量索引类型及其适用场景？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db_man/web/Shell.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db_man/web/Shell.md",
      "start_line": 1,
      "end_line": 168,
      "summary": "介绍DolphinDB Web交互编程界面的功能，包括编辑器、变量浏览器、数据浏览器、日志浏览器和数据库浏览器的使用方法及注意事项。",
      "keywords": [
        "DolphinDB",
        "交互编程",
        "数据库浏览器",
        "数据浏览器",
        "编辑器"
      ],
      "hypothetical_question": "DolphinDB Web交互编程界面包含哪些功能组件及其使用方法？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db_man/web/access_man.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db_man/web/access_man.md",
      "start_line": 1,
      "end_line": 214,
      "summary": "DolphinDB Web集群管理界面中管理员如何进行用户和用户组的创建、删除、修改及权限设置。",
      "keywords": [
        "权限管理",
        "用户管理",
        "组管理",
        "DolphinDB",
        "Web集群管理"
      ],
      "hypothetical_question": "如何在DolphinDB Web集群管理界面中管理用户和用户组的权限？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db_man/web/cep.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db_man/web/cep.md",
      "start_line": 1,
      "end_line": 45,
      "summary": "介绍 DolphinDB CEP 流计算引擎状态的监控页面功能，包括引擎信息、数据视图和发送事件到引擎的操作。",
      "keywords": [
        "CEP",
        "流计算引擎",
        "监控",
        "数据视图",
        "事件发送"
      ],
      "hypothetical_question": "如何在 DolphinDB 中监控和操作 CEP 流计算引擎的状态？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db/tsdb.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db/tsdb.md",
      "start_line": 1,
      "end_line": 544,
      "summary": "DolphinDB TSDB 存储引擎专为时序数据优化，采用 LSM-Tree 结构和排序列索引，支持高效写入、查询、更新和删除操作，并提供数据压缩和去重功能。",
      "keywords": [
        "TSDB",
        "LSM-Tree",
        "时序数据",
        "排序列",
        "数据压缩"
      ],
      "hypothetical_question": "DolphinDB TSDB 存储引擎如何优化时序数据的存储和查询性能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db_man/web/log.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db_man/web/log.md",
      "start_line": 1,
      "end_line": 9,
      "summary": "介绍如何通过日志查看界面查看当前节点的日志信息。",
      "keywords": [
        "日志",
        "查看",
        "节点",
        "界面"
      ],
      "hypothetical_question": "如何在DolphinDB中查看当前节点的日志信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db_man/web/cluster_overview.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db_man/web/cluster_overview.md",
      "start_line": 1,
      "end_line": 42,
      "summary": "DolphinDB集群总览界面功能及操作指南，包括代理节点列表、工具栏功能和性能监控面板的使用。",
      "keywords": [
        "集群总览",
        "代理节点",
        "性能监控"
      ],
      "hypothetical_question": "DolphinDB集群总览界面有哪些主要功能和操作？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db_man/web/intro.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db_man/web/intro.md",
      "start_line": 1,
      "end_line": 16,
      "summary": "DolphinDB Web集群管理器允许用户通过Web界面管理集群中的代理节点、数据节点和计算节点，并提供了浏览器版本要求。",
      "keywords": [
        "DolphinDB",
        "Web集群管理器",
        "浏览器要求"
      ],
      "hypothetical_question": "如何使用DolphinDB的Web集群管理器管理集群节点？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db_man/web/feature_settings.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db_man/web/feature_settings.md",
      "start_line": 1,
      "end_line": 99,
      "summary": "介绍DolphinDB中金融和物联网库表向导的功能设置及使用步骤。",
      "keywords": [
        "金融库表向导",
        "物联网库表向导",
        "建库信息",
        "建表信息",
        "脚本预览"
      ],
      "hypothetical_question": "如何在DolphinDB中配置和使用金融和物联网库表向导功能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db_man/web/job_man.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db_man/web/job_man.md",
      "start_line": 1,
      "end_line": 16,
      "summary": "DolphinDB Web端的作业管理界面功能及其分类介绍。",
      "keywords": [
        "作业管理",
        "Web端",
        "运行中作业",
        "已提交作业",
        "已定时作业"
      ],
      "hypothetical_question": "DolphinDB Web端的作业管理界面有哪些功能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db_man/web/plugin_management.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db_man/web/plugin_management.md",
      "start_line": 1,
      "end_line": 83,
      "summary": "DolphinDB插件管理功能允许管理员在集群中统一管理插件，包括查看、安装、加载和同步插件。",
      "keywords": [
        "插件管理",
        "DolphinDB",
        "集群管理"
      ],
      "hypothetical_question": "如何在DolphinDB集群中统一管理插件？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db_man/web/cfg_man.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db_man/web/cfg_man.md",
      "start_line": 1,
      "end_line": 142,
      "summary": "该文档详细介绍了DolphinDB的配置管理功能，包括控制节点配置、集群节点管理、集群节点配置和计算组配置的操作方法。",
      "keywords": [
        "DolphinDB",
        "配置管理",
        "集群节点",
        "控制节点",
        "计算组"
      ],
      "hypothetical_question": "如何在DolphinDB中进行控制节点和集群节点的配置管理？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db_man/web/git_multiple_tabs.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db_man/web/git_multiple_tabs.md",
      "start_line": 1,
      "end_line": 164,
      "summary": "DolphinDB Web集群管理器新增了多标签页编辑器和Git集成功能，以提升代码管理和开发效率。",
      "keywords": [
        "DolphinDB",
        "多标签页",
        "Git集成",
        "代码管理",
        "Web集群管理器"
      ],
      "hypothetical_question": "DolphinDB Web集群管理器如何通过多标签页和Git集成提升代码管理效率？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db_man/web/kafka_mqtt.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db_man/web/kafka_mqtt.md",
      "start_line": 1,
      "end_line": 245,
      "summary": "DolphinDB数据采集平台支持MQTT和Kafka协议，提供连接管理、订阅管理和解析模板功能，简化数据采集流程。",
      "keywords": [
        "数据采集",
        "MQTT",
        "Kafka",
        "订阅管理",
        "解析模板"
      ],
      "hypothetical_question": "DolphinDB数据采集平台支持哪些协议，并提供哪些主要功能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db_man/web/querybuilder.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db_man/web/querybuilder.md",
      "start_line": 1,
      "end_line": 337,
      "summary": "DolphinDB Web界面提供了查询向导和脚本查询两种方式，支持用户通过表单或直接编写SQL进行数据查询、预览和导出。",
      "keywords": [
        "查询向导",
        "脚本查询",
        "SQL语句",
        "数据导出",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB Web界面中使用查询向导和脚本查询功能进行数据查询和导出？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db_man/web/stream_graph.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db_man/web/stream_graph.md",
      "start_line": 1,
      "end_line": 47,
      "summary": "DolphinDB流图监控模块功能及操作指南，包括流图基本信息查看、删除操作和可视化展示。",
      "keywords": [
        "流图监控",
        "Orca",
        "可视化",
        "检查点",
        "配置"
      ],
      "hypothetical_question": "如何在DolphinDB中监控和管理通过Orca创建的流图任务？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db_man/web/regulr_inspection.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db_man/web/regulr_inspection.md",
      "start_line": 1,
      "end_line": 94,
      "summary": "DolphinDB 3.00.2.2版本引入了定时巡检功能，支持通过Web页面配置巡检计划、设置巡检指标、查看报告和日志，并提供邮件告警功能。",
      "keywords": [
        "定时巡检",
        "DolphinDB",
        "邮件告警",
        "巡检指标",
        "Web页面"
      ],
      "hypothetical_question": "如何在DolphinDB中设置和管理定时巡检功能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db_man/web/stream_monitor.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db_man/web/stream_monitor.md",
      "start_line": 1,
      "end_line": 96,
      "summary": "DolphinDB流计算监控功能详解，包括发布订阅状态、引擎状态和流数据表状态的监控与管理。",
      "keywords": [
        "流计算监控",
        "发布订阅状态",
        "流计算引擎",
        "流数据表",
        "持久化"
      ],
      "hypothetical_question": "DolphinDB中如何监控和管理流计算任务的状态？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db_oper/FunctionView.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db_oper/FunctionView.md",
      "start_line": 1,
      "end_line": 142,
      "summary": "函数视图是DolphinDB中封装数据库访问和计算语句的自定义函数，允许无直接权限的用户通过执行视图间接获取数据结果。",
      "keywords": [
        "函数视图",
        "DolphinDB",
        "权限控制",
        "自定义函数",
        "模块封装"
      ],
      "hypothetical_question": "DolphinDB中如何通过函数视图实现无权限用户间接访问数据库数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db_oper/binary_records_import.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db_oper/binary_records_import.md",
      "start_line": 1,
      "end_line": 98,
      "summary": "DolphinDB中如何导入和导出二进制记录文件，包括数据准备、内存清洗和入库的详细步骤。",
      "keywords": [
        "二进制记录导入",
        "writeRecord",
        "loadRecord",
        "readRecord!",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中导入和导出二进制记录文件？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db_oper/add_partitions.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db_oper/add_partitions.md",
      "start_line": 1,
      "end_line": 78,
      "summary": "DolphinDB支持为值分区或范围分区的数据库添加分区，并提供了自动和手动两种方式来实现分区扩展。",
      "keywords": [
        "DolphinDB",
        "分区扩展",
        "值分区",
        "范围分区",
        "addValuePartitions"
      ],
      "hypothetical_question": "如何在DolphinDB中为值分区或范围分区的数据库添加分区？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db_oper/drop_partitions.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db_oper/drop_partitions.md",
      "start_line": 1,
      "end_line": 147,
      "summary": "DolphinDB 提供了 dropPartition 函数来删除分区数据或分区结构，支持多种删除方式和条件。",
      "keywords": [
        "dropPartition",
        "分区删除",
        "VALUE 分区",
        "分区结构",
        "分区数据"
      ],
      "hypothetical_question": "如何在 DolphinDB 中删除分区数据或分区结构？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db_oper/create_db_tb.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db_oper/create_db_tb.md",
      "start_line": 1,
      "end_line": 218,
      "summary": "介绍在DolphinDB中如何通过SQL语句和函数创建分布式数据库、内存数据库以及不同类型的表（分区表、维度表、内存表等）。",
      "keywords": [
        "DolphinDB",
        "创建数据库",
        "创建表",
        "分布式数据库",
        "内存数据库"
      ],
      "hypothetical_question": "如何在DolphinDB中创建分布式数据库和内存数据库？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db_oper/import_data.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db_oper/import_data.md",
      "start_line": 1,
      "end_line": 227,
      "summary": "介绍了DolphinDB中从外部数据源迁移数据的四种方法：文本文件导入、HDF5插件导入、ODBC插件导入和MySQL插件导入。",
      "keywords": [
        "数据迁移",
        "文本文件",
        "HDF5插件",
        "ODBC插件",
        "MySQL插件"
      ],
      "hypothetical_question": "DolphinDB支持哪些方法从外部数据源迁移数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db_oper/drop_db_tb.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db_oper/drop_db_tb.md",
      "start_line": 1,
      "end_line": 111,
      "summary": "DolphinDB提供了多种删除数据的方法，包括SQL语句和函数方法，以及它们的适用场景和注意事项。",
      "keywords": [
        "删除数据",
        "SQL语句",
        "truncate函数",
        "内存表",
        "分布式表"
      ],
      "hypothetical_question": "DolphinDB中有哪些删除数据的方法及其适用场景？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/deploy/deploy_intro.md",
      "chunk_id": "0",
      "source_document": "./documentation/deploy/deploy_intro.md",
      "start_line": 1,
      "end_line": 133,
      "summary": "DolphinDB部署指南，包括系统安装、配置、使用及常见问题解决方法。",
      "keywords": [
        "DolphinDB",
        "部署",
        "集群",
        "安装",
        "配置"
      ],
      "hypothetical_question": "如何部署和配置DolphinDB系统？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db_oper/data_import_method.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db_oper/data_import_method.md",
      "start_line": 1,
      "end_line": 93,
      "summary": "DolphinDB提供了多种数据导入导出方法，包括内置函数、插件和工具，支持从文本文件、二进制文件、JSON文件以及第三方数据库等多种数据源导入数据。",
      "keywords": [
        "数据导入",
        "DolphinDB",
        "插件",
        "内置函数",
        "数据导出"
      ],
      "hypothetical_question": "DolphinDB支持哪些数据导入和导出的方法？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S00001.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S00001.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "DolphinDB流数据订阅和发布功能未启用时的错误代码S00001及其解决方法。",
      "keywords": [
        "S00001",
        "流数据",
        "订阅",
        "发布",
        "配置"
      ],
      "hypothetical_question": "DolphinDB中出现S00001错误代码时应该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db_oper/queries.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db_oper/queries.md",
      "start_line": 1,
      "end_line": 327,
      "summary": "DolphinDB SQL 查询数据的方法，包括内存表和分布式表的查询、关联查询、分组子句以及查询优化技巧。",
      "keywords": [
        "DolphinDB",
        "SQL查询",
        "分布式表",
        "关联查询",
        "查询优化"
      ],
      "hypothetical_question": "如何在 DolphinDB 中进行高效的 SQL 查询和优化？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db_oper/hdf5_files_import.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db_oper/hdf5_files_import.md",
      "start_line": 1,
      "end_line": 440,
      "summary": "DolphinDB HDF5插件支持将HDF5文件导入数据库，提供多种函数和参数用于数据加载、清洗、预处理和并行导入。",
      "keywords": [
        "HDF5",
        "DolphinDB",
        "数据导入",
        "数据清洗",
        "并行导入"
      ],
      "hypothetical_question": "如何使用DolphinDB导入和处理HDF5文件中的数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db_oper/text_files_import.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db_oper/text_files_import.md",
      "start_line": 1,
      "end_line": 1000,
      "summary": "DolphinDB提供了多种文本文件导入方法，包括内置函数如loadText、ploadText、loadTextEx和textChunkDS，支持数据清洗、格式处理和并行导入等功能。",
      "keywords": [
        "DolphinDB",
        "文本文件导入",
        "数据清洗",
        "并行导入",
        "schema"
      ],
      "hypothetical_question": "如何在DolphinDB中高效导入和处理大型文本文件？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db_oper/insert_data.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db_oper/insert_data.md",
      "start_line": 1,
      "end_line": 321,
      "summary": "DolphinDB提供了多种插入数据的方法，包括INSERT INTO语句、append!函数和tableInsert函数，并详细介绍了向分布式表插入数据的注意事项和常见问题解答。",
      "keywords": [
        "INSERT INTO",
        "append!函数",
        "tableInsert函数",
        "分布式表",
        "数据插入"
      ],
      "hypothetical_question": "DolphinDB中有哪些方法可以向表中插入数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/db_oper/parquet_files_import.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/db_oper/parquet_files_import.md",
      "start_line": 1,
      "end_line": 311,
      "summary": "本文介绍了如何使用DolphinDB的Parquet插件导入Parquet文件，包括插件安装、文件加载函数、数据导入格式处理、数据清洗与预处理以及并行导入等内容。",
      "keywords": [
        "Parquet插件",
        "数据导入",
        "DolphinDB",
        "数据清洗",
        "并行导入"
      ],
      "hypothetical_question": "如何在DolphinDB中使用Parquet插件导入Parquet文件并进行数据清洗？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S00007.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S00007.md",
      "start_line": 1,
      "end_line": 39,
      "summary": "DolphinDB错误代码S00007的报错信息、原因及解决办法。",
      "keywords": [
        "DolphinDB",
        "错误代码",
        "S00007",
        "网络错误",
        "消息协议"
      ],
      "hypothetical_question": "DolphinDB出现错误代码S00007时应该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S00006.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S00006.md",
      "start_line": 1,
      "end_line": 32,
      "summary": "DolphinDB错误代码S00006表示已达到最大连接数限制，需关闭无用连接或增加maxConnections配置。",
      "keywords": [
        "S00006",
        "maxConnections",
        "连接数限制"
      ],
      "hypothetical_question": "DolphinDB报错'S00006: Maximum connections reached'该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S00002.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S00002.md",
      "start_line": 1,
      "end_line": 60,
      "summary": "当DolphinDB中的事务锁定分区时，其他事务无法使用该分区，导致错误S00002，可通过避免并行写入同一分区或调整atomic级别解决。",
      "keywords": [
        "DolphinDB",
        "事务锁定",
        "错误S00002",
        "并行写入",
        "setAtomicLevel"
      ],
      "hypothetical_question": "在DolphinDB中遇到错误S00002，提示分区被事务锁定时，应如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S00004.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S00004.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "DolphinDB错误代码S00004的报错信息、原因及解决办法。",
      "keywords": [
        "S00004",
        "套接字创建失败",
        "错误代码",
        "文件描述符限制",
        "内存不足"
      ],
      "hypothetical_question": "DolphinDB报错S00004（Couldn't create a socket with error code）的可能原因及解决办法是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S00003.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S00003.md",
      "start_line": 1,
      "end_line": 21,
      "summary": "当DolphinDB中一个表的SYMBOL字段的不同取值超过2,097,152个时，会报错S00003，解决办法是将该字段类型改为STRING。",
      "keywords": [
        "DolphinDB",
        "SYMBOL字段",
        "错误代码S00003",
        "字段类型",
        "STRING"
      ],
      "hypothetical_question": "DolphinDB中报错'S00003: One symbase's size can't exceed 2097152'时该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S00008.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S00008.md",
      "start_line": 1,
      "end_line": 53,
      "summary": "DolphinDB错误代码S00008的报错信息、原因及解决办法，涉及文件打开失败的问题。",
      "keywords": [
        "S00008",
        "文件打开失败",
        "submitJob",
        "权限不足",
        "内存分配失败"
      ],
      "hypothetical_question": "DolphinDB中错误代码S00008的报错信息、原因及解决办法是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01002.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01002.md",
      "start_line": 1,
      "end_line": 36,
      "summary": "错误代码S01002表示在使用addRangePartitions添加新分区时，newRanges字段的范围与已有分区范围重叠。",
      "keywords": [
        "addRangePartitions",
        "分区范围重叠",
        "S01002"
      ],
      "hypothetical_question": "如何解决使用addRangePartitions时出现的分区范围重叠错误S01002？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01001.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01001.md",
      "start_line": 1,
      "end_line": 18,
      "summary": "当使用VALUE分区方式时，分区列数据中不能含有空值，否则会报错S01001。",
      "keywords": [
        "错误代码",
        "分区列",
        "空值",
        "VALUE分区",
        "报错信息"
      ],
      "hypothetical_question": "在使用VALUE分区方式时，为什么会出现错误代码S01001？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01003.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01003.md",
      "start_line": 1,
      "end_line": 23,
      "summary": "错误代码S01003表示在尝试删除分区时，由于分区处于构建状态且无待执行的恢复任务，导致删除操作失败。",
      "keywords": [
        "错误代码",
        "分区删除",
        "构建状态"
      ],
      "hypothetical_question": "当出现错误代码S01003时，应该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01006.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01006.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "DolphinDB错误代码S01006表示分区信息过时，通常能自动恢复，可通过查询日志或执行SQL语句检查分区状态。",
      "keywords": [
        "S01006",
        "分区信息过时",
        "自动恢复",
        "SQL查询"
      ],
      "hypothetical_question": "DolphinDB错误代码S01006是什么意思，如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01005.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01005.md",
      "start_line": 1,
      "end_line": 20,
      "summary": "错误代码S01005表示脚本未在初始化的控制节点上执行，需检查节点连接和初始化状态。",
      "keywords": [
        "错误代码S01005",
        "控制节点",
        "初始化",
        "节点连接",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中错误代码S01005表示什么问题，如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01004.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01004.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "DolphinDB错误代码S01004的报错信息、原因及解决办法，涉及新增chunk时副本节点选择失败的问题。",
      "keywords": [
        "DolphinDB",
        "错误代码S01004",
        "chunk副本",
        "节点选择",
        "警告信息"
      ],
      "hypothetical_question": "DolphinDB中错误代码S01004的报错信息、原因及解决办法是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01012.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01012.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "错误代码S01012表示在事务过程中未找到chunk的可用副本，可能由于节点下线或版本不一致，并提供了解决方法。",
      "keywords": [
        "S01012",
        "chunk副本",
        "节点宕机",
        "getClusterChunksStatus"
      ],
      "hypothetical_question": "如何解决DolphinDB中错误代码S01012的问题？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01008.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01008.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "错误代码S01008表示在DolphinDB中执行chunk恢复任务时，无法找到满足条件的源节点和目的节点，并提供了可能的原因和解决办法。",
      "keywords": [
        "S01008",
        "chunk恢复",
        "源节点",
        "目的节点",
        "getClusterChunksStatus"
      ],
      "hypothetical_question": "DolphinDB中错误代码S01008表示什么错误，如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01009.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01009.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "错误代码S01009表示数据节点因未发送或处理心跳而被控制节点标记为offline状态，可能由节点宕机或网络问题引起。",
      "keywords": [
        "S01009",
        "节点宕机",
        "网络问题",
        "心跳检测",
        "offline状态"
      ],
      "hypothetical_question": "DolphinDB错误代码S01009表示什么问题，可能的原因和解决方法是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01015.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01015.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "错误代码S01015表示使用`append!`函数写入DFS表时，写入表与被写入表的列数不匹配。",
      "keywords": [
        "S01015",
        "append!",
        "DFS表",
        "列数不匹配"
      ],
      "hypothetical_question": "当使用`append!`函数写入DFS表时出现列数不匹配的错误代码是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01011.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01011.md",
      "start_line": 1,
      "end_line": 33,
      "summary": "DolphinDB错误代码S01011表示Raft WAL文件不完整，系统将尝试恢复该文件，并提供了可能的原因和解决办法。",
      "keywords": [
        "Raft WAL",
        "错误代码S01011",
        "DFSMaster",
        "StreamingHA",
        "磁盘损坏"
      ],
      "hypothetical_question": "DolphinDB报错S01011表示什么问题，该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01007.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01007.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "错误代码S01007表示在查询恢复任务状态时，某分区的任务失败，系统会进行重试，并提供了查看源节点日志以解决问题的建议。",
      "keywords": [
        "错误代码",
        "恢复任务",
        "分区ID",
        "重试"
      ],
      "hypothetical_question": "错误代码S01007表示什么错误，以及如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01016.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01016.md",
      "start_line": 1,
      "end_line": 22,
      "summary": "错误代码S01016的报错信息、原因及解决办法，涉及分布式数据库写入数据时的分区问题。",
      "keywords": [
        "S01016",
        "分布式数据库",
        "分区方案",
        "newValuePartitionPolicy",
        "addValuePartitions"
      ],
      "hypothetical_question": "当向分区方式为VALUE的分布式数据库写入数据时，遇到错误代码S01016，应该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01020.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01020.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "错误代码S01020表示在通过分区方式备份时，指定的分区不存在于数据库中。",
      "keywords": [
        "错误代码",
        "分区备份",
        "分区不存在"
      ],
      "hypothetical_question": "在DolphinDB中，当通过分区方式备份时出现错误代码S01020，该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01013.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01013.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "当使用dropPartition函数且forceDelete=false时，若分区副本数不足会抛出S01013错误，并提供了检查和解决方法。",
      "keywords": [
        "dropPartition",
        "S01013",
        "副本数",
        "forceDelete",
        "分区删除"
      ],
      "hypothetical_question": "在使用dropPartition函数时，如果forceDelete=false且副本数不足，应该怎么处理？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01021.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01021.md",
      "start_line": 1,
      "end_line": 23,
      "summary": "当chunkGranularity设置为DATABASE时，仅支持SQL备份方式，因为分区备份不支持库级分区。",
      "keywords": [
        "S01021",
        "backup",
        "SQL备份",
        "库级分区"
      ],
      "hypothetical_question": "当chunkGranularity设置为DATABASE时，为什么只能使用SQL备份方式？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01018.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01018.md",
      "start_line": 1,
      "end_line": 20,
      "summary": "在VALUE分区方案下，DFS表的分区列不能包含不可见字符，如0-32及127的ASCII字符。",
      "keywords": [
        "VALUE分区",
        "不可见字符",
        "DFS表",
        "错误代码S01018"
      ],
      "hypothetical_question": "在DolphinDB中，使用VALUE分区方案时，为什么会出现错误代码S01018？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01014.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01014.md",
      "start_line": 1,
      "end_line": 35,
      "summary": "当使用`addColumn`添加列时，如果列名已存在于表中，会抛出错误S01014，并提供解决办法。",
      "keywords": [
        "addColumn",
        "错误代码S01014",
        "列名重复",
        "schema函数",
        "DolphinDB"
      ],
      "hypothetical_question": "在使用DolphinDB的`addColumn`函数时，如果列名已存在，应该如何处理？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01019.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01019.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "错误代码S01019表示在DolphinDB中因并发冲突导致无法自动添加新分区到数据库时的解决方案。",
      "keywords": [
        "错误代码S01019",
        "数据库分区",
        "并发冲突",
        "DolphinDB",
        "分区管理"
      ],
      "hypothetical_question": "在DolphinDB中遇到错误代码S01019时应该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01022.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01022.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "错误代码 S01022 表示在分区备份时，备份目录中已存在通过 SQL 方式备份的文件，导致备份失败。",
      "keywords": [
        "错误代码",
        "备份",
        "分区备份",
        "SQL备份",
        "备份目录"
      ],
      "hypothetical_question": "在 DolphinDB 中，错误代码 S01022 表示什么问题以及如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01023.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01023.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "当从集群尝试通过非异步复制方式向开启了集群间异步复制的分布式数据库写入数据时，会抛出S01023错误，解决办法包括避免此类写入或关闭目标数据库的异步复制。",
      "keywords": [
        "S01023",
        "集群间异步复制",
        "分布式数据库",
        "setDatabaseForClusterReplication"
      ],
      "hypothetical_question": "如何解决从集群尝试向开启了异步复制的分布式数据库写入数据时出现的S01023错误？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01025.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01025.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "错误代码S01025表示集群间异步复制时任务已完成或无效，可能由网络问题或节点重启引起，系统会回滚重复事务确保任务只执行一次。",
      "keywords": [
        "错误代码S01025",
        "集群异步复制",
        "任务回滚",
        "节点重启"
      ],
      "hypothetical_question": "DolphinDB报错S01025是什么原因，如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01024.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01024.md",
      "start_line": 1,
      "end_line": 21,
      "summary": "错误代码S01024表示特定函数只能在异步复制主集群或从集群的控制器上执行。",
      "keywords": [
        "S01024",
        "异步复制",
        "主集群",
        "从集群",
        "控制器"
      ],
      "hypothetical_question": "错误代码S01024表示什么问题，如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01027.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01027.md",
      "start_line": 1,
      "end_line": 21,
      "summary": "TSDB引擎在合并level文件时因内存不足抛出错误S01027，并提供了解决办法。",
      "keywords": [
        "TSDB",
        "内存不足",
        "错误代码",
        "level文件",
        "maxMemSize"
      ],
      "hypothetical_question": "TSDB引擎在合并level文件时出现内存不足错误S01027，应该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01028.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01028.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "TSDB缓存引擎在异步排序时发生内存不足错误（S01028），提供释放内存、停止占用内存任务和调整maxMemSize等解决方法。",
      "keywords": [
        "内存不足",
        "TSDB",
        "异步排序",
        "OOM",
        "maxMemSize"
      ],
      "hypothetical_question": "TSDB缓存引擎在异步排序时出现内存不足错误（S01028）该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01029.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01029.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "DolphinDB TSDB引擎在读取level file时失败的错误代码S01029及其原因和解决方法。",
      "keywords": [
        "S01029",
        "TSDB引擎",
        "level file",
        "数据文件损坏",
        "访问权限"
      ],
      "hypothetical_question": "DolphinDB报错S01029的原因是什么以及如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01026.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01026.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "DolphinDB错误代码S01026表示在CacheDumpTaskDispatcher执行过程中发生内存不足（OOM）错误，系统会定期重试，建议调整maxMemSize值来解决。",
      "keywords": [
        "S01026",
        "OOM",
        "CacheDumpTaskDispatcher",
        "maxMemSize",
        "TSDB"
      ],
      "hypothetical_question": "DolphinDB中出现错误代码S01026是什么意思，该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01035.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01035.md",
      "start_line": 1,
      "end_line": 20,
      "summary": "异步复制任务写入失败错误S01035的原因及解决方法。",
      "keywords": [
        "异步复制",
        "错误代码",
        "持久化",
        "任务跳过"
      ],
      "hypothetical_question": "如何处理DolphinDB中异步复制任务写入失败的错误S01035？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01036.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01036.md",
      "start_line": 1,
      "end_line": 21,
      "summary": "异步复制主集群数据节点在删除任务数据文件时遇到错误，需根据具体错误排查并手动删除文件后重启节点。",
      "keywords": [
        "异步复制",
        "错误代码",
        "文件删除",
        "数据节点"
      ],
      "hypothetical_question": "如何处理DolphinDB异步复制中删除任务数据文件失败的问题？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01030.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01030.md",
      "start_line": 1,
      "end_line": 23,
      "summary": "错误代码 S01030 表示分级存储初始化时 coldVolumes 文件路径格式不正确，需按照指定格式填写本地或 S3 路径。",
      "keywords": [
        "S01030",
        "coldVolumes",
        "文件路径格式",
        "分级存储",
        "错误代码"
      ],
      "hypothetical_question": "DolphinDB 错误代码 S01030 表示什么问题，如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01031.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01031.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "当配置使用S3卷的分级存储时，需要预先加载awss3插件以避免S01031错误。",
      "keywords": [
        "S01031",
        "awss3插件",
        "分级存储"
      ],
      "hypothetical_question": "如何解决DolphinDB中配置S3卷分级存储时出现的S01031错误？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01037.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01037.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "异步复制主集群数据节点打开任务数据文件失败的错误代码S01037及其解决办法。",
      "keywords": [
        "S01037",
        "异步复制",
        "数据文件",
        "错误排查"
      ],
      "hypothetical_question": "如何处理DolphinDB异步复制主集群数据节点打开任务数据文件失败的错误S01037？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01041.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01041.md",
      "start_line": 1,
      "end_line": 18,
      "summary": "异步复制从集群节点反序列化任务数据失败的错误代码S01041及其解决办法。",
      "keywords": [
        "S01041",
        "异步复制",
        "反序列化",
        "startClusterReplication"
      ],
      "hypothetical_question": "异步复制从集群节点反序列化任务数据失败的错误代码是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01038.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01038.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "异步复制从集群节点执行任务失败时的错误代码S01038及其解决方法。",
      "keywords": [
        "S01038",
        "异步复制",
        "从集群",
        "任务失败",
        "skipClusterReplicationTask"
      ],
      "hypothetical_question": "当DolphinDB异步复制从集群节点执行任务失败时，错误代码S01038的解决办法是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01043.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01043.md",
      "start_line": 1,
      "end_line": 21,
      "summary": "异步复制从集群节点执行队列任务失败导致复制停止的解决方法。",
      "keywords": [
        "异步复制",
        "错误代码",
        "任务失败",
        "回放停止"
      ],
      "hypothetical_question": "当DolphinDB异步复制从集群节点执行队列任务失败导致复制停止时，应该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01042.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01042.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "异步复制从集群节点反序列化任务元数据失败的错误代码S01042及其解决办法。",
      "keywords": [
        "S01042",
        "异步复制",
        "反序列化",
        "元数据",
        "startClusterReplication"
      ],
      "hypothetical_question": "异步复制从集群节点反序列化任务元数据失败时应该如何处理？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01032.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01032.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "当配置AWS S3 volume时未指定必要的S3配置参数（s3AccessKeyId, s3SecretAccessKey, s3Region）会导致错误S01032。",
      "keywords": [
        "S01032",
        "AWS S3",
        "coldVolumes",
        "s3AccessKeyId",
        "s3SecretAccessKey"
      ],
      "hypothetical_question": "在DolphinDB中配置coldVolumes时出现错误S01032，该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01039.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01039.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "异步复制从集群节点执行任务时发现任务已完成，系统自动去重并报错以确保数据正确性。",
      "keywords": [
        "异步复制",
        "任务去重",
        "错误代码S01039"
      ],
      "hypothetical_question": "当DolphinDB异步复制从集群节点执行任务时遇到错误代码S01039，是什么原因导致的？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01040.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01040.md",
      "start_line": 1,
      "end_line": 31,
      "summary": "异步复制从集群节点拉取任务数据时发现任务数据不存在，提供了查看失败任务和解决问题的步骤。",
      "keywords": [
        "异步复制",
        "任务数据不存在",
        "FAILED",
        "clusterReplicationWorkDir",
        "startClusterReplication"
      ],
      "hypothetical_question": "当DolphinDB异步复制从集群节点报错'S01040: Task data does not exist on site'时，应该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01044.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01044.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "异步复制从集群节点拉取任务数据时，任务数据还未持久化至磁盘，导致错误S01044，系统将在5秒后重试。",
      "keywords": [
        "异步复制",
        "持久化",
        "错误代码S01044",
        "从集群",
        "重试"
      ],
      "hypothetical_question": "异步复制过程中出现错误S01044，提示任务数据未持久化，该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01050.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01050.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "错误代码S01050表示在recovery过程中列文件的校验和不一致，需检查其他副本的校验和及日志分析损坏原因。",
      "keywords": [
        "S01050",
        "CRC32 check failed",
        "chunk recovery"
      ],
      "hypothetical_question": "DolphinDB错误代码S01050表示什么问题，如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01052.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01052.md",
      "start_line": 1,
      "end_line": 22,
      "summary": "OLAP缓存引擎在写入数据时发生OOM错误的原因及解决方法。",
      "keywords": [
        "OOM",
        "OLAP",
        "缓存引擎",
        "内存占用"
      ],
      "hypothetical_question": "OLAP缓存引擎在写入数据时出现OOM错误应该怎么解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01045.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01045.md",
      "start_line": 1,
      "end_line": 20,
      "summary": "错误代码S01045表示由于源节点上的chunk状态不正常，导致无法开始chunk recovery任务。",
      "keywords": [
        "S01045",
        "chunk recovery",
        "getAllChunks",
        "错误代码",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中错误代码S01045表示什么问题，如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01053.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01053.md",
      "start_line": 1,
      "end_line": 20,
      "summary": "OLAP引擎在读取列文件时，列文件中的行数与元数据中的行数不一致导致的错误。",
      "keywords": [
        "OLAP引擎",
        "行数不一致",
        "元数据"
      ],
      "hypothetical_question": "当OLAP引擎读取列文件时出现行数与元数据不一致的错误，应该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01051.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01051.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "错误代码S01051表示源节点上的chunk在增量恢复后状态不正确，多次重试后仍未恢复正常。",
      "keywords": [
        "S01051",
        "chunk recovery",
        "源节点",
        "状态不正确",
        "getAllChunks"
      ],
      "hypothetical_question": "错误代码S01051表示什么问题以及如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01054.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01054.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "OLAP引擎在读取列文件时发现列文件不存在，导致错误S01054。",
      "keywords": [
        "错误代码",
        "列文件不存在",
        "OLAP引擎"
      ],
      "hypothetical_question": "当OLAP引擎报错S01054时，可能是什么原因导致的？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01058.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01058.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "错误代码S01058表示在删除分区数据时，指定的参数类型与分区字段类型不匹配。",
      "keywords": [
        "S01058",
        "dropPartition",
        "分区类型",
        "schema函数"
      ],
      "hypothetical_question": "当使用dropPartition删除分区数据时出现S01058错误，应该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01057.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01057.md",
      "start_line": 1,
      "end_line": 18,
      "summary": "TSDB在合并levelfile时发生错误，错误代码为S01057，需根据报错信息和服务器日志进一步分析解决。",
      "keywords": [
        "S01057",
        "TSDB",
        "levelfile",
        "错误代码",
        "合并错误"
      ],
      "hypothetical_question": "TSDB在合并levelfile时出现错误代码S01057，应该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01064.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01064.md",
      "start_line": 1,
      "end_line": 22,
      "summary": "仅支持对OLAP引擎创建的分布式表进行列修改操作，否则会报错S01064。",
      "keywords": [
        "OLAP",
        "分布式表",
        "列修改",
        "错误代码"
      ],
      "hypothetical_question": "为什么在对分布式表进行列修改时会报错S01064？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01055.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01055.md",
      "start_line": 1,
      "end_line": 20,
      "summary": "错误代码S01055表示在写入数据时遇到磁盘满或无权限等操作系统问题，建议参考Linux错误号表排查并尝试使用flushTSDBCache写入数据。",
      "keywords": [
        "S01055",
        "磁盘满",
        "无权限",
        "flushTSDBCache",
        "Linux错误号"
      ],
      "hypothetical_question": "在DolphinDB中遇到错误代码S01055时应该如何处理？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01056.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01056.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "错误代码 S01056 表示在 dropPartition 操作中指定的所有分区路径都不存在，建议使用 getClusterChunksStatus 函数查看实际分区路径并调整参数。",
      "keywords": [
        "S01056",
        "dropPartition",
        "partitionPaths",
        "getClusterChunksStatus",
        "错误代码"
      ],
      "hypothetical_question": "当 DolphinDB 报错 'None of the specified partitions exist' 时，应该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01065.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01065.md",
      "start_line": 1,
      "end_line": 21,
      "summary": "分布式表修改列时，不能操作分区列，否则会报错S01065。",
      "keywords": [
        "分布式表",
        "分区列",
        "replaceColumn!",
        "dropColumns!",
        "rename!"
      ],
      "hypothetical_question": "在DolphinDB中修改分布式表的列时，为什么会出现错误S01065？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01062.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01062.md",
      "start_line": 1,
      "end_line": 18,
      "summary": "OLAP引擎中更新数据时创建硬链接失败的错误S01062及其解决方法。",
      "keywords": [
        "S01062",
        "OLAP引擎",
        "硬链接",
        "错误代码",
        "数据更新"
      ],
      "hypothetical_question": "OLAP引擎中更新数据时出现错误代码S01062，提示创建硬链接失败，该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01063.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01063.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "DolphinDB错误代码S01063的报错信息、原因及解决办法。",
      "keywords": [
        "S01063",
        "rollback log file",
        "permission denied",
        "too many open files",
        "no space left"
      ],
      "hypothetical_question": "DolphinDB报错S01063的原因及解决办法是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01059.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01059.md",
      "start_line": 1,
      "end_line": 18,
      "summary": "错误代码 S01059 表示函数 getTSDBCompactionTaskStatus 只能在数据节点或单节点模式下执行。",
      "keywords": [
        "S01059",
        "getTSDBCompactionTaskStatus",
        "TSDB",
        "DATANODE",
        "SINGLE mode"
      ],
      "hypothetical_question": "为什么执行 getTSDBCompactionTaskStatus 函数时会报错 S01059？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01060.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01060.md",
      "start_line": 1,
      "end_line": 18,
      "summary": "错误代码 S01060 表示在手动合并 TSDB 的 chunk 时，该 chunk 位于只读的 coldVolume 中，无法进行合并操作。",
      "keywords": [
        "S01060",
        "coldVolume",
        "TSDB",
        "chunk",
        "compaction"
      ],
      "hypothetical_question": "当尝试合并 TSDB 的 chunk 时遇到错误代码 S01060，该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01061.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01061.md",
      "start_line": 1,
      "end_line": 18,
      "summary": "数据节点生成 checkpoint 文件失败的错误代码 S01061 及其解决方法。",
      "keywords": [
        "S01061",
        "checkpoint",
        "数据节点",
        "错误代码",
        "报错信息"
      ],
      "hypothetical_question": "DolphinDB 错误代码 S01061 表示什么问题以及如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01067.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01067.md",
      "start_line": 1,
      "end_line": 34,
      "summary": "当在分布式分区表的分区列上应用函数时，该函数必须返回与分区列长度相同的向量或标量，否则会报错S01067。",
      "keywords": [
        "分布式分区表",
        "分区列",
        "函数返回值",
        "向量",
        "错误代码S01067"
      ],
      "hypothetical_question": "在DolphinDB中创建分布式分区表时，为什么会出现错误代码S01067？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01068.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01068.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "DolphinDB错误代码S01068表示在锁定.tbl或domain文件时失败，通常由于文件位于网络文件系统而非本地文件系统引起。",
      "keywords": [
        "S01068",
        "文件锁",
        "Network File System",
        "错误代码",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB错误代码S01068表示什么问题，如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S01069.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S01069.md",
      "start_line": 1,
      "end_line": 21,
      "summary": "错误代码 S01069 表示在备份或恢复到 S3 存储时，必须在配置文件中配置 s3AccessKeyId、s3SecretAccessKey 和 s3Region。",
      "keywords": [
        "S01069",
        "S3 备份",
        "配置文件"
      ],
      "hypothetical_question": "在 DolphinDB 中备份到 S3 存储时出现错误代码 S01069，该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02002.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02002.md",
      "start_line": 1,
      "end_line": 58,
      "summary": "错误代码S02002表示分布式表查询的元代码无法拆分成多个子查询，并提供了错误原因和解决办法。",
      "keywords": [
        "错误代码",
        "分布式查询",
        "SQL语句",
        "元代码",
        "子查询"
      ],
      "hypothetical_question": "在DolphinDB中，当出现错误代码S02002时，应该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02000.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02000.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "当使用DolphinDB的unpivot函数时，如果valueColNames参数指定的列数据类型不一致，会报错S02000。",
      "keywords": [
        "unpivot",
        "错误代码",
        "数据类型",
        "S02000"
      ],
      "hypothetical_question": "在DolphinDB中使用unpivot函数时，为什么会出现S02000错误？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02003.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02003.md",
      "start_line": 1,
      "end_line": 28,
      "summary": "错误代码S02003表示replay函数的inputTables参数不符合要求，必须是内存表、特定字典或DataSource。",
      "keywords": [
        "S02003",
        "replay",
        "inputTables",
        "内存表",
        "DataSource"
      ],
      "hypothetical_question": "DolphinDB错误代码S02003表示什么问题，如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02001.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02001.md",
      "start_line": 1,
      "end_line": 29,
      "summary": "DolphinDB错误代码S02001表示SQL语句中存在重复列名，并提供了错误原因和解决办法。",
      "keywords": [
        "DolphinDB",
        "错误代码",
        "重复列名",
        "SQL语句",
        "解决办法"
      ],
      "hypothetical_question": "DolphinDB报错'S02001: Duplicate column name'的原因和解决办法是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02004.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02004.md",
      "start_line": 1,
      "end_line": 32,
      "summary": "错误代码S02004表示在DolphinDB中使用loadTableBySQL函数时，参数sql生成的数据源为空，导致没有分区返回。",
      "keywords": [
        "S02004",
        "loadTableBySQL",
        "分区",
        "错误代码",
        "DolphinDB"
      ],
      "hypothetical_question": "在DolphinDB中遇到错误代码S02004时，应该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02007.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02007.md",
      "start_line": 1,
      "end_line": 34,
      "summary": "错误代码 S02007 表示无法通过列名直接访问 MVCC 表的数据，必须使用 SQL 查询。",
      "keywords": [
        "S02007",
        "MVCC",
        "SQL查询",
        "错误代码"
      ],
      "hypothetical_question": "为什么无法通过列名直接访问 MVCC 表的数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02005.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02005.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "错误代码S02005表示查询的列在表中不存在，需检查列名是否正确。",
      "keywords": [
        "错误代码",
        "列名不存在",
        "查询错误",
        "DolphinDB",
        "S02005"
      ],
      "hypothetical_question": "DolphinDB报错'S02005: Unrecognized column name'是什么原因？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02006.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02006.md",
      "start_line": 1,
      "end_line": 57,
      "summary": "DolphinDB中多表join时仅允许最外层使用分区表，否则会报错S02006，并提供了解决方案。",
      "keywords": [
        "DolphinDB",
        "多表join",
        "分区表",
        "错误代码S02006"
      ],
      "hypothetical_question": "在DolphinDB中进行多表join时，为什么会出现错误代码S02006，如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02011.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02011.md",
      "start_line": 1,
      "end_line": 31,
      "summary": "错误代码S02011表示SQL上下文未初始化，通常由不完整的select语句引起，需检查并补充缺失子句。",
      "keywords": [
        "错误代码",
        "SQL",
        "select语句",
        "DolphinDB",
        "报错信息"
      ],
      "hypothetical_question": "DolphinDB中错误代码S02011表示什么问题，如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02008.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02008.md",
      "start_line": 1,
      "end_line": 38,
      "summary": "DFS表不支持直接通过列名获取数据，必须使用SQL查询。",
      "keywords": [
        "DFS表",
        "错误代码S02008",
        "SQL查询",
        "分布式表"
      ],
      "hypothetical_question": "为什么在DolphinDB中直接通过列名获取DFS表数据会报错？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02012.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02012.md",
      "start_line": 1,
      "end_line": 29,
      "summary": "在DolphinDB 2.00.10之前的版本中，不支持`with as`定义的临时变量与脚本中其他变量重名，会导致错误S02012。",
      "keywords": [
        "DolphinDB",
        "错误代码",
        "S02012",
        "临时表",
        "变量重名"
      ],
      "hypothetical_question": "DolphinDB中错误代码S02012是什么原因导致的？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02013.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02013.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "错误代码S02013表示表连接函数的第一个参数必须是表，否则会触发错误。",
      "keywords": [
        "错误代码",
        "表连接函数",
        "leftTable",
        "DolphinDB",
        "ej"
      ],
      "hypothetical_question": "在DolphinDB中，当使用表连接函数时出现错误代码S02013，是什么原因导致的？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02014.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02014.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "错误代码S02014表示表连接函数的第二个参数必须是一个表，否则会触发错误。",
      "keywords": [
        "错误代码",
        "表连接函数",
        "S02014",
        "rightTable"
      ],
      "hypothetical_question": "DolphinDB中错误代码S02014表示什么问题？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02010.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02010.md",
      "start_line": 1,
      "end_line": 32,
      "summary": "DolphinDB错误代码S02010的报错信息、原因及解决办法，主要涉及表中列长度不一致的问题。",
      "keywords": [
        "DolphinDB",
        "错误代码",
        "列长度",
        "表构造",
        "SQL查询"
      ],
      "hypothetical_question": "DolphinDB中报错'S02010: All columns must be of the same length'的原因及如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02009.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02009.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "错误代码S02009表示流数据表不支持直接通过列名获取数据，必须使用SQL查询。",
      "keywords": [
        "错误代码",
        "流数据表",
        "SQL查询",
        "S02009",
        "发布订阅模式"
      ],
      "hypothetical_question": "为什么在DolphinDB中直接通过列名获取流数据表的数据会报错S02009？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02015_0.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02015_0.md",
      "start_line": 1,
      "end_line": 29,
      "summary": "在DolphinDB中，当在`pivot by`查询中使用`asis`函数时，若查询的表不是分布式分区表，会报错S02015。",
      "keywords": [
        "S02015",
        "pivot by",
        "asis",
        "DFS table",
        "DolphinDB"
      ],
      "hypothetical_question": "在DolphinDB中，为什么在使用`asis`函数和`pivot by`时会报错S02015？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02017.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02017.md",
      "start_line": 1,
      "end_line": 28,
      "summary": "错误代码S02017表示group by子句指定的列计算结果的行数与select查询列的行数不一致，导致报错。",
      "keywords": [
        "错误代码",
        "group by",
        "行数不一致",
        "报错信息"
      ],
      "hypothetical_question": "当DolphinDB中出现错误代码S02017时，是什么原因导致的？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02016.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02016.md",
      "start_line": 1,
      "end_line": 32,
      "summary": "错误代码S02016表示在标准SQL多表连接中错误使用逗号导致的问题，建议使用CROSS JOIN替代。",
      "keywords": [
        "S02016",
        "SQL多表连接",
        "CROSS JOIN",
        "错误代码",
        "报错信息"
      ],
      "hypothetical_question": "在DolphinDB中，错误代码S02016表示什么问题以及如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02018.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02018.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "DolphinDB错误代码S02018表示在group by子句中使用了array vector类型的列，这是不被允许的。",
      "keywords": [
        "S02018",
        "group by",
        "array vector",
        "错误代码",
        "分组操作"
      ],
      "hypothetical_question": "DolphinDB中为什么不能在group by子句中使用array vector类型的列？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02019.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02019.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "DolphinDB错误代码S02019指出，在context by子句的csort中不能使用array vector类型的列进行排序。",
      "keywords": [
        "DolphinDB",
        "错误代码",
        "array vector",
        "排序",
        "csort"
      ],
      "hypothetical_question": "在DolphinDB中，为什么在context by子句的csort中不能使用array vector类型的列进行排序？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02020.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02020.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "当group by子句指定的列不是向量时，DolphinDB会报错S02020，并提供解决办法。",
      "keywords": [
        "DolphinDB",
        "错误代码",
        "group by",
        "向量",
        "报错"
      ],
      "hypothetical_question": "DolphinDB中报错'S02020: The grouping column [xxx] must be a vector'的原因是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02023.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02023.md",
      "start_line": 1,
      "end_line": 33,
      "summary": "在DolphinDB中使用group by子句时，若select子句生成array vector必须搭配toArray函数，否则会报错S02023。",
      "keywords": [
        "DolphinDB",
        "array vector",
        "toArray",
        "group by",
        "error S02023"
      ],
      "hypothetical_question": "在DolphinDB中，为什么在使用group by子句时select子句生成array vector会报错S02023？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02022.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02022.md",
      "start_line": 1,
      "end_line": 31,
      "summary": "解释了错误代码S02022的原因，即在group by查询中未使用聚合函数导致的错误，并提供了解决办法。",
      "keywords": [
        "错误代码S02022",
        "group by",
        "聚合函数",
        "DolphinDB"
      ],
      "hypothetical_question": "在DolphinDB中使用group by查询时出现错误代码S02022，应该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02021.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02021.md",
      "start_line": 1,
      "end_line": 31,
      "summary": "DolphinDB错误代码S02021指出，GROUP BY子句后的HAVING条件必须是一个布尔表达式，否则会报错。",
      "keywords": [
        "DolphinDB",
        "错误代码S02021",
        "HAVING子句",
        "布尔表达式",
        "GROUP BY"
      ],
      "hypothetical_question": "在DolphinDB中，当GROUP BY子句后的HAVING条件不是布尔表达式时，会出现什么错误？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02024.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02024.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "DolphinDB错误代码S02024表示数组向量不支持STRING或SYMBOL类型，在group by查询中对这些类型应用生成数组向量的函数会导致错误。",
      "keywords": [
        "S02024",
        "数组向量",
        "STRING类型",
        "SYMBOL类型",
        "group by查询"
      ],
      "hypothetical_question": "在DolphinDB中，为什么在group by查询中对STRING或SYMBOL类型应用生成数组向量的函数会报错？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02025.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02025.md",
      "start_line": 1,
      "end_line": 35,
      "summary": "分布式分区表查询中不允许在 WHERE 子句中使用聚合函数或序列函数，并提供了相应的解决办法。",
      "keywords": [
        "分布式查询",
        "WHERE子句",
        "聚合函数",
        "序列函数",
        "解决办法"
      ],
      "hypothetical_question": "在DolphinDB中，为什么不能在分布式分区表查询的WHERE子句中使用聚合函数或序列函数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02030.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02030.md",
      "start_line": 1,
      "end_line": 28,
      "summary": "在 DolphinDB 中，使用 pivot by 查询时 select 子句不支持 toArray 函数，会导致错误代码 S02030。",
      "keywords": [
        "DolphinDB",
        "pivot by",
        "toArray",
        "error code",
        "S02030"
      ],
      "hypothetical_question": "为什么在 DolphinDB 中使用 pivot by 查询时 select 子句不能使用 toArray 函数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02026.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02026.md",
      "start_line": 1,
      "end_line": 28,
      "summary": "错误代码S02026指出，在context by查询中不能使用计算结果为向量的聚合函数如toArray和distinct。",
      "keywords": [
        "错误代码",
        "context by",
        "聚合函数",
        "toArray",
        "distinct"
      ],
      "hypothetical_question": "在DolphinDB中使用context by查询时，哪些函数会导致S02026错误？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02029.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02029.md",
      "start_line": 1,
      "end_line": 33,
      "summary": "DolphinDB错误代码S02029表示在PIVOT BY查询中使用了需要多个参数的函数（如rowAvg、rowStd、rowVar）导致报错。",
      "keywords": [
        "DolphinDB",
        "错误代码",
        "PIVOT BY",
        "rowAvg",
        "rowStd"
      ],
      "hypothetical_question": "在DolphinDB中使用PIVOT BY时为什么会出现S02029错误？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02028.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02028.md",
      "start_line": 1,
      "end_line": 31,
      "summary": "当在DolphinDB中使用PIVOT BY时，row系列函数只能接受一个参数，否则会报错S02028。",
      "keywords": [
        "DolphinDB",
        "PIVOT BY",
        "row系列函数",
        "错误代码S02028"
      ],
      "hypothetical_question": "在DolphinDB中使用PIVOT BY时，为什么row系列函数只能传入一个参数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02031.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02031.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "在DolphinDB中，当使用PIVOT BY时，select子句中的ffill、bfill或lfill函数只能传递一个参数，否则会报错S02031。",
      "keywords": [
        "DolphinDB",
        "PIVOT BY",
        "ffill",
        "错误代码",
        "S02031"
      ],
      "hypothetical_question": "在DolphinDB中使用PIVOT BY时，为什么会出现错误代码S02031？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02027.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02027.md",
      "start_line": 1,
      "end_line": 36,
      "summary": "当在DolphinDB的context by查询中使用自定义函数时，若函数返回值的长度与分组后的组内数据长度不一致，会触发S02027错误。",
      "keywords": [
        "DolphinDB",
        "错误代码",
        "自定义函数",
        "context by",
        "S02027"
      ],
      "hypothetical_question": "在DolphinDB中，为什么在context by查询中使用自定义函数时会报错S02027？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02045.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02045.md",
      "start_line": 1,
      "end_line": 41,
      "summary": "DolphinDB错误代码S02045的报错信息、原因及解决办法，涉及分析函数与GROUP BY子句连用时的列引用问题。",
      "keywords": [
        "DolphinDB",
        "错误代码S02045",
        "GROUP BY",
        "分析函数",
        "PARTITION BY"
      ],
      "hypothetical_question": "当DolphinDB报错'The PARTITION/ORDER BY column must be included in the GROUP BY clause'时，应如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02044.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02044.md",
      "start_line": 1,
      "end_line": 42,
      "summary": "当查询语句中同时使用分析函数和GROUP BY语句时，若参数数量与预期不符，会抛出S02044错误。",
      "keywords": [
        "S02044",
        "分析函数",
        "GROUP BY",
        "错误代码",
        "参数数量"
      ],
      "hypothetical_question": "在DolphinDB中，当使用分析函数和GROUP BY语句时出现S02044错误，应该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02046.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02046.md",
      "start_line": 1,
      "end_line": 50,
      "summary": "DolphinDB错误代码S02046表示在WHERE子句、GROUP BY子句或聚合函数中不允许使用分析函数，并提供了解决方法。",
      "keywords": [
        "DolphinDB",
        "错误代码",
        "分析函数",
        "WHERE子句",
        "GROUP BY子句"
      ],
      "hypothetical_question": "在DolphinDB中，为什么在WHERE子句中使用分析函数会报错S02046？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02047.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02047.md",
      "start_line": 1,
      "end_line": 64,
      "summary": "DolphinDB中分析函数不能与CONTEXT BY或PIVOT BY语句同时使用的原因及解决方法。",
      "keywords": [
        "DolphinDB",
        "分析函数",
        "CONTEXT BY",
        "PIVOT BY",
        "错误代码"
      ],
      "hypothetical_question": "为什么在DolphinDB中分析函数不能与CONTEXT BY或PIVOT BY一起使用，以及如何解决这个问题？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02048.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02048.md",
      "start_line": 1,
      "end_line": 38,
      "summary": "DolphinDB错误代码S02048表示在分析函数的ORDER BY子句中不允许使用序列相关函数，因为这会导致结果不一致。",
      "keywords": [
        "DolphinDB",
        "错误代码",
        "序列相关函数",
        "ORDER BY",
        "分析函数"
      ],
      "hypothetical_question": "在DolphinDB中，为什么在分析函数的ORDER BY子句中不能使用序列相关函数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02049.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02049.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "错误代码S02049表示分析函数不支持指定的函数，并提供了错误原因和解决办法。",
      "keywords": [
        "错误代码",
        "分析函数",
        "SQL语句",
        "报错信息",
        "解决办法"
      ],
      "hypothetical_question": "当DolphinDB报错'S02049: Analytic function does not support function'时，该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02050.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02050.md",
      "start_line": 1,
      "end_line": 37,
      "summary": "在DolphinDB中使用pivot by时，查询列不能应用聚合函数、序列函数、行聚合函数或填充函数，否则会报错S02050。",
      "keywords": [
        "pivot by",
        "错误代码S02050",
        "聚合函数",
        "序列函数",
        "行聚合函数"
      ],
      "hypothetical_question": "在DolphinDB中使用pivot by时，哪些函数不能在查询列中使用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02051.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02051.md",
      "start_line": 1,
      "end_line": 36,
      "summary": "在DolphinDB中，使用EXEC执行查询时，PIVOT BY返回的矩阵结果不支持row系列函数，应改用SELECT。",
      "keywords": [
        "DolphinDB",
        "EXEC",
        "PIVOT BY",
        "row系列函数",
        "SELECT"
      ],
      "hypothetical_question": "在DolphinDB中，为什么使用EXEC执行带有PIVOT BY的查询时会报错S02051？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02054.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02054.md",
      "start_line": 1,
      "end_line": 47,
      "summary": "错误代码 S02054 表示无法修改只读表，并提供了错误原因和解决办法。",
      "keywords": [
        "S02054",
        "只读表",
        "错误代码",
        "DolphinDB"
      ],
      "hypothetical_question": "在 DolphinDB 中遇到 'Can't modify read only table' 错误时该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02053.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02053.md",
      "start_line": 1,
      "end_line": 36,
      "summary": "当SQL语句中使用DISTINCT关键字时，ORDER BY子句中的列必须包含在DISTINCT中，否则会报错S02053。",
      "keywords": [
        "DISTINCT",
        "ORDER BY",
        "SQL错误",
        "S02053"
      ],
      "hypothetical_question": "为什么在使用DISTINCT关键字的SQL语句中，ORDER BY子句会报错S02053？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02052.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02052.md",
      "start_line": 1,
      "end_line": 46,
      "summary": "在DolphinDB中使用`asis`函数时，`pivot by`子句的最后一列必须是分区列，否则会报错S02052。",
      "keywords": [
        "DolphinDB",
        "asis函数",
        "pivot by",
        "分区列",
        "错误代码S02052"
      ],
      "hypothetical_question": "在DolphinDB中使用`asis`函数时，为什么`pivot by`子句的最后一列必须是分区列？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02055.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02055.md",
      "start_line": 1,
      "end_line": 36,
      "summary": "DISTINCT关键字不能与GROUP BY、CONTEXT BY或PIVOT BY子句同时使用，因为它们都用于去重。",
      "keywords": [
        "DISTINCT",
        "GROUP BY",
        "CONTEXT BY",
        "PIVOT BY",
        "SQL错误"
      ],
      "hypothetical_question": "为什么在使用DISTINCT关键字时不能同时使用GROUP BY子句？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S03000.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S03000.md",
      "start_line": 1,
      "end_line": 42,
      "summary": "当尝试取消定义被订阅的流表时，需要先取消所有订阅才能成功执行。",
      "keywords": [
        "流表",
        "订阅",
        "取消定义",
        "unsubscribeTable",
        "getStreamingStat"
      ],
      "hypothetical_question": "如何解决无法取消定义流表的问题？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02056.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02056.md",
      "start_line": 1,
      "end_line": 42,
      "summary": "在DolphinDB分布式查询中，当LIMIT/TOP与GROUP BY/CONTEXT BY一起使用时，不支持设置起始位置，并提供了解决方案。",
      "keywords": [
        "DolphinDB",
        "分布式查询",
        "LIMIT",
        "GROUP BY",
        "错误代码"
      ],
      "hypothetical_question": "在DolphinDB中，当LIMIT/TOP与GROUP BY/CONTEXT BY一起使用时，为什么不能设置起始位置？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02057.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02057.md",
      "start_line": 1,
      "end_line": 31,
      "summary": "DolphinDB错误代码S02057表示在分布式查询中不允许使用'kendall'函数。",
      "keywords": [
        "DolphinDB",
        "错误代码",
        "kendall函数",
        "分布式查询",
        "分区表"
      ],
      "hypothetical_question": "在DolphinDB中，为什么在查询分区表时使用'kendall'函数会报错S02057？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S03001.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S03001.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "错误代码S03001表示流引擎名称重复，需更换名称或删除现有引擎。",
      "keywords": [
        "S03001",
        "流引擎",
        "错误代码",
        "重复名称",
        "dropStreamEngine"
      ],
      "hypothetical_question": "当遇到流引擎名称重复的错误S03001时，应该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S03003.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S03003.md",
      "start_line": 1,
      "end_line": 43,
      "summary": "当尝试删除流表时，必须取消所有订阅，否则会报错S03003，并提供解决方法。",
      "keywords": [
        "流表",
        "订阅",
        "dropStreamTable",
        "unsubscribeTable",
        "getStreamingStat"
      ],
      "hypothetical_question": "如何解决删除流表时出现的S03003错误？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S03006.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S03006.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "DolphinDB错误代码S03006的报错信息、原因及解决办法，涉及流表持久化功能未配置的问题。",
      "keywords": [
        "S03006",
        "流表持久化",
        "persistenceDir"
      ],
      "hypothetical_question": "DolphinDB报错S03006如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S03005.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S03005.md",
      "start_line": 1,
      "end_line": 42,
      "summary": "ReactiveStateEngine和DualOwnershipReactiveStateEngine的metrics参数不支持聚合函数，使用聚合函数会导致S03005错误。",
      "keywords": [
        "ReactiveStateEngine",
        "DualOwnershipReactiveStateEngine",
        "聚合函数",
        "S03005"
      ],
      "hypothetical_question": "为什么在使用ReactiveStateEngine时会出现S03005错误？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S03002.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S03002.md",
      "start_line": 1,
      "end_line": 31,
      "summary": "DolphinDB错误代码S03002表示在同一个节点上对相同表名的表进行订阅时使用了重复的任务名称，导致订阅主题重复。",
      "keywords": [
        "DolphinDB",
        "错误代码",
        "订阅表",
        "subscribeTable",
        "S03002"
      ],
      "hypothetical_question": "DolphinDB中错误代码S03002表示什么错误，以及如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S02059.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S02059.md",
      "start_line": 1,
      "end_line": 36,
      "summary": "当在分布式表查询或表连接查询中，select子句使用了表名后跟通配符“*”但from子句未包含该表时，会报错S02059。",
      "keywords": [
        "错误代码S02059",
        "分布式表查询",
        "表连接查询",
        "通配符",
        "from子句"
      ],
      "hypothetical_question": "在DolphinDB中，当select子句使用表名后跟通配符“*”时，为什么会出现错误代码S02059？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S03009.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S03009.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "错误代码S03009表示用户没有权限访问共享流表，需登录或联系管理员获取权限。",
      "keywords": [
        "S03009",
        "权限控制",
        "流表",
        "addAccessControl",
        "管理员"
      ],
      "hypothetical_question": "当DolphinDB报错'S03009: No access to shared table'时，该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S03007.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S03007.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "该文档解释了错误代码S03007的原因及解决方法，即订阅流表时需确保表存在、为流表且已共享。",
      "keywords": [
        "subscribeTable",
        "流表",
        "共享表",
        "错误代码",
        "S03007"
      ],
      "hypothetical_question": "为什么在DolphinDB中使用subscribeTable函数订阅表时会报错S03007，如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S03012.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S03012.md",
      "start_line": 1,
      "end_line": 32,
      "summary": "错误代码S03012表示插入流表时数据列数与流表schema不匹配，可能由数据插入或持久化流表时的schema不一致引起，并提供了相应的解决办法。",
      "keywords": [
        "S03012",
        "流表",
        "schema不一致",
        "数据插入",
        "enableTableShareAndPersistence"
      ],
      "hypothetical_question": "当DolphinDB报错S03012时，可能的原因是什么以及如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S03008.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S03008.md",
      "start_line": 1,
      "end_line": 20,
      "summary": "当节点的订阅功能未启用时，使用subscribeTable会抛出S03008错误，需在配置文件中将mode设置为支持订阅的datanode、single或computenode。",
      "keywords": [
        "S03008",
        "subscribeTable",
        "subscription",
        "mode",
        "configuration"
      ],
      "hypothetical_question": "如何解决DolphinDB中S03008订阅功能未启用的错误？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S03014.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S03014.md",
      "start_line": 1,
      "end_line": 23,
      "summary": "错误代码S03014表示时间序列引擎仅接受聚合函数作为计算指标。",
      "keywords": [
        "S03014",
        "时间序列引擎",
        "聚合函数",
        "createTimeSeriesEngine",
        "createSessionWindowEngine"
      ],
      "hypothetical_question": "当使用createTimeSeriesEngine或createSessionWindowEngine时，为什么会出现S03014错误？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S03013.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S03013.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "DolphinDB错误代码S03013的解析，涉及异构流表反序列化失败的原因及解决方法。",
      "keywords": [
        "S03013",
        "异构流表",
        "反序列化",
        "StreamFilter",
        "错误解析"
      ],
      "hypothetical_question": "DolphinDB中错误代码S03013表示什么问题，以及如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S03015.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S03015.md",
      "start_line": 1,
      "end_line": 37,
      "summary": "错误代码S03015表示在DolphinDB中，当使用createTimeSeriesEngine或createDailyTimeSeriesEngine函数时，fill参数的大小或类型与metrics参数不匹配。",
      "keywords": [
        "fill参数",
        "metrics",
        "createTimeSeriesEngine",
        "createDailyTimeSeriesEngine",
        "错误代码"
      ],
      "hypothetical_question": "在DolphinDB中，当fill参数与metrics参数不匹配时，会报什么错误？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S04001.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S04001.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "当对不存在的库或表设置权限时，DolphinDB会报错S04001，解决办法是先创建对应的库和表。",
      "keywords": [
        "错误代码",
        "权限设置",
        "数据库不存在",
        "表不存在",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中报错S04001的原因及解决办法是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S03016.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S03016.md",
      "start_line": 1,
      "end_line": 23,
      "summary": "错误代码 S03016 表示在没有专用 license 的情况下尝试调用 createOrderbookSnapshotEngine 函数。",
      "keywords": [
        "S03016",
        "createOrderbookSnapshotEngine",
        "license"
      ],
      "hypothetical_question": "为什么在调用 createOrderbookSnapshotEngine 时会出现 S03016 错误？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S03018.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S03018.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "错误代码S03018表示warmupStreamEngine仅支持响应式状态引擎、时间序列聚合引擎和日级时间序列引擎，并提供了解决办法。",
      "keywords": [
        "warmupStreamEngine",
        "错误代码S03018",
        "响应式状态引擎",
        "时间序列引擎",
        "流引擎"
      ],
      "hypothetical_question": "warmupStreamEngine支持哪些引擎？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S03019.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S03019.md",
      "start_line": 1,
      "end_line": 23,
      "summary": "错误代码S03019表示流表持久化过程中数据量超过压缩限制，可通过调整回放速率或分批插入数据解决。",
      "keywords": [
        "S03019",
        "流表持久化",
        "数据压缩",
        "回放速率",
        "分批插入"
      ],
      "hypothetical_question": "如何解决DolphinDB流表持久化过程中数据量超过压缩限制的问题？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S03017.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S03017.md",
      "start_line": 1,
      "end_line": 29,
      "summary": "DolphinDB错误代码S03017的报错信息、原因及解决办法，主要涉及流表插入数据时的数据类型不匹配问题。",
      "keywords": [
        "DolphinDB",
        "错误代码S03017",
        "流表",
        "数据类型",
        "schema不一致"
      ],
      "hypothetical_question": "DolphinDB中错误代码S03017的报错原因及解决办法是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S04004.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S04004.md",
      "start_line": 1,
      "end_line": 39,
      "summary": "非管理员用户在尝试设置超出允许范围的权限时会触发S04004错误，并提供了解决办法。",
      "keywords": [
        "S04004",
        "权限错误",
        "非管理员用户"
      ],
      "hypothetical_question": "当非管理员用户尝试设置超出允许范围的权限时，DolphinDB会报什么错误？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S04005.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S04005.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "非 admin 用户在没有足够权限时尝试设置数据库权限会触发错误代码 S04005，并提供了解决方法。",
      "keywords": [
        "错误代码",
        "权限管理",
        "DB_MANAGE"
      ],
      "hypothetical_question": "当非 admin 用户尝试设置数据库权限时出现错误代码 S04005，应该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S05000.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S05000.md",
      "start_line": 1,
      "end_line": 18,
      "summary": "当输入矩阵为奇异矩阵时，无法进行求逆操作，错误代码为S05000。",
      "keywords": [
        "奇异矩阵",
        "矩阵求逆",
        "错误代码S05000"
      ],
      "hypothetical_question": "在DolphinDB中，当出现错误代码S05000时，可能的原因是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S03020.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S03020.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "错误代码S03020表示在使用`getStreamingLeader`函数时，由于高可用分组未选出leader或存在未完成的高可用订阅重建而导致的错误，并提供了相应的解决办法。",
      "keywords": [
        "S03020",
        "getStreamingLeader",
        "高可用分组",
        "leader选举",
        "错误处理"
      ],
      "hypothetical_question": "在使用`getStreamingLeader`函数时遇到错误代码S03020，应该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S04003.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S04003.md",
      "start_line": 1,
      "end_line": 21,
      "summary": "错误代码S04003表示在设置DB_OWNER权限时使用了非法格式的权限字符串，必须以'dfs://'开头并以'*'结尾。",
      "keywords": [
        "错误代码",
        "DB_OWNER权限",
        "权限字符串格式",
        "S04003",
        "dfs://"
      ],
      "hypothetical_question": "在DolphinDB中设置DB_OWNER权限时，为什么会出现错误代码S04003？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S04002.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S04002.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "当赋予不存在的函数视图权限时，系统会报错S04002，并提供查看和添加函数视图的解决方法。",
      "keywords": [
        "S04002",
        "函数视图",
        "VIEW_EXEC权限",
        "错误代码",
        "DolphinDB"
      ],
      "hypothetical_question": "在DolphinDB中，当赋予不存在的函数视图权限时，系统会报什么错误以及如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S05003.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S05003.md",
      "start_line": 1,
      "end_line": 32,
      "summary": "解释DECIMAL类型数据在运算时因超出内部整型表示范围而报错的原因及解决方法。",
      "keywords": [
        "DECIMAL",
        "overflow",
        "error",
        "scale",
        "FLOAT"
      ],
      "hypothetical_question": "为什么在DolphinDB中DECIMAL类型数据运算时会报DECIMAL math overflow错误，以及如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S05001.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S05001.md",
      "start_line": 1,
      "end_line": 44,
      "summary": "DolphinDB中错误代码S05001的解释，涉及集合不支持随机访问的原因及解决方法。",
      "keywords": [
        "S05001",
        "集合",
        "随机访问",
        "错误处理",
        "DolphinDB"
      ],
      "hypothetical_question": "在DolphinDB中，为什么使用下标访问集合时会报错S05001，如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S05004.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S05004.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "错误代码S05004表示在向分布式表中写入数据时，列的数据类型与写入的数据类型不兼容。",
      "keywords": [
        "错误代码",
        "数据类型",
        "分布式表",
        "兼容性",
        "类型转换"
      ],
      "hypothetical_question": "在DolphinDB中，当向分布式表中写入数据时出现错误代码S05004，应该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S05005.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S05005.md",
      "start_line": 1,
      "end_line": 46,
      "summary": "解释了错误代码S05005的报错信息、原因及解决办法，主要涉及创建VOID类型向量的限制。",
      "keywords": [
        "错误代码S05005",
        "VOID向量",
        "NULL值处理"
      ],
      "hypothetical_question": "在DolphinDB中遇到错误代码S05005时应该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S05006.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S05006.md",
      "start_line": 1,
      "end_line": 33,
      "summary": "错误代码S05006表示在使用update!函数时，更新的列数与提供的值数量不匹配。",
      "keywords": [
        "错误代码",
        "update!函数",
        "列数不匹配",
        "DolphinDB"
      ],
      "hypothetical_question": "在使用DolphinDB的update!函数时，出现错误代码S05006是什么原因？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S05007.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S05007.md",
      "start_line": 1,
      "end_line": 36,
      "summary": "当使用upsert!函数时，如果输入的tuple元素长度不一致，会报错S05007，需确保元素长度一致。",
      "keywords": [
        "upsert!",
        "tuple",
        "错误代码",
        "S05007",
        "长度一致"
      ],
      "hypothetical_question": "在使用DolphinDB的upsert!函数时，如果输入的tuple元素长度不一致会报什么错误？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S05010.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S05010.md",
      "start_line": 1,
      "end_line": 34,
      "summary": "错误代码S05010表示DECIMAL类型的scale超出有效范围，文档提供了各DECIMAL类型的scale有效范围及解决方法。",
      "keywords": [
        "DECIMAL",
        "scale",
        "错误代码",
        "S05010",
        "范围"
      ],
      "hypothetical_question": "DolphinDB中错误代码S05010表示什么错误，如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S06000.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S06000.md",
      "start_line": 1,
      "end_line": 47,
      "summary": "错误代码S06000表示在DolphinDB的SQL update语句中，列名后缺少等号（=）或冒号（:）。",
      "keywords": [
        "S06000",
        "update",
        "SQL",
        "错误代码",
        "语法错误"
      ],
      "hypothetical_question": "在DolphinDB中执行update语句时，出现错误'S06000: '=' or ':' is expected after the column name'，该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S06001.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S06001.md",
      "start_line": 1,
      "end_line": 34,
      "summary": "当函数调用时，如果一个参数使用了关键字传参，后续所有参数也必须使用关键字传参，否则会报错S06001。",
      "keywords": [
        "错误代码",
        "关键字传参",
        "函数调用"
      ],
      "hypothetical_question": "在DolphinDB中，函数调用时使用关键字传参需要注意什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S06004.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S06004.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "错误代码S06004表示函数或过程未定义，通常与全限定名访问函数有关。",
      "keywords": [
        "错误代码",
        "全限定名",
        "函数未定义"
      ],
      "hypothetical_question": "DolphinDB中错误代码S06004表示什么问题，如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s00009.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s00009.md",
      "start_line": 1,
      "end_line": 20,
      "summary": "当前用户因权限不足无法取消其他用户提交的后台任务，需登录原提交账号进行操作。",
      "keywords": [
        "S00009",
        "Access denied",
        "submitJob",
        "permissions",
        "jobs"
      ],
      "hypothetical_question": "为什么我无法取消其他用户提交的后台任务？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S06006.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S06006.md",
      "start_line": 1,
      "end_line": 34,
      "summary": "DolphinDB错误代码S06006表示尝试调用一个不可调用的对象，仅函数和xdb连接句柄是可调用的。",
      "keywords": [
        "S06006",
        "可调用对象",
        "函数",
        "xdb连接句柄",
        "错误处理"
      ],
      "hypothetical_question": "在DolphinDB中，当出现错误代码S06006时，应该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s00005.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s00005.md",
      "start_line": 1,
      "end_line": 22,
      "summary": "DolphinDB错误代码S00005表示服务器处于安全关机阶段，不接受新任务。",
      "keywords": [
        "S00005",
        "安全关机",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB错误代码S00005是什么意思？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S06003.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S06003.md",
      "start_line": 1,
      "end_line": 57,
      "summary": "错误代码S06003表示在DolphinDB中不允许在一个命名函数内部嵌套定义另一个命名函数，并提供了两种解决方法。",
      "keywords": [
        "S06003",
        "命名函数",
        "嵌套定义",
        "匿名函数",
        "DolphinDB"
      ],
      "hypothetical_question": "在DolphinDB中，当在一个命名函数内部嵌套定义另一个命名函数时，出现错误代码S06003，应该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S06002.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S06002.md",
      "start_line": 1,
      "end_line": 28,
      "summary": "在DolphinDB中，函数定义内不能使用'share'语句，否则会报错S06002，并提供两种解决方法。",
      "keywords": [
        "S06002",
        "share语句",
        "函数定义",
        "DolphinDB错误",
        "share函数"
      ],
      "hypothetical_question": "在DolphinDB中，为什么在函数定义内使用'share'语句会报错S06002，以及如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/S06005.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/S06005.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "当用户尝试定义与DolphinDB内置函数同名的自定义函数时，系统会报错S06005，提示不允许覆盖内置函数。",
      "keywords": [
        "错误代码",
        "内置函数",
        "自定义函数",
        "命名冲突"
      ],
      "hypothetical_question": "为什么在DolphinDB中定义名为now的自定义函数时会报错S06005？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/err_codes.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/err_codes.md",
      "start_line": 1,
      "end_line": 48,
      "summary": "DolphinDB数据库错误代码的结构、类别及其对应的报错信息说明。",
      "keywords": [
        "错误代码",
        "DolphinDB",
        "报错码"
      ],
      "hypothetical_question": "DolphinDB数据库的错误代码是如何分类和解释的？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s00011.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s00011.md",
      "start_line": 1,
      "end_line": 23,
      "summary": "错误代码S00011表示任务状态查询失败，原因是任务文件不存在或磁盘空间不足。",
      "keywords": [
        "S00011",
        "getJobStatusById",
        "getJobMessage",
        "batchJobs",
        "磁盘空间"
      ],
      "hypothetical_question": "当出现错误代码S00011时，应该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s00012.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s00012.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "错误代码S00012表示无法将任务添加到远程任务队列，通常由于远端节点宕机或网络问题导致。",
      "keywords": [
        "S00012",
        "远程任务队列",
        "节点宕机",
        "网络问题"
      ],
      "hypothetical_question": "DolphinDB错误代码S00012表示什么问题，如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s00010.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s00010.md",
      "start_line": 1,
      "end_line": 21,
      "summary": "当通过submitJob提交任务时，如果队列中任务数超过maxCachedBatchJobNum配置的上限，会报错S00010，并提供了两种解决办法。",
      "keywords": [
        "S00010",
        "submitJob",
        "maxCachedBatchJobNum",
        "batch job queue",
        "error code"
      ],
      "hypothetical_question": "当DolphinDB报错S00010时，该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s00014.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s00014.md",
      "start_line": 1,
      "end_line": 21,
      "summary": "DolphinDB错误代码S00014表示服务器版本不兼容，无法连接低一个大版本及以上的服务器，并提供了解决方案。",
      "keywords": [
        "S00014",
        "版本不兼容",
        "remoteRun",
        "remoteRunCompatible",
        "服务器连接"
      ],
      "hypothetical_question": "DolphinDB中遇到错误代码S00014时该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s00017.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s00017.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "错误代码S00017表示设备执行写入任务失败，可能由于磁盘满或权限问题导致。",
      "keywords": [
        "S00017",
        "diskIOConcurrencyLevel",
        "写入任务失败",
        "磁盘错误",
        "技术支持"
      ],
      "hypothetical_question": "DolphinDB错误代码S00017表示什么问题以及如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s00013.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s00013.md",
      "start_line": 1,
      "end_line": 22,
      "summary": "DolphinDB错误代码S00013的报错信息、原因及解决办法。",
      "keywords": [
        "S00013",
        "线程创建失败",
        "max user processes",
        "ulimit",
        "ps命令"
      ],
      "hypothetical_question": "DolphinDB报错'S00013: Failed to create a thread'时应该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s00015.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s00015.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "DolphinDB错误代码S00015表示反序列化时无法识别函数名，需确保报错节点存在该函数。",
      "keywords": [
        "错误代码",
        "反序列化",
        "函数定义",
        "DolphinDB",
        "S00015"
      ],
      "hypothetical_question": "DolphinDB报错'S00015: Cannot recognize function'是什么原因以及如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s00016.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s00016.md",
      "start_line": 1,
      "end_line": 32,
      "summary": "DolphinDB错误代码S00016表示任务队列深度超过6的上限，通常由多层RPC调用引起。",
      "keywords": [
        "S00016",
        "任务队列深度",
        "RPC调用",
        "错误代码",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中错误代码S00016表示什么问题，如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s00019.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s00019.md",
      "start_line": 1,
      "end_line": 18,
      "summary": "错误代码S00019表示通过TCP连接节点失败，需检查节点运行状态和网络连接。",
      "keywords": [
        "S00019",
        "TCP连接失败",
        "错误代码",
        "节点连接",
        "网络问题"
      ],
      "hypothetical_question": "当DolphinDB报错S00019时，应该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s00018.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s00018.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "解释了DolphinDB错误代码S00018的SSL错误原因及解决办法。",
      "keywords": [
        "S00018",
        "SSL error",
        "enableHTTPS",
        "OpenSSL",
        "HTTPS协议"
      ],
      "hypothetical_question": "DolphinDB出现SSL错误代码S00018时应该如何处理？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s00020.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s00020.md",
      "start_line": 1,
      "end_line": 59,
      "summary": "DolphinDB错误代码S00020的报错信息、原因分析及解决办法，包括网络错误、协议错误和不支持的协议类型。",
      "keywords": [
        "S00020",
        "IO error",
        "socket error"
      ],
      "hypothetical_question": "DolphinDB错误代码S00020的报错原因和解决办法是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s01000_0.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s01000_0.md",
      "start_line": 1,
      "end_line": 20,
      "summary": "DolphinDB错误代码S01000表示TSDB引擎在事务完成时写入缓存引擎失败，可能由于内存不足，建议清理缓存或增加内存配置。",
      "keywords": [
        "S01000",
        "TSDB",
        "OOM",
        "clearAllCache",
        "maxMemSize"
      ],
      "hypothetical_question": "DolphinDB报错S01000是什么原因，如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s01010.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s01010.md",
      "start_line": 1,
      "end_line": 20,
      "summary": "TSDB Cache Engine 因内存不足或磁盘空间问题无法刷新到磁盘时的错误代码 S01010 及其解决方法。",
      "keywords": [
        "S01010",
        "TSDB Cache Engine",
        "Out of Memory",
        "clearAllCache",
        "maxMemSize"
      ],
      "hypothetical_question": "当 DolphinDB 报错 S01010，提示 TSDB Cache Engine 无法刷新到磁盘时，应该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s01049.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s01049.md",
      "start_line": 1,
      "end_line": 21,
      "summary": "错误代码S01049表示节点通过DFS从其他节点拉取元数据失败，建议检查是否有节点下线并重新上线。",
      "keywords": [
        "S01049",
        "TSDBEngine",
        "元数据",
        "DFS",
        "节点下线"
      ],
      "hypothetical_question": "当DolphinDB报错S01049时，应该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s01034.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s01034.md",
      "start_line": 1,
      "end_line": 20,
      "summary": "TSDB在compact时发现分区不存在，可能已被删除，可通过getChunksMeta函数检查并忽略。",
      "keywords": [
        "TSDB",
        "compact",
        "分区不存在",
        "getChunksMeta"
      ],
      "hypothetical_question": "TSDB在compact时提示分区不存在，该如何处理？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s01071.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s01071.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "事务因超时未完成而被回滚的错误代码S01071及其相关信息。",
      "keywords": [
        "错误代码",
        "事务超时",
        "回滚操作"
      ],
      "hypothetical_question": "DolphinDB中错误代码S01071表示什么错误？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s01017.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s01017.md",
      "start_line": 1,
      "end_line": 20,
      "summary": "TSDB在回收过期level文件时失败，可能因表、分区或数据库已被删除，建议使用getChunksMeta函数检查分区是否存在。",
      "keywords": [
        "TSDB",
        "level file",
        "garbage collection",
        "getChunksMeta",
        "error code"
      ],
      "hypothetical_question": "当DolphinDB出现错误代码S01017时，应该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s01033.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s01033.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "TSDB在update或delete操作时写入EditLog失败的错误S01033及其解决方法。",
      "keywords": [
        "TSDB",
        "EditLog",
        "error S01033",
        "update delete",
        "I/O error"
      ],
      "hypothetical_question": "当TSDB在update或delete操作时出现错误S01033，应该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s01047.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s01047.md",
      "start_line": 1,
      "end_line": 20,
      "summary": "错误代码S01047表示TSDB level 3文件合并操作时存在并发任务，每个分区只允许一个合并任务。",
      "keywords": [
        "S01047",
        "TSDB",
        "compaction",
        "error",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中错误代码S01047表示什么错误以及如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s01048.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s01048.md",
      "start_line": 1,
      "end_line": 21,
      "summary": "错误代码S01048表示在查询时元数据中找不到对应的表，可能由于DDL操作导致，并提供了解决方法。",
      "keywords": [
        "错误代码",
        "元数据",
        "DDL操作",
        "查询失败",
        "解决方法"
      ],
      "hypothetical_question": "当DolphinDB报错'Cannot find table in metadata'（错误代码S01048）时，可能的原因和解决办法是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s01070.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s01070.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "事务因超时未完成时，控制节点会发起决议流程，这是常规日志信息，无需额外处理。",
      "keywords": [
        "事务超时",
        "决议流程",
        "错误代码S01070"
      ],
      "hypothetical_question": "DolphinDB中错误代码S01070表示什么问题，该如何处理？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s01046.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s01046.md",
      "start_line": 1,
      "end_line": 20,
      "summary": "错误代码 S01046 表示 TSDB 分区在 Recovery 状态时无法进行合并操作，并提供了相应的解决办法。",
      "keywords": [
        "S01046",
        "TSDB",
        "Recovery",
        "合并操作",
        "getRecoveryTaskStatus"
      ],
      "hypothetical_question": "当 TSDB 分区在 Recovery 状态时无法进行合并操作，应该如何处理？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s01072.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s01072.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "错误代码S01072表示数据节点无法找到缓存的表信息，导致无法清理旧版本数据，可能耗尽磁盘空间。",
      "keywords": [
        "错误代码",
        "垃圾回收",
        "缓存表信息",
        "磁盘空间",
        "数据节点"
      ],
      "hypothetical_question": "错误代码S01072表示什么问题，该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s01077.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s01077.md",
      "start_line": 1,
      "end_line": 18,
      "summary": "错误代码S01077表示数据节点写入操作失败，可能由网络问题、存储容量不足或权限限制引起，需联系售后进一步排查。",
      "keywords": [
        "错误代码",
        "数据节点",
        "写入失败",
        "S01077"
      ],
      "hypothetical_question": "错误代码S01077表示什么问题，应该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s01076.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s01076.md",
      "start_line": 1,
      "end_line": 21,
      "summary": "DolphinDB高可用集群中Leader节点切换后，新任Leader节点等待事务完成时出现的错误S01076及其解决方法。",
      "keywords": [
        "DolphinDB",
        "高可用集群",
        "Leader节点",
        "事务",
        "错误代码"
      ],
      "hypothetical_question": "DolphinDB高可用集群中出现错误代码S01076是什么意思，该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s02032.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s02032.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "DolphinDB错误代码S02032表示不允许聚合函数嵌套，并提供解决办法。",
      "keywords": [
        "DolphinDB",
        "错误代码",
        "聚合函数",
        "嵌套",
        "S02032"
      ],
      "hypothetical_question": "DolphinDB中错误代码S02032是什么意思，如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s02033.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s02033.md",
      "start_line": 1,
      "end_line": 23,
      "summary": "DolphinDB错误代码S02033表示SELECT查询的FROM子句必须使用表、JOIN或子查询，而不能使用向量等非法对象。",
      "keywords": [
        "DolphinDB",
        "错误代码S02033",
        "FROM子句",
        "SELECT查询",
        "非法对象"
      ],
      "hypothetical_question": "DolphinDB中错误代码S02033是什么意思，如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s01074.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s01074.md",
      "start_line": 1,
      "end_line": 20,
      "summary": "错误代码S01074表示在DolphinDB副本恢复过程中任务失败，需通过getRecoveryTaskStatus函数查找具体原因并决定是否手动恢复或联系售后。",
      "keywords": [
        "S01074",
        "副本恢复",
        "getRecoveryTaskStatus",
        "错误代码",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB错误代码S01074表示什么以及如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s02034.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s02034.md",
      "start_line": 1,
      "end_line": 23,
      "summary": "错误代码 S02034 表示 SQL 查询的 where 子句条件必须是表达式或函数调用，而不能是向量。",
      "keywords": [
        "S02034",
        "where 子句",
        "SQL 查询",
        "错误代码"
      ],
      "hypothetical_question": "当 SQL 查询的 where 子句中使用向量时，会出现什么错误？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s02035.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s02035.md",
      "start_line": 1,
      "end_line": 23,
      "summary": "错误代码S02035指出，SQL的where子句中的条件必须返回布尔类型，否则会报错。",
      "keywords": [
        "错误代码",
        "where子句",
        "布尔类型",
        "SQL"
      ],
      "hypothetical_question": "为什么在DolphinDB中执行SQL查询时会出现错误代码S02035？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s02036.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s02036.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "DolphinDB错误代码S02036表示where子句条件返回的结果长度与原表行数不匹配。",
      "keywords": [
        "DolphinDB",
        "错误代码",
        "where子句",
        "SQL查询",
        "布尔向量"
      ],
      "hypothetical_question": "DolphinDB错误代码S02036表示什么问题，如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s02037.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s02037.md",
      "start_line": 1,
      "end_line": 44,
      "summary": "DolphinDB错误代码S02037表示在in/not in表达式中不能使用分布式表列作为右侧操作数，并提供了解决方案。",
      "keywords": [
        "DolphinDB",
        "错误代码",
        "in表达式",
        "分布式表",
        "S02037"
      ],
      "hypothetical_question": "在DolphinDB中，为什么会出现错误代码S02037以及如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s03025.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s03025.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "只有管理员可以强制删除未加载的流表，否则会报错S03025。",
      "keywords": [
        "S03025",
        "管理员权限",
        "强制删除",
        "流表"
      ],
      "hypothetical_question": "为什么非管理员无法强制删除未加载的流表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s03022.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s03022.md",
      "start_line": 1,
      "end_line": 20,
      "summary": "错误代码S03022表示由于未配置persistenceDir参数导致创建高可用流表失败。",
      "keywords": [
        "S03022",
        "persistenceDir",
        "高可用流表"
      ],
      "hypothetical_question": "为什么在创建高可用流表时会出现S03022错误？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s02043.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s02043.md",
      "start_line": 1,
      "end_line": 35,
      "summary": "DolphinDB错误代码S02043指出，当SELECT子句使用'asis'函数时必须结合PIVOT BY子句，否则会报错。",
      "keywords": [
        "DolphinDB",
        "错误代码S02043",
        "asis函数",
        "PIVOT BY"
      ],
      "hypothetical_question": "在DolphinDB中使用'asis'函数时为什么需要PIVOT BY子句？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s03024.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s03024.md",
      "start_line": 1,
      "end_line": 18,
      "summary": "高可用流表不能强制删除，必须通过Raft协议达成一致后使用dropStreamTable函数进行删除。",
      "keywords": [
        "高可用流表",
        "Raft协议",
        "dropStreamTable",
        "强制删除",
        "错误代码"
      ],
      "hypothetical_question": "为什么无法强制删除高可用流表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s02039.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s02039.md",
      "start_line": 1,
      "end_line": 23,
      "summary": "错误代码S02039表示查询涉及的分区数超过maxPartitionNumPerQuery限制，可通过调整配置或增加分区列筛选条件解决。",
      "keywords": [
        "S02039",
        "maxPartitionNumPerQuery",
        "分区数",
        "查询错误",
        "DolphinDB"
      ],
      "hypothetical_question": "如何解决DolphinDB中查询涉及的分区数超过maxPartitionNumPerQuery限制的问题？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s02038.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s02038.md",
      "start_line": 1,
      "end_line": 35,
      "summary": "DolphinDB错误代码S02038指出在查询分布式表时，order by子句中不允许使用序列相关函数或用户定义函数。",
      "keywords": [
        "DolphinDB",
        "错误代码",
        "分布式表",
        "order by",
        "用户定义函数"
      ],
      "hypothetical_question": "在DolphinDB中查询分布式表时，为什么不能在order by子句中使用序列相关函数或用户定义函数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s03023.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s03023.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "错误代码S03023表示由于未配置persistenceDir参数，导致无法获取持久化流表信息。",
      "keywords": [
        "S03023",
        "persistenceDir",
        "getStreamTables",
        "流数据持久化",
        "错误代码"
      ],
      "hypothetical_question": "如何解决DolphinDB中因未配置persistenceDir而导致的S03023错误？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s02041.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s02041.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "在JOIN查询中，嵌套的JOIN子查询必须返回表，使用EXEC关键字可能导致返回标量而报错。",
      "keywords": [
        "JOIN查询",
        "嵌套子查询",
        "EXEC关键字",
        "错误代码S02041"
      ],
      "hypothetical_question": "在DolphinDB中，为什么嵌套的JOIN子查询使用EXEC关键字会报错S02041？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s02040.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s02040.md",
      "start_line": 1,
      "end_line": 32,
      "summary": "错误代码S02040表示在DolphinDB查询中，时间类型的分区列在WHERE子句中只能与时间对象比较，不能与其他类型比较。",
      "keywords": [
        "错误代码",
        "时间分区列",
        "WHERE子句",
        "DolphinDB",
        "查询错误"
      ],
      "hypothetical_question": "在DolphinDB中，当时间类型的分区列在WHERE子句中与其他类型比较时会出现什么错误？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s03021.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s03021.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "错误代码S03021表示在未启用高可用流表功能的情况下尝试创建HA流表，需在集群模式下配置并启用该功能。",
      "keywords": [
        "S03021",
        "高可用流表",
        "集群模式",
        "Raft组"
      ],
      "hypothetical_question": "如何解决DolphinDB中创建HA流表时出现的S03021错误？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s02042.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s02042.md",
      "start_line": 1,
      "end_line": 35,
      "summary": "DolphinDB分布式表查询不支持EXISTS关键字，需改用左半连接（left semijoin）实现相同功能。",
      "keywords": [
        "DolphinDB",
        "分布式查询",
        "EXISTS关键字",
        "错误代码S02042",
        "左半连接"
      ],
      "hypothetical_question": "DolphinDB分布式查询中如何使用EXISTS关键字会报错S02042，应该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s03027.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s03027.md",
      "start_line": 1,
      "end_line": 20,
      "summary": "错误代码S03027表示subscribeTable函数只能在数据节点或计算节点上执行，而不能在控制节点或代理节点上运行。",
      "keywords": [
        "S03027",
        "subscribeTable",
        "数据节点",
        "计算节点",
        "流表订阅"
      ],
      "hypothetical_question": "为什么在控制节点上执行subscribeTable函数会报错S03027？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s04006.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s04006.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "错误代码S04006表示任务并发度超出1-64范围，需调整至该范围内。",
      "keywords": [
        "S04006",
        "并发度",
        "setMaxJobParallelism"
      ],
      "hypothetical_question": "DolphinDB中错误代码S04006表示什么问题，如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s04008.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s04008.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "当任务优先级设置超出0-9范围时，DolphinDB会报错S04008。",
      "keywords": [
        "S04008",
        "任务优先级",
        "setMaxJobParallelism"
      ],
      "hypothetical_question": "DolphinDB中任务优先级设置超出范围时会报什么错误？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s03028.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s03028.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "当订阅流表时指定了过滤参数但未设置过滤列时，会报错S03028，解决办法是调用setStreamTableFilterColumn函数设置过滤列。",
      "keywords": [
        "S03028",
        "流表订阅",
        "过滤参数",
        "setStreamTableFilterColumn"
      ],
      "hypothetical_question": "如何解决订阅流表时因未设置过滤列而报错S03028的问题？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s04007.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s04007.md",
      "start_line": 1,
      "end_line": 20,
      "summary": "DolphinDB错误代码S04007表示设置最大文件句柄数失败，通常由于操作系统限制。",
      "keywords": [
        "S04007",
        "maxFileHandles",
        "文件描述符",
        "操作系统限制"
      ],
      "hypothetical_question": "DolphinDB报错S04007是什么原因，如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s05008.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s05008.md",
      "start_line": 1,
      "end_line": 34,
      "summary": "使用DECIMAL数据类型时必须指定scale参数，否则会报错S05008。",
      "keywords": [
        "DECIMAL",
        "scale",
        "S05008",
        "数据类型",
        "错误"
      ],
      "hypothetical_question": "在使用DECIMAL数据类型时为什么会出现S05008错误？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s05009.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s05009.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "错误代码S05009表示在使用DECIMAL数据类型时，scale参数必须为整型标量。",
      "keywords": [
        "S05009",
        "DECIMAL",
        "scale",
        "整型标量",
        "错误代码"
      ],
      "hypothetical_question": "在使用DECIMAL数据类型时，为什么会出现S05009错误？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s05012.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s05012.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "错误代码S05012表示在创建键值内存表或索引内存表时，主键包含重复元素。",
      "keywords": [
        "S05012",
        "键值内存表",
        "索引内存表",
        "重复主键",
        "错误代码"
      ],
      "hypothetical_question": "在DolphinDB中创建键值内存表或索引内存表时，为什么会出现错误代码S05012？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s05011.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s05011.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "当常规数组的内存使用达到由regularArrayMemoryLimit配置的上限时，DolphinDB会报错S05011，并建议使用大数组作为解决方案。",
      "keywords": [
        "S05011",
        "常规数组",
        "内存上限",
        "regularArrayMemoryLimit",
        "大数组"
      ],
      "hypothetical_question": "DolphinDB中报错S05011的原因是什么，以及如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s05013.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s05013.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "DolphinDB错误代码S05013指出，在创建内存表时，元组列的所有元素必须具有相同类型。",
      "keywords": [
        "DolphinDB",
        "错误代码",
        "内存表",
        "元组",
        "类型一致"
      ],
      "hypothetical_question": "在DolphinDB中创建内存表时，为什么会出现S05013错误？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s05017.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s05017.md",
      "start_line": 1,
      "end_line": 18,
      "summary": "错误代码S05017表示表中存在重复的列名，需要修改重复的列名以解决该问题。",
      "keywords": [
        "错误代码",
        "重复列名",
        "S05017"
      ],
      "hypothetical_question": "当DolphinDB报错'S05017：A table cannot contain columns with duplicate name'时，该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s06009.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s06009.md",
      "start_line": 1,
      "end_line": 33,
      "summary": "当创建pair时，两个操作数必须属于相同的数据类别，否则会报错S06009。",
      "keywords": [
        "pair",
        "错误代码",
        "数据类别",
        "操作数",
        "S06009"
      ],
      "hypothetical_question": "在DolphinDB中创建pair时，为什么会出现错误代码S06009？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s05016.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s05016.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "内存表的行数不能超过2,147,483,647，否则会报错S05016。",
      "keywords": [
        "内存表",
        "行数限制",
        "错误代码",
        "S05016",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中内存表的行数限制是多少？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s06007.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s06007.md",
      "start_line": 1,
      "end_line": 44,
      "summary": "错误代码S06007表示在脚本中声明了函数但未定义，需同时包含声明和定义以避免错误。",
      "keywords": [
        "错误代码",
        "函数声明",
        "函数定义",
        "S06007",
        "脚本错误"
      ],
      "hypothetical_question": "在DolphinDB中遇到错误代码S06007，提示函数已声明但未定义，该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s05014.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s05014.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "当使用下标访问方式为内存表增加列时，若新列的行数与原表不同，会报错S05014。",
      "keywords": [
        "错误代码",
        "内存表",
        "下标访问",
        "列操作",
        "行数"
      ],
      "hypothetical_question": "在使用下标访问方式为内存表增加列时，为什么会出现错误S05014？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s06008.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s06008.md",
      "start_line": 1,
      "end_line": 46,
      "summary": "错误代码S06008表示函数声明与定义的函数签名不一致，并提供了示例和解决办法。",
      "keywords": [
        "错误代码",
        "函数签名",
        "不一致",
        "S06008",
        "函数声明"
      ],
      "hypothetical_question": "当DolphinDB报错S06008时，是什么原因导致的以及如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s06012.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s06012.md",
      "start_line": 1,
      "end_line": 34,
      "summary": "在DolphinDB中，带有默认值的函数参数不能同时被声明为mutable。",
      "keywords": [
        "错误代码",
        "函数参数",
        "默认值",
        "mutable",
        "DolphinDB"
      ],
      "hypothetical_question": "在DolphinDB中，为什么带有默认值的函数参数不能是mutable？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s05015.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s05015.md",
      "start_line": 1,
      "end_line": 28,
      "summary": "DolphinDB错误代码S05015表示无法删除键值内存表或索引内存表的主键列。",
      "keywords": [
        "DolphinDB",
        "错误代码",
        "键值内存表",
        "索引内存表",
        "主键列"
      ],
      "hypothetical_question": "在DolphinDB中，为什么无法删除键值内存表或索引内存表的主键列？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s06011.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s06011.md",
      "start_line": 1,
      "end_line": 31,
      "summary": "DolphinDB错误代码S06011表示在非SQL表达式中错误使用了'='而非'=='作为相等运算符。",
      "keywords": [
        "DolphinDB",
        "错误代码",
        "S06011",
        "运算符",
        "SQL"
      ],
      "hypothetical_question": "在DolphinDB中，错误代码S06011表示什么问题以及如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s07001.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s07001.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "系统重启后OLTP初始化期间执行相关操作会报错S07001，需等待恢复完成。",
      "keywords": [
        "S07001",
        "OLTP",
        "系统重启",
        "错误代码"
      ],
      "hypothetical_question": "系统重启后执行OLTP操作时遇到错误代码S07001，应该怎么办？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s06010.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s06010.md",
      "start_line": 1,
      "end_line": 31,
      "summary": "DolphinDB错误代码S06010表示在SQL语句中，'IS'关键字后必须跟随'NULL'或'NOT NULL'，否则会报错。",
      "keywords": [
        "DolphinDB",
        "错误代码",
        "S06010",
        "SQL语法",
        "IS NULL"
      ],
      "hypothetical_question": "DolphinDB中错误代码S06010表示什么问题以及如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s06013.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s06013.md",
      "start_line": 1,
      "end_line": 35,
      "summary": "在DolphinDB中定义函数时，如果某个参数有默认值，其后所有参数也必须设置默认值。",
      "keywords": [
        "错误代码",
        "函数定义",
        "默认参数",
        "S06013",
        "参数顺序"
      ],
      "hypothetical_question": "在DolphinDB中定义函数时，如何处理带有默认值的参数以避免错误？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s07004.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s07004.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "错误代码S07004表示OLTP不支持当前数据类型作为索引键，并列出支持的数据类型。",
      "keywords": [
        "错误代码",
        "索引键",
        "数据类型",
        "OLTP"
      ],
      "hypothetical_question": "哪些数据类型可以作为OLTP索引的键？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s07000.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s07000.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "错误代码 S07000 表示由于配置项 IMOLTPRedoFilePath 设置的路径与现有目录同名导致 OLTP 服务启动失败。",
      "keywords": [
        "S07000",
        "IMOLTPRedoFilePath",
        "OLTP",
        "redo file",
        "error"
      ],
      "hypothetical_question": "如何解决 DolphinDB 中因 IMOLTPRedoFilePath 配置项与现有目录同名导致的 S07000 错误？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s07003.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s07003.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "OLTP相关的DDL操作不能在'transaction'语句块内执行。",
      "keywords": [
        "OLTP",
        "DDL",
        "transaction",
        "错误代码",
        "S07003"
      ],
      "hypothetical_question": "为什么在DolphinDB中执行OLTP相关的DDL操作时会报错S07003？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s07002.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s07002.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "错误代码 S07002 表示在向有唯一索引的 OLTP 表插入数据时，索引键字段与现有数据重复。",
      "keywords": [
        "S07002",
        "OLTP",
        "unique 索引",
        "重复键"
      ],
      "hypothetical_question": "当向有唯一索引的 OLTP 表插入数据时出现 S07002 错误，该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s07005.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s07005.md",
      "start_line": 1,
      "end_line": 18,
      "summary": "当字符串类型作为索引键时，长度超过4096字节会触发错误代码S07005。",
      "keywords": [
        "错误代码",
        "字符串长度",
        "索引键",
        "S07005"
      ],
      "hypothetical_question": "当字符串作为索引键时，长度超过多少字节会触发错误代码S07005？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s07006.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s07006.md",
      "start_line": 1,
      "end_line": 38,
      "summary": "DolphinDB错误代码S07006表示在IMOLTP表的update语句中不能使用聚合函数。",
      "keywords": [
        "DolphinDB",
        "IMOLTP",
        "聚合函数",
        "update语句",
        "错误代码"
      ],
      "hypothetical_question": "DolphinDB中IMOLTP表的update语句为什么不能使用聚合函数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s09000.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s09000.md",
      "start_line": 1,
      "end_line": 18,
      "summary": "JIT函数不支持变参，错误代码S09000。",
      "keywords": [
        "JIT",
        "错误代码",
        "变参",
        "S09000"
      ],
      "hypothetical_question": "JIT函数为什么不能有变参？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s09002.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s09002.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "JIT函数参数不能是内置函数，只能是用户自定义函数。",
      "keywords": [
        "JIT",
        "错误代码",
        "内置函数",
        "用户自定义函数"
      ],
      "hypothetical_question": "JIT函数的参数可以使用内置函数吗？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s09008.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s09008.md",
      "start_line": 1,
      "end_line": 32,
      "summary": "JIT函数中所有返回路径的返回值类型必须一致，否则会报错S09008。",
      "keywords": [
        "JIT",
        "错误代码",
        "返回值类型",
        "S09008"
      ],
      "hypothetical_question": "JIT函数中返回值类型不一致会导致什么错误？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s09004.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s09004.md",
      "start_line": 1,
      "end_line": 20,
      "summary": "错误代码S09004表示`seq`操作符前后的时间类型变量必须一致。",
      "keywords": [
        "S09004",
        "seq操作符",
        "时间类型",
        "错误代码",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中错误代码S09004表示什么问题，如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s09005.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s09005.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "错误代码S09005表示在JIT编译中，赋值操作的变量和索引值类型必须一致。",
      "keywords": [
        "错误代码",
        "JIT",
        "类型一致",
        "赋值操作",
        "S09005"
      ],
      "hypothetical_question": "DolphinDB错误代码S09005表示什么问题，如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s09001.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s09001.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "错误代码S09001表示JIT函数的参数函数只能接受整型或浮点型标量参数。",
      "keywords": [
        "S09001",
        "JIT函数",
        "错误代码",
        "参数类型",
        "标量参数"
      ],
      "hypothetical_question": "当JIT函数的参数函数不接受整型或浮点型标量参数时，会报什么错误？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s09003.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s09003.md",
      "start_line": 1,
      "end_line": 18,
      "summary": "错误代码S09003表示在DolphinDB中创建数据对时操作数类型不一致，需要修改参数使其类型一致。",
      "keywords": [
        "错误代码",
        "数据对",
        "类型一致",
        "JIT",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中错误代码S09003表示什么问题，如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s09006.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s09006.md",
      "start_line": 1,
      "end_line": 18,
      "summary": "错误代码S09006表示在进行标量与向量赋值操作时，向量需要通过标量索引。",
      "keywords": [
        "错误代码",
        "标量赋值",
        "向量索引",
        "S09006"
      ],
      "hypothetical_question": "DolphinDB错误代码S09006表示什么问题，如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s10000.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s10000.md",
      "start_line": 1,
      "end_line": 20,
      "summary": "错误代码S10000表示Shark功能需要高级许可证，解决方法是使用已购买的许可证或联系DolphinDB官方申请试用许可证。",
      "keywords": [
        "S10000",
        "Shark license",
        "DolphinDB"
      ],
      "hypothetical_question": "如何解决DolphinDB中的S10000错误？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s09009.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s09009.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "JIT函数中不允许使用无返回值的return语句，否则会报错S09009。",
      "keywords": [
        "JIT",
        "return",
        "错误代码",
        "S09009"
      ],
      "hypothetical_question": "在DolphinDB中，为什么JIT函数中使用无返回值的return语句会报错？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s10001.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s10001.md",
      "start_line": 1,
      "end_line": 20,
      "summary": "错误代码S10001表示GPU内存不足，需减少训练数据规模或降低树的深度。",
      "keywords": [
        "GPU内存不足",
        "GPLearn",
        "错误代码S10001",
        "训练数据规模",
        "树深度"
      ],
      "hypothetical_question": "如何解决GPLearn中因GPU内存不足导致的错误代码S10001？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s09007.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s09007.md",
      "start_line": 1,
      "end_line": 38,
      "summary": "DolphinDB错误代码S09007指出，JIT编译时`cast`操作符的右边值必须是常量，并提供了错误原因和解决办法。",
      "keywords": [
        "DolphinDB",
        "JIT",
        "cast操作符",
        "错误代码",
        "S09007"
      ],
      "hypothetical_question": "DolphinDB中JIT编译时`cast`操作符的右边值为什么必须是常量？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s10003.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s10003.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "错误代码 S10003 表示向 talib 函数传入了不受支持的参数，仅支持 m 系列和 mTopN 系列函数。",
      "keywords": [
        "S10003",
        "talib",
        "错误代码",
        "DeviceEngine"
      ],
      "hypothetical_question": "错误代码 S10003 表示什么问题，如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s10002.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s10002.md",
      "start_line": 1,
      "end_line": 21,
      "summary": "错误代码S10002表示当前设备未检测到GPU，可能原因是未安装NVIDIA GPU驱动或CUDA版本不匹配，解决办法是安装正确版本的驱动或CUDA。",
      "keywords": [
        "S10002",
        "GPU检测失败",
        "NVIDIA驱动",
        "CUDA版本",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB报错S10002，提示未检测到GPU，可能的原因和解决办法是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s10006.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s10006.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "错误代码S10006表示索引列类型不被支持，DeviceEngine仅支持特定类型的索引列。",
      "keywords": [
        "S10006",
        "索引列类型",
        "DeviceEngine",
        "错误代码"
      ],
      "hypothetical_question": "DolphinDB错误代码S10006表示什么问题以及如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s10005.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s10005.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "错误代码S10005指出自定义适应度函数的参数数量必须大于等于2，否则会报错。",
      "keywords": [
        "S10005",
        "GPLearn",
        "fitness function",
        "error code",
        "parameter count"
      ],
      "hypothetical_question": "为什么在使用GPLearn时会出现S10005错误代码？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s10007.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s10007.md",
      "start_line": 1,
      "end_line": 18,
      "summary": "错误代码S10007表示Device Engine不支持某个函数，建议查阅GPLearn用户手册使用支持的函数。",
      "keywords": [
        "S10007",
        "Device Engine",
        "GPLearn",
        "错误代码",
        "不支持函数"
      ],
      "hypothetical_question": "当出现错误代码S10007时，应该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s10004.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s10004.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "错误代码 S10004 表示在 GPLearn 中使用了不支持的函数，需参考用户手册使用支持的函数。",
      "keywords": [
        "GPLearn",
        "错误代码",
        "S10004",
        "不支持函数",
        "用户手册"
      ],
      "hypothetical_question": "GPLearn 报错 S10004 是什么意思，该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s10008.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s10008.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "错误代码S10008表示提供了不合法的分组列列名参数，分区列必须为字符串或字符串数组且与输入表的列名对应。",
      "keywords": [
        "错误代码",
        "分组列",
        "分区列",
        "字符串数组"
      ],
      "hypothetical_question": "DolphinDB错误代码S10008是什么意思，以及如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s12000.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s12000.md",
      "start_line": 1,
      "end_line": 22,
      "summary": "DolphinDB错误代码S12000的报错信息、原因及解决办法。",
      "keywords": [
        "S12000",
        "checkpoint文件",
        "重命名错误"
      ],
      "hypothetical_question": "DolphinDB错误代码S12000是什么原因导致的，如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s12005.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s12005.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "错误代码S12005表示在回放redo log时找不到数据库，需联系技术支持解决。",
      "keywords": [
        "错误代码",
        "redo log",
        "数据库",
        "技术支持"
      ],
      "hypothetical_question": "DolphinDB错误代码S12005是什么意思？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s10009.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s10009.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "错误代码S10009表示在`createDeviceEngine`函数中提供的元编程代码不符合要求，必须使用合法的元代码或其数组作为`metrics`参数。",
      "keywords": [
        "S10009",
        "createDeviceEngine",
        "metrics",
        "元编程代码"
      ],
      "hypothetical_question": "当DolphinDB报错S10009时，是什么原因导致的以及如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s12001.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s12001.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "错误代码S12001表示由于checkpoint文件受损无法恢复元信息，需联系技术支持解决。",
      "keywords": [
        "S12001",
        "checkpoint文件",
        "元信息恢复",
        "技术支持"
      ],
      "hypothetical_question": "DolphinDB错误代码S12001表示什么问题以及如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s12003.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s12003.md",
      "start_line": 1,
      "end_line": 40,
      "summary": "DolphinDB错误代码S12003的详细说明，包括错误信息、可能原因及解决方法。",
      "keywords": [
        "S12003",
        "序列化错误",
        "LevelFile",
        "磁盘故障",
        "兼容性问题"
      ],
      "hypothetical_question": "DolphinDB中错误代码S12003是什么原因导致的，如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s12002.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s12002.md",
      "start_line": 1,
      "end_line": 20,
      "summary": "错误代码S12002表示由于stashed buffer过大导致flush暂停，需等待delete bitmap更新或调整配置参数PKEYDeleteBitmapUpdateThreshold。",
      "keywords": [
        "S12002",
        "stashed buffer",
        "delete bitmap",
        "PKEYDeleteBitmapUpdateThreshold",
        "flush暂停"
      ],
      "hypothetical_question": "当DolphinDB出现S12002错误时，应该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/appendix.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/appendix.md",
      "start_line": 1,
      "end_line": 38,
      "summary": "该文本片段提供了DolphinDB中格式字符与类型、字节顺序、大小和对齐方式的对应关系表。",
      "keywords": [
        "格式字符",
        "类型对应",
        "字节顺序",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中不同格式字符对应的C类型、Python类型和DolphinDB类型是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s12004.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s12004.md",
      "start_line": 1,
      "end_line": 22,
      "summary": "错误代码S12004表示在online recovery过程中meta.log文件未找到，需联系技术支持分析dolphindb.log以确定原因。",
      "keywords": [
        "S12004",
        "meta.log",
        "online recovery",
        "dolphindb.log"
      ],
      "hypothetical_question": "DolphinDB错误代码S12004表示什么问题，该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s12007.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s12007.md",
      "start_line": 1,
      "end_line": 21,
      "summary": "错误代码S12007表示用户指定了不支持的索引类型，系统仅支持BloomFilter和ZoneMap索引类型。",
      "keywords": [
        "错误代码",
        "索引类型",
        "BloomFilter",
        "ZoneMap",
        "S12007"
      ],
      "hypothetical_question": "当DolphinDB报错S12007时，应该如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/troubleshooting.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/troubleshooting.md",
      "start_line": 1,
      "end_line": 7,
      "summary": "本文介绍DolphinDB使用过程中常见故障及其排查方法。",
      "keywords": [
        "DolphinDB",
        "故障排查",
        "常见问题"
      ],
      "hypothetical_question": "DolphinDB有哪些常见故障及其排查方法？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s12008.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s12008.md",
      "start_line": 1,
      "end_line": 23,
      "summary": "错误代码S12008表示不支持为特定类型的列创建指定的索引（如BloomFilter或ZoneMap），并提供了支持的列类型和解决办法。",
      "keywords": [
        "错误代码",
        "索引",
        "BloomFilter",
        "ZoneMap",
        "列类型"
      ],
      "hypothetical_question": "DolphinDB错误代码S12008表示什么错误，如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s12006.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s12006.md",
      "start_line": 1,
      "end_line": 20,
      "summary": "DolphinDB错误代码S12006表示分区不存在或已删除，存储引擎无法读取分区下的LevelFile文件，并提供了解决办法。",
      "keywords": [
        "DolphinDB",
        "错误代码S12006",
        "分区不存在",
        "LevelFile文件",
        "技术支持"
      ],
      "hypothetical_question": "DolphinDB报错S12006，提示Chunk not found，可能是什么原因以及如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/funcs_intro.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/funcs_intro.md",
      "start_line": 1,
      "end_line": 113,
      "summary": "介绍DolphinDB中函数的基本语法和调用方法，包括一元和二元函数的不同调用形式。",
      "keywords": [
        "函数语法",
        "函数调用",
        "DolphinDB",
        "一元函数",
        "二元函数"
      ],
      "hypothetical_question": "DolphinDB中有哪些不同的函数调用方法？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/error_codes/s12009.md",
      "chunk_id": "0",
      "source_document": "./documentation/error_codes/s12009.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "DolphinDB错误代码S12009表示在Level File compaction过程中无法正确获取旧Level File的列数据，需联系技术支持解决。",
      "keywords": [
        "S12009",
        "Level File compaction",
        "错误代码",
        "技术支持",
        "列数据"
      ],
      "hypothetical_question": "DolphinDB错误代码S12009表示什么问题以及如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/getStreamGraph.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/getStreamGraph.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "介绍如何使用getStreamGraph函数获取已提交的流图对象。",
      "keywords": [
        "getStreamGraph",
        "流图",
        "StreamGraph",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中获取已提交的流图对象？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/getStreamGraphMeta.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/getStreamGraphMeta.md",
      "start_line": 1,
      "end_line": 48,
      "summary": "该文档描述了DolphinDB中`getStreamGraphMeta`函数的语法、参数、返回详情及使用示例，用于获取指定流图的元信息。",
      "keywords": [
        "getStreamGraphMeta",
        "流图元信息",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中获取流图的元信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/abs.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/abs.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "abs函数用于计算标量、向量、矩阵或表中每个元素的绝对值。",
      "keywords": [
        "abs",
        "绝对值",
        "函数"
      ],
      "hypothetical_question": "DolphinDB中如何计算一个向量中每个元素的绝对值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/purgeStreamGraphRecords.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/purgeStreamGraphRecords.md",
      "start_line": 1,
      "end_line": 34,
      "summary": "purgeStreamGraphRecords函数用于删除已销毁流图在DFS表中的记录，需要管理员权限或特定计算组权限。",
      "keywords": [
        "purgeStreamGraphRecords",
        "流图",
        "DFS表",
        "权限"
      ],
      "hypothetical_question": "如何删除DolphinDB中已销毁流图在DFS表中的记录？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/getStreamGraphInfo.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/getStreamGraphInfo.md",
      "start_line": 1,
      "end_line": 67,
      "summary": "介绍DolphinDB函数getStreamGraphInfo的语法、参数、返回结果及其字段含义，以及使用示例。",
      "keywords": [
        "getStreamGraphInfo",
        "流图元信息",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何使用getStreamGraphInfo函数获取流图的元信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/funcs_by_topics.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/funcs_by_topics.md",
      "start_line": 1,
      "end_line": 231,
      "summary": "DolphinDB函数按照功能分类的详细列表，包括数据操作、数据库/数据表、SQL、数学和统计、运算符、流数据、元编程、高阶函数、权限与安全、文件系统、系统管理、环境等类别。",
      "keywords": [
        "DolphinDB",
        "函数分类",
        "数据操作",
        "SQL",
        "流数据"
      ],
      "hypothetical_question": "DolphinDB的函数按照功能可以分为哪些类别？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/acf.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/acf.md",
      "start_line": 1,
      "end_line": 31,
      "summary": "该文档介绍了DolphinDB中的acf函数，用于计算向量的自相关系数。",
      "keywords": [
        "acf",
        "自相关系数",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中计算向量的自相关系数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/acos.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/acos.md",
      "start_line": 1,
      "end_line": 23,
      "summary": "介绍DolphinDB中的acos函数，用于计算反余弦值，并列出相关函数。",
      "keywords": [
        "acos",
        "反余弦",
        "DolphinDB",
        "三角函数",
        "数学函数"
      ],
      "hypothetical_question": "DolphinDB中如何计算反余弦值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/acosh.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/acosh.md",
      "start_line": 1,
      "end_line": 23,
      "summary": "DolphinDB中的acosh函数用于计算反双曲余弦值。",
      "keywords": [
        "acosh",
        "反双曲余弦",
        "DolphinDB函数"
      ],
      "hypothetical_question": "DolphinDB中如何计算反双曲余弦值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/adaBoostClassifier.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/adaBoostClassifier.md",
      "start_line": 1,
      "end_line": 85,
      "summary": "介绍了DolphinDB中的adaBoostClassifier函数，包括其语法、参数、功能和使用示例。",
      "keywords": [
        "adaBoostClassifier",
        "分类模型",
        "机器学习",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用adaBoostClassifier函数进行分类模型的训练和预测？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/add.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/add.md",
      "start_line": 1,
      "end_line": 87,
      "summary": "DolphinDB中的add函数用于对两个参数X和Y中的元素逐个求和，支持标量、数据对、向量或矩阵。",
      "keywords": [
        "add",
        "DolphinDB",
        "求和",
        "向量",
        "矩阵"
      ],
      "hypothetical_question": "DolphinDB中如何使用add函数对两个向量或矩阵进行逐个元素求和？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/addMetrics.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/addMetrics.md",
      "start_line": 1,
      "end_line": 96,
      "summary": "addMetrics函数用于动态增加流数据引擎的计算指标，支持时间序列引擎但不支持异常检测和反应式状态引擎。",
      "keywords": [
        "addMetrics",
        "流数据引擎",
        "时间序列引擎",
        "计算指标"
      ],
      "hypothetical_question": "如何在DolphinDB中动态增加流数据引擎的计算指标？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/adaBoostRegressor.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/adaBoostRegressor.md",
      "start_line": 1,
      "end_line": 87,
      "summary": "该文档详细介绍了DolphinDB中的adaBoostRegressor函数，包括其语法、参数、功能描述和使用示例。",
      "keywords": [
        "adaBoostRegressor",
        "回归分析",
        "机器学习",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用adaBoostRegressor进行回归分析？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/addAccessControl.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/addAccessControl.md",
      "start_line": 1,
      "end_line": 68,
      "summary": "addAccessControl函数用于限制其他用户访问共享表或流数据引擎，只有管理员授权的用户才能访问。",
      "keywords": [
        "addAccessControl",
        "访问控制",
        "共享表",
        "流数据引擎",
        "权限管理"
      ],
      "hypothetical_question": "如何在DolphinDB中限制其他用户访问共享表或流数据引擎？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/addFunctionView.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/addFunctionView.md",
      "start_line": 1,
      "end_line": 75,
      "summary": "addFunctionView用于创建函数视图，允许用户在不直接访问数据库的情况下执行特定的计算操作。",
      "keywords": [
        "addFunctionView",
        "函数视图",
        "权限控制",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中创建和使用函数视图来控制用户对数据库的访问权限？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/addColumn.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/addColumn.md",
      "start_line": 1,
      "end_line": 110,
      "summary": "addColumn函数用于向数据表添加新列，支持内存表、流数据表、分布式表和维度表，并提供了详细的用法示例。",
      "keywords": [
        "addColumn",
        "数据表",
        "分布式表",
        "流数据表",
        "列操作"
      ],
      "hypothetical_question": "如何在DolphinDB中使用addColumn函数向数据表添加新列？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/addNode.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/addNode.md",
      "start_line": 1,
      "end_line": 48,
      "summary": "介绍DolphinDB中addNode函数的语法、参数、用途及示例，用于向集群添加数据节点或计算节点。",
      "keywords": [
        "addNode",
        "数据节点",
        "计算节点",
        "集群部署"
      ],
      "hypothetical_question": "如何在DolphinDB集群中添加一个新的数据节点或计算节点？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/addMarketHoliday.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/addMarketHoliday.md",
      "start_line": 1,
      "end_line": 100,
      "summary": "addMarketHoliday函数用于在线添加交易市场的节假日或交易日文件，生成交易日历。",
      "keywords": [
        "addMarketHoliday",
        "交易日历",
        "休市日期",
        "交易日期"
      ],
      "hypothetical_question": "如何在DolphinDB中添加交易市场的节假日或交易日文件？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/addGroupMember.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/addGroupMember.md",
      "start_line": 1,
      "end_line": 46,
      "summary": "DolphinDB的addGroupMember函数用于将用户添加到群组，支持单用户到单群组、多用户到单群组或单用户到多群组的操作，需由管理员执行。",
      "keywords": [
        "addGroupMember",
        "用户管理",
        "群组权限",
        "DolphinDB函数",
        "管理员操作"
      ],
      "hypothetical_question": "如何在DolphinDB中将用户添加到群组？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/addRangePartitions.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/addRangePartitions.md",
      "start_line": 1,
      "end_line": 61,
      "summary": "介绍如何使用 `addRangePartitions` 函数在 DolphinDB 中为 RANGE 或 COMPO 分区类型的数据库添加新分区。",
      "keywords": [
        "addRangePartitions",
        "分区",
        "数据库",
        "RANGE",
        "COMPO"
      ],
      "hypothetical_question": "如何在 DolphinDB 中为 RANGE 或 COMPO 分区类型的数据库添加新分区？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/addValuePartitions.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/addValuePartitions.md",
      "start_line": 1,
      "end_line": 63,
      "summary": "介绍如何使用addValuePartitions函数为VALUE或COMPO分区类型的数据库添加新分区。",
      "keywords": [
        "addValuePartitions",
        "分区",
        "数据库",
        "VALUE分区",
        "COMPO分区"
      ],
      "hypothetical_question": "如何在DolphinDB中为VALUE或COMPO分区类型的数据库添加新的分区？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/addgpfunction.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/addgpfunction.md",
      "start_line": 1,
      "end_line": 81,
      "summary": "介绍如何在DolphinDB中通过addGpFunction函数添加用户自定义函数到遗传编程学习引擎中。",
      "keywords": [
        "addGpFunction",
        "自定义函数",
        "遗传编程",
        "DolphinDB",
        "训练函数"
      ],
      "hypothetical_question": "如何在DolphinDB中添加自定义函数到遗传编程学习引擎中？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/addVolumes.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/addVolumes.md",
      "start_line": 1,
      "end_line": 22,
      "summary": "addVolumes函数用于动态增加磁盘卷，无需重启集群即可使用新增磁盘卷。",
      "keywords": [
        "addVolumes",
        "磁盘卷",
        "动态增加",
        "集群配置"
      ],
      "hypothetical_question": "如何在DolphinDB中动态增加磁盘卷而不需要重启集群？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/addipblacklist.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/addipblacklist.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "addIPBlackList函数用于将IP地址添加到黑名单中，启用后服务器会拒绝来自这些IP的连接请求。",
      "keywords": [
        "addIPBlackList",
        "IP黑名单",
        "连接请求"
      ],
      "hypothetical_question": "如何在DolphinDB中将IP地址添加到黑名单中？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/addipwhitelist.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/addipwhitelist.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "DolphinDB函数addIPWhiteList用于向IP白名单中添加一个或多个IP地址，仅允许白名单中的IP连接服务器。",
      "keywords": [
        "DolphinDB",
        "IP白名单",
        "addIPWhiteList",
        "网络安全",
        "IP地址"
      ],
      "hypothetical_question": "如何在DolphinDB中添加IP地址到白名单？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/addreactivemetrics.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/addreactivemetrics.md",
      "start_line": 1,
      "end_line": 59,
      "summary": "介绍如何使用addReactiveMetrics函数动态增加narrowReactiveStateEngine的计算指标。",
      "keywords": [
        "addReactiveMetrics",
        "narrowReactiveStateEngine",
        "计算指标",
        "流数据引擎"
      ],
      "hypothetical_question": "如何在DolphinDB中动态增加narrowReactiveStateEngine的计算指标？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/all.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/all.md",
      "start_line": 1,
      "end_line": 44,
      "summary": "DolphinDB的all函数用于检查输入中是否全为非零或非false值，返回布尔结果。",
      "keywords": [
        "all",
        "布尔函数",
        "DolphinDB",
        "逻辑判断"
      ],
      "hypothetical_question": "DolphinDB中的all函数有什么作用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/adfuller.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/adfuller.md",
      "start_line": 1,
      "end_line": 64,
      "summary": "该文档详细介绍了DolphinDB中的adfuller函数，用于执行Augmented Dickey-Fuller (ADF)单位根检验，包括其语法、参数、输出结果及示例。",
      "keywords": [
        "adfuller",
        "ADF检验",
        "单位根检验"
      ],
      "hypothetical_question": "如何在DolphinDB中使用adfuller函数进行单位根检验？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/align.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/align.md",
      "start_line": 1,
      "end_line": 141,
      "summary": "DolphinDB的`align`函数用于根据指定的行或列标签对齐两个矩阵，支持多种对齐方式，并返回对齐后的矩阵元组。",
      "keywords": [
        "align",
        "矩阵对齐",
        "标签矩阵",
        "DolphinDB",
        "join操作"
      ],
      "hypothetical_question": "如何在DolphinDB中使用`align`函数对齐两个矩阵？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/and.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/and.md",
      "start_line": 1,
      "end_line": 53,
      "summary": "介绍DolphinDB中的逻辑与运算函数and及其用法。",
      "keywords": [
        "逻辑与",
        "and函数",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中如何进行逻辑与运算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/appendOrcaStreamTable.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/appendOrcaStreamTable.md",
      "start_line": 1,
      "end_line": 61,
      "summary": "介绍了如何使用 appendOrcaStreamTable 函数向 orca 流表插入数据，并提供了语法、参数、详情和示例。",
      "keywords": [
        "appendOrcaStreamTable",
        "orca 流表",
        "数据插入"
      ],
      "hypothetical_question": "如何在 DolphinDB 中向 orca 流表插入数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/anova.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/anova.md",
      "start_line": 1,
      "end_line": 41,
      "summary": "DolphinDB的anova函数用于执行单因素方差分析，返回包含p值、F统计量等关键指标的字典。",
      "keywords": [
        "anova",
        "方差分析",
        "F统计量",
        "p值"
      ],
      "hypothetical_question": "如何在DolphinDB中使用anova函数进行单因素方差分析？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/appendForJoin.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/appendForJoin.md",
      "start_line": 1,
      "end_line": 56,
      "summary": "介绍如何使用 `appendForJoin` 函数将数据插入流数据 join 引擎中。",
      "keywords": [
        "appendForJoin",
        "流数据 join 引擎",
        "subscribeTable"
      ],
      "hypothetical_question": "如何在 DolphinDB 中将数据插入流数据 join 引擎？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/amortizingfixedratebonddirtyprice.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/amortizingfixedratebonddirtyprice.md",
      "start_line": 1,
      "end_line": 90,
      "summary": "该文档详细介绍了DolphinDB中用于计算摊还本金固息债券含息价格的函数amortizingFixedRateBondDirtyPrice的语法、参数和使用方法。",
      "keywords": [
        "摊还本金固息债券",
        "含息价格",
        "DolphinDB函数",
        "债券计算"
      ],
      "hypothetical_question": "如何在DolphinDB中计算摊还本金固息债券的含息价格？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/any.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/any.md",
      "start_line": 1,
      "end_line": 41,
      "summary": "`any` 函数用于检查输入中是否存在至少一个 true 或非0元素，忽略 NULL 值。",
      "keywords": [
        "any",
        "布尔函数",
        "条件判断",
        "NULL 处理"
      ],
      "hypothetical_question": "DolphinDB 中如何检查一个向量中是否存在至少一个 true 或非0元素？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/appendforprediction.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/appendforprediction.md",
      "start_line": 1,
      "end_line": 50,
      "summary": "appendForPrediction函数用于与createYieldCurveEngine结合，对输入引擎的数据进行预测，并返回预测数据的数量。",
      "keywords": [
        "appendForPrediction",
        "createYieldCurveEngine",
        "预测",
        "债券曲线拟合",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用appendForPrediction函数进行债券曲线拟合预测？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/appendMsg.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/appendMsg.md",
      "start_line": 1,
      "end_line": 38,
      "summary": "appendMsg函数用于在流数据引擎启用快照机制时，将数据写入流数据引擎。",
      "keywords": [
        "appendMsg",
        "流数据引擎",
        "快照机制",
        "subscribeTable"
      ],
      "hypothetical_question": "在DolphinDB中，当流数据引擎启用快照机制时，应该使用哪个函数来将数据写入流数据引擎？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/arrayVector.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/arrayVector.md",
      "start_line": 1,
      "end_line": 44,
      "summary": "arrayVector函数用于根据索引向量将值向量分割成数组向量。",
      "keywords": [
        "arrayVector",
        "数组向量",
        "分割向量",
        "索引向量"
      ],
      "hypothetical_question": "如何在DolphinDB中使用arrayVector函数将向量分割成数组向量？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/appendTupel_.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/appendTupel_.md",
      "start_line": 1,
      "end_line": 45,
      "summary": "appendTuple! 函数用于将一个元组 Y 中的数据追加到另一个元组 X 中，支持整体追加或逐个元素追加，并处理列式元组的特殊情况。",
      "keywords": [
        "appendTuple!",
        "元组",
        "追加",
        "列式元组",
        "wholistic"
      ],
      "hypothetical_question": "如何在 DolphinDB 中将一个元组的数据追加到另一个元组中？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/asIs.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/asIs.md",
      "start_line": 1,
      "end_line": 31,
      "summary": "`asis` 函数返回对象的引用，而非副本。",
      "keywords": [
        "asis",
        "引用",
        "DolphinDB",
        "函数",
        "对象"
      ],
      "hypothetical_question": "DolphinDB 中的 `asis` 函数有什么作用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/array.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/array.md",
      "start_line": 1,
      "end_line": 54,
      "summary": "该文档详细介绍了DolphinDB中`array`函数的语法、参数、功能及使用示例，用于创建指定数据类型的向量。",
      "keywords": [
        "array",
        "向量",
        "数据类型",
        "容量",
        "默认值"
      ],
      "hypothetical_question": "如何在DolphinDB中使用array函数创建一个指定数据类型和容量的向量？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/asFreq.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/asFreq.md",
      "start_line": 1,
      "end_line": 201,
      "summary": "asFreq函数用于转换给定数据的时间频率，支持多种频率规则和参数设置。",
      "keywords": [
        "asFreq",
        "时间频率转换",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中使用asFreq函数转换数据的时间频率？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/asfreq1.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/asfreq1.md",
      "start_line": 1,
      "end_line": 7,
      "summary": "asfreq是asFreq的别名。",
      "keywords": [
        "asfreq",
        "asFreq",
        "别名"
      ],
      "hypothetical_question": "asfreq在DolphinDB中是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/arima.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/arima.md",
      "start_line": 1,
      "end_line": 86,
      "summary": "DolphinDB的arima函数是一个用于构建和拟合ARIMA类时间序列模型的通用接口，支持多种模型如AR、MA、ARMA、ARIMA、SARIMA和ARIMAX。",
      "keywords": [
        "ARIMA",
        "时间序列分析",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用arima函数进行时间序列分析？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/asin.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/asin.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "介绍DolphinDB中的asin函数，用于计算反正弦值。",
      "keywords": [
        "asin",
        "反正弦",
        "三角函数",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中如何计算反正弦值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/asinh.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/asinh.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "该文档详细介绍了DolphinDB中的`asinh`函数，包括其语法、参数、功能描述及示例。",
      "keywords": [
        "asinh",
        "反双曲正弦",
        "DolphinDB函数",
        "数学函数"
      ],
      "hypothetical_question": "DolphinDB中的asinh函数如何使用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/asof.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/asof.md",
      "start_line": 1,
      "end_line": 29,
      "summary": "asof函数用于返回X中不大于Y中每个元素的最大序号，若无则返回-1。",
      "keywords": [
        "asof",
        "序号",
        "递增向量",
        "查找"
      ],
      "hypothetical_question": "DolphinDB中asof函数的作用是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/atImax.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/atImax.md",
      "start_line": 1,
      "end_line": 36,
      "summary": "atImax函数用于返回location中最大值所在位置对应的value值。",
      "keywords": [
        "atImax",
        "location",
        "value",
        "最大值",
        "矩阵"
      ],
      "hypothetical_question": "如何使用atImax函数找到location中最大值对应的value值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/at.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/at.md",
      "start_line": 1,
      "end_line": 147,
      "summary": "DolphinDB的`at`函数用于根据布尔表达式或索引从向量、矩阵等数据结构中提取元素。",
      "keywords": [
        "at函数",
        "索引提取",
        "布尔表达式",
        "DolphinDB",
        "数据操作"
      ],
      "hypothetical_question": "如何在DolphinDB中使用`at`函数根据条件或索引提取数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/atImin.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/atImin.md",
      "start_line": 1,
      "end_line": 36,
      "summary": "atImin函数用于返回location中最小值位置对应的value值。",
      "keywords": [
        "atImin",
        "location",
        "value",
        "最小值",
        "矩阵"
      ],
      "hypothetical_question": "如何在DolphinDB中找到location中最小值对应的value值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/attributenames.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/attributenames.md",
      "start_line": 1,
      "end_line": 36,
      "summary": "attributeNames函数用于获取类实例的所有属性名称。",
      "keywords": [
        "attributeNames",
        "类实例",
        "属性名称"
      ],
      "hypothetical_question": "如何在DolphinDB中获取类实例的所有属性名称？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/atan.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/atan.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "atan函数用于计算标量、向量、矩阵或表的反正切值。",
      "keywords": [
        "atan",
        "反正切",
        "三角函数",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中如何计算一个数值的反正切值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/atanh.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/atanh.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "atanh函数用于计算标量、向量、矩阵或表的反双曲正切值。",
      "keywords": [
        "atanh",
        "反双曲正切",
        "数学函数",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中如何计算反双曲正切值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/autocorr.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/autocorr.md",
      "start_line": 1,
      "end_line": 38,
      "summary": "该文档描述了DolphinDB中的autocorr函数，用于计算向量的指定阶数自相关系数。",
      "keywords": [
        "autocorr",
        "自相关系数",
        "DolphinDB",
        "时间序列"
      ],
      "hypothetical_question": "如何在DolphinDB中计算一个向量的自相关系数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/attributevalues.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/attributevalues.md",
      "start_line": 1,
      "end_line": 44,
      "summary": "attributeValues函数用于获取类实例的所有属性及其对应的属性值，返回一个字典。",
      "keywords": [
        "attributeValues",
        "类实例",
        "属性",
        "字典",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中获取类实例的所有属性及其值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/a/avg.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/a/avg.md",
      "start_line": 1,
      "end_line": 43,
      "summary": "avg函数用于计算向量、矩阵或表中元素的平均值，忽略NULL值，功能与mean函数相同。",
      "keywords": [
        "avg",
        "平均值",
        "聚合函数",
        "NULL值",
        "mean"
      ],
      "hypothetical_question": "DolphinDB中avg函数的用途和用法是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/b/backupDB.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/b/backupDB.md",
      "start_line": 1,
      "end_line": 48,
      "summary": "backupDB函数用于备份数据库到指定路径，支持加密选项，是backup函数的特例。",
      "keywords": [
        "backupDB",
        "数据库备份",
        "加密备份"
      ],
      "hypothetical_question": "如何在DolphinDB中备份整个数据库并支持加密？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/b/backup.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/b/backup.md",
      "start_line": 1,
      "end_line": 184,
      "summary": "DolphinDB的backup函数用于以分区为单位备份分布式表数据，支持多种备份方式和参数配置。",
      "keywords": [
        "backup",
        "分布式表",
        "分区备份",
        "数据一致性",
        "增量备份"
      ],
      "hypothetical_question": "如何在DolphinDB中使用backup函数备份分布式表数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/b/backupsettings.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/b/backupsettings.md",
      "start_line": 1,
      "end_line": 39,
      "summary": "backupSettings函数用于备份数据库系统中的用户、权限信息和函数视图，并将备份文件保存到指定路径。",
      "keywords": [
        "backupSettings",
        "用户权限",
        "函数视图"
      ],
      "hypothetical_question": "如何在DolphinDB中备份用户权限和函数视图？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/b/base64Decode.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/b/base64Decode.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "该文本片段介绍了DolphinDB中的base64Decode函数，用于将Base64编码的数据解码为二进制数据。",
      "keywords": [
        "base64Decode",
        "解码",
        "二进制数据",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中将Base64编码的数据解码为二进制数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/b/beta.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/b/beta.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "介绍DolphinDB中的beta函数，用于计算Y在X上的回归系数的最小二乘估计。",
      "keywords": [
        "beta函数",
        "回归系数",
        "最小二乘估计",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中计算Y在X上的回归系数的最小二乘估计？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/b/backupTable.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/b/backupTable.md",
      "start_line": 1,
      "end_line": 52,
      "summary": "backupTable函数用于备份数据库中的表到指定路径，支持加密选项，是backup函数的特例。",
      "keywords": [
        "backupTable",
        "数据库备份",
        "加密备份",
        "DolphinDB",
        "表备份"
      ],
      "hypothetical_question": "如何在DolphinDB中备份数据库中的表并支持加密？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/b/bar.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/b/bar.md",
      "start_line": 1,
      "end_line": 150,
      "summary": "DolphinDB的`bar`函数用于根据指定的间隔对整型或时间类型的数据进行分组，并支持左右边界设置。",
      "keywords": [
        "bar",
        "分组",
        "时间间隔",
        "DURATION",
        "边界设置"
      ],
      "hypothetical_question": "如何在DolphinDB中使用bar函数对时间数据进行分组？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/b/base64Encode.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/b/base64Encode.md",
      "start_line": 1,
      "end_line": 34,
      "summary": "base64Encode函数用于将字符串标量或向量转换为Base64编码格式。",
      "keywords": [
        "base64Encode",
        "Base64编码",
        "字符串转换"
      ],
      "hypothetical_question": "如何在DolphinDB中将字符串转换为Base64编码？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/b/between.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/b/between.md",
      "start_line": 1,
      "end_line": 60,
      "summary": "介绍DolphinDB中的between函数，用于检查元素是否在指定范围内，并说明其语法、参数、使用示例及NULL值处理方式。",
      "keywords": [
        "between",
        "范围检查",
        "NULL处理",
        "DolphinDB函数",
        "数据筛选"
      ],
      "hypothetical_question": "如何在DolphinDB中使用between函数检查元素是否在指定范围内？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/b/bfill.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/b/bfill.md",
      "start_line": 1,
      "end_line": 92,
      "summary": "bfill函数用于向后填充向量、数组向量、矩阵或表中的空值，支持限制连续填充的数量。",
      "keywords": [
        "bfill",
        "空值填充",
        "DolphinDB",
        "数组向量",
        "表操作"
      ],
      "hypothetical_question": "如何在DolphinDB中使用bfill函数向后填充空值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/b/bfill_.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/b/bfill_.md",
      "start_line": 1,
      "end_line": 53,
      "summary": "bfill!函数用于用NULL值后的非空元素填充向量或表中的NULL值。",
      "keywords": [
        "bfill!",
        "NULL填充",
        "向量",
        "表",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用bfill!函数填充向量或表中的NULL值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/b/bigarray.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/b/bigarray.md",
      "start_line": 1,
      "end_line": 98,
      "summary": "DolphinDB中的bigarray函数用于创建大数组，解决内存碎片问题，适用于大数据分析。",
      "keywords": [
        "bigarray",
        "大数组",
        "内存碎片",
        "大数据分析",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中如何使用bigarray函数创建大数组以解决内存碎片问题？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/b/binaryExpr.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/b/binaryExpr.md",
      "start_line": 1,
      "end_line": 46,
      "summary": "binaryExpr函数用于生成二元运算的元代码，通过eval函数执行该元代码实现X和Y的二元运算。",
      "keywords": [
        "binaryExpr",
        "二元运算",
        "eval",
        "元代码",
        "运算符"
      ],
      "hypothetical_question": "如何在DolphinDB中使用binaryExpr函数进行二元运算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/b/bitAnd.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/b/bitAnd.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "bitAnd函数用于返回两个数值型数据的位运算与结果。",
      "keywords": [
        "bitAnd",
        "位运算",
        "数值型数据"
      ],
      "hypothetical_question": "DolphinDB中如何计算两个数值型数据的位运算与结果？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/b/bitNot.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/b/bitNot.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "bitNot函数用于对数值型数据进行按位取反操作。",
      "keywords": [
        "bitNot",
        "按位取反",
        "数值操作"
      ],
      "hypothetical_question": "DolphinDB中如何对数值进行按位取反操作？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/b/binsrch.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/b/binsrch.md",
      "start_line": 1,
      "end_line": 29,
      "summary": "binsrch函数用于在递增向量中进行二分查找，返回元素位置或-1（未找到）。",
      "keywords": [
        "binsrch",
        "二分查找",
        "递增向量",
        "查找函数",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用binsrch函数进行二分查找？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/b/bitOr.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/b/bitOr.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "介绍DolphinDB中的bitOr函数，用于返回位运算或的结果。",
      "keywords": [
        "bitOr",
        "位运算",
        "DolphinDB",
        "函数"
      ],
      "hypothetical_question": "DolphinDB中bitOr函数的语法和用法是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/b/bondCalculator.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/b/bondCalculator.md",
      "start_line": 1,
      "end_line": 173,
      "summary": "该文档详细介绍了DolphinDB中的bondCalculator函数，用于计算债券的到期收益率、净价、全价以及风险指标如久期和凸度。",
      "keywords": [
        "债券计算",
        "到期收益率",
        "久期",
        "凸度",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中计算债券的到期收益率、净价、全价以及风险指标？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/b/bitXor.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/b/bitXor.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "介绍DolphinDB中的bitXor函数，用于计算数值型数据的位运算异或结果。",
      "keywords": [
        "bitXor",
        "位运算",
        "异或",
        "DolphinDB",
        "数值运算"
      ],
      "hypothetical_question": "如何在DolphinDB中计算两个数值型数据的位运算异或结果？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/b/blob.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/b/blob.md",
      "start_line": 1,
      "end_line": 66,
      "summary": "介绍了DolphinDB中blob函数的语法、参数、用途及示例，包括将字符串转换为BLOB类型及其在内存表和分布式表中的应用。",
      "keywords": [
        "blob",
        "BLOB类型",
        "字符串转换",
        "内存表",
        "分布式表"
      ],
      "hypothetical_question": "如何在DolphinDB中将字符串转换为BLOB类型并在内存表和分布式表中使用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/b/bondCashflow.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/b/bondCashflow.md",
      "start_line": 1,
      "end_line": 68,
      "summary": "介绍DolphinDB中用于计算面值为100元的债券现金流的bondCashflow函数，支持固息债券、零息债券和贴现债券。",
      "keywords": [
        "bondCashflow",
        "债券现金流",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中计算债券的现金流？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/b/bondaccrint.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/b/bondaccrint.md",
      "start_line": 1,
      "end_line": 50,
      "summary": "介绍DolphinDB函数bondAccrInt，用于计算有价证券的应付利息。",
      "keywords": [
        "bondAccrInt",
        "应付利息",
        "有价证券"
      ],
      "hypothetical_question": "如何使用DolphinDB计算有价证券的应付利息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/b/bondDirtyPrice.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/b/bondDirtyPrice.md",
      "start_line": 1,
      "end_line": 57,
      "summary": "bondDirtyPrice函数用于计算定期付息的面值100的有价证券的含息价格。",
      "keywords": [
        "债券含息价格",
        "定期付息",
        "有价证券"
      ],
      "hypothetical_question": "如何使用DolphinDB计算定期付息的面值100的有价证券的含息价格？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/b/bool.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/b/bool.md",
      "start_line": 1,
      "end_line": 59,
      "summary": "该文档详细介绍了DolphinDB中的bool函数，用于将各种数据类型转换为布尔值。",
      "keywords": [
        "bool",
        "布尔值",
        "数据类型转换",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中将不同的数据类型转换为布尔值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/b/bondconvexity.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/b/bondconvexity.md",
      "start_line": 1,
      "end_line": 59,
      "summary": "bondConvexity函数用于计算定期付息债券的凸性，即债券价格对利率的二阶导数。",
      "keywords": [
        "bondConvexity",
        "债券凸性",
        "定期付息债券"
      ],
      "hypothetical_question": "如何计算定期付息债券的凸性？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/b/bondDuration.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/b/bondDuration.md",
      "start_line": 1,
      "end_line": 59,
      "summary": "介绍DolphinDB中的bondDuration函数，用于计算面值为100的有价证券的麦考利久期。",
      "keywords": [
        "麦考利久期",
        "债券计算",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中计算债券的麦考利久期？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/b/boxcox.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/b/boxcox.md",
      "start_line": 1,
      "end_line": 43,
      "summary": "介绍了DolphinDB中的boxcox函数，用于对数值型向量进行Box-Cox变换，包括语法、参数、详情和示例。",
      "keywords": [
        "Box-Cox变换",
        "数值型向量",
        "lambda参数",
        "DolphinDB函数"
      ],
      "hypothetical_question": "DolphinDB中的boxcox函数如何使用，它的参数和返回值是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/b/bondyield.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/b/bondyield.md",
      "start_line": 1,
      "end_line": 86,
      "summary": "介绍DolphinDB中的bondYield函数，用于通过债券净价计算有价债券的收益率，并详细说明其语法、参数和使用方法。",
      "keywords": [
        "bondYield",
        "债券收益率",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中计算债券的收益率？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/b/brentq.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/b/brentq.md",
      "start_line": 1,
      "end_line": 77,
      "summary": "介绍DolphinDB中的brentq函数，用于在给定区间内使用Brent方法求解函数的根。",
      "keywords": [
        "brentq",
        "根求解",
        "Brent方法",
        "数值计算"
      ],
      "hypothetical_question": "如何在DolphinDB中使用brentq函数求解函数的根？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/b/brute.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/b/brute.md",
      "start_line": 1,
      "end_line": 75,
      "summary": "DolphinDB中的brute函数通过穷举法在给定范围内最小化目标函数，支持网格搜索和可选优化步骤。",
      "keywords": [
        "穷举法",
        "网格搜索",
        "函数最小化",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用穷举法最小化一个函数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/b/bucket.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/b/bucket.md",
      "start_line": 1,
      "end_line": 37,
      "summary": "介绍 DolphinDB 中的 bucket 函数，用于将向量中的元素分配到指定范围和数量的桶中。",
      "keywords": [
        "bucket",
        "数据分桶",
        "向量处理",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在 DolphinDB 中使用 bucket 函数对数据进行分桶处理？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/b/bucketCount.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/b/bucketCount.md",
      "start_line": 1,
      "end_line": 33,
      "summary": "bucketCount函数用于计算数值或时间向量在指定范围内的桶计数。",
      "keywords": [
        "bucketCount",
        "桶计数",
        "数值向量",
        "时间向量",
        "数据范围"
      ],
      "hypothetical_question": "如何在DolphinDB中计算数值向量在指定范围内的桶计数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/b/businessDay.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/b/businessDay.md",
      "start_line": 1,
      "end_line": 53,
      "summary": "businessDay函数用于返回给定日期的工作日（周一到周五），若非工作日则返回最近的工作日，并支持通过offset和n参数进行间隔控制。",
      "keywords": [
        "businessDay",
        "工作日",
        "DolphinDB",
        "日期处理",
        "offset"
      ],
      "hypothetical_question": "如何在DolphinDB中获取指定日期的工作日或最近的工作日？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/b/businessMonthEnd.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/b/businessMonthEnd.md",
      "start_line": 1,
      "end_line": 70,
      "summary": "介绍了DolphinDB中的businessMonthEnd函数，用于返回指定日期所在月份的最后一个工作日，并提供了语法、参数、详情及示例。",
      "keywords": [
        "businessMonthEnd",
        "工作日",
        "DolphinDB函数",
        "日期处理"
      ],
      "hypothetical_question": "如何在DolphinDB中获取指定日期所在月份的最后一个工作日？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/b/businessMonthBegin.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/b/businessMonthBegin.md",
      "start_line": 1,
      "end_line": 70,
      "summary": "介绍DolphinDB中的businessMonthBegin函数，用于返回指定日期所在月份的第一个工作日，并支持通过offset和n参数进行灵活配置。",
      "keywords": [
        "businessMonthBegin",
        "工作日",
        "DolphinDB函数",
        "日期处理",
        "分组计算"
      ],
      "hypothetical_question": "如何在DolphinDB中获取指定日期所在月份的第一个工作日？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/b/businessQuarterBegin.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/b/businessQuarterBegin.md",
      "start_line": 1,
      "end_line": 80,
      "summary": "该文档介绍了DolphinDB函数businessQuarterBegin的语法、参数、功能及使用示例，用于计算指定日期所在季度的第一个工作日。",
      "keywords": [
        "businessQuarterBegin",
        "工作日",
        "季度",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中计算一个日期所在季度的第一个工作日？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/b/businessQuarterEnd.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/b/businessQuarterEnd.md",
      "start_line": 1,
      "end_line": 78,
      "summary": "该文档描述了DolphinDB中的businessQuarterEnd函数，用于返回指定日期所在季度的最后一个工作日，并支持自定义结束月份、偏移量和间隔参数。",
      "keywords": [
        "businessQuarterEnd",
        "DolphinDB",
        "日期函数",
        "季度结束"
      ],
      "hypothetical_question": "如何在DolphinDB中计算一个日期所在季度的最后一个工作日？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/b/bvls.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/b/bvls.md",
      "start_line": 1,
      "end_line": 55,
      "summary": "介绍DolphinDB中的bvls函数，用于执行有界变量最小二乘法回归分析。",
      "keywords": [
        "有界变量最小二乘法",
        "回归分析",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中使用bvls函数进行有界变量最小二乘法回归分析？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/b/businessYearBegin.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/b/businessYearBegin.md",
      "start_line": 1,
      "end_line": 61,
      "summary": "介绍DolphinDB函数businessYearBegin的语法、参数、功能及使用示例，用于返回最近一个小于等于给定日期的年度首个工作日。",
      "keywords": [
        "businessYearBegin",
        "年度首个工作日",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中获取最近一个小于等于给定日期的年度首个工作日？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cancelConsoleJob.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cancelConsoleJob.md",
      "start_line": 1,
      "end_line": 34,
      "summary": "cancelConsoleJob函数用于取消已提交但未完成的交互式任务，需提供作业ID，且在当前子任务完成后生效。",
      "keywords": [
        "cancelConsoleJob",
        "交互式任务",
        "作业ID"
      ],
      "hypothetical_question": "如何在DolphinDB中取消已提交但未完成的交互式任务？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/b/businessYearEnd.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/b/businessYearEnd.md",
      "start_line": 1,
      "end_line": 84,
      "summary": "介绍DolphinDB中的businessYearEnd函数，用于返回指定日期所在年份的最后一个工作日，并支持自定义结束月份和偏移量。",
      "keywords": [
        "businessYearEnd",
        "DolphinDB",
        "工作日",
        "日期函数"
      ],
      "hypothetical_question": "如何在DolphinDB中获取指定日期所在年份的最后一个工作日？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cachedTable.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cachedTable.md",
      "start_line": 1,
      "end_line": 60,
      "summary": "cachedTable函数用于创建一种特殊类型的内存表，即缓存表，它会根据设定的时间间隔自动更新数据。",
      "keywords": [
        "cachedTable",
        "内存表",
        "数据更新"
      ],
      "hypothetical_question": "如何在DolphinDB中创建一个会自动更新数据的缓存表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cacheDSNow.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cacheDSNow.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "`cacheDSNow` 函数用于立即执行并缓存数据源及其缓存行的总数。",
      "keywords": [
        "cacheDSNow",
        "数据源",
        "缓存"
      ],
      "hypothetical_question": "如何使用 `cacheDSNow` 函数立即缓存数据源？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cacheDS_.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cacheDS_.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "`cacheDS!` 函数用于缓存数据源或数据源列表的数据，并返回操作是否成功。",
      "keywords": [
        "cacheDS!",
        "数据缓存",
        "数据源"
      ],
      "hypothetical_question": "DolphinDB 中如何使用 `cacheDS!` 函数缓存数据源？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cancelRebalanceTask.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cancelRebalanceTask.md",
      "start_line": 1,
      "end_line": 14,
      "summary": "介绍了如何使用cancelRebalanceTask函数取消尚未执行的再平衡任务。",
      "keywords": [
        "cancelRebalanceTask",
        "再平衡任务",
        "管理员"
      ],
      "hypothetical_question": "如何取消已经提交但尚未开始执行的再平衡任务？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/callableFixedRateBondDirtyPrice.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/callableFixedRateBondDirtyPrice.md",
      "start_line": 1,
      "end_line": 135,
      "summary": "介绍如何使用DolphinDB的callableFixedRateBondDirtyPrice函数计算含权固息债的含息价格。",
      "keywords": [
        "含权固息债",
        "含息价格",
        "HullWhite模型",
        "可赎回债券",
        "可回售债券"
      ],
      "hypothetical_question": "如何在DolphinDB中计算含权固息债的含息价格？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cancelRecoveryTask.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cancelRecoveryTask.md",
      "start_line": 1,
      "end_line": 14,
      "summary": "介绍如何使用cancelRecoveryTask函数取消尚未执行的副本恢复任务。",
      "keywords": [
        "cancelRecoveryTask",
        "副本恢复",
        "任务ID"
      ],
      "hypothetical_question": "如何取消DolphinDB中尚未执行的副本恢复任务？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cancelJob.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cancelJob.md",
      "start_line": 1,
      "end_line": 52,
      "summary": "DolphinDB的cancelJob函数用于取消已提交但未完成的批处理作业，支持取消单个或多个作业，并介绍了权限管理和版本更新中的改进。",
      "keywords": [
        "cancelJob",
        "批处理作业",
        "DolphinDB",
        "权限管理",
        "作业ID"
      ],
      "hypothetical_question": "如何在DolphinDB中取消已提交但未完成的批处理作业？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cancelpkeycompactiontask.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cancelpkeycompactiontask.md",
      "start_line": 1,
      "end_line": 20,
      "summary": "介绍如何使用cancelPKEYCompactionTask函数取消目标分区正在执行的compaction任务。",
      "keywords": [
        "cancelPKEYCompactionTask",
        "compaction",
        "chunkId"
      ],
      "hypothetical_question": "如何在DolphinDB中取消正在执行的compaction任务？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cast.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cast.md",
      "start_line": 1,
      "end_line": 132,
      "summary": "DolphinDB中的cast函数用于数据类型转换、矩阵形状改变和向量到矩阵的转换。",
      "keywords": [
        "cast",
        "数据类型转换",
        "矩阵形状",
        "向量转换",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中进行数据类型转换和矩阵形状的改变？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cdfBeta.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cdfBeta.md",
      "start_line": 1,
      "end_line": 28,
      "summary": "介绍DolphinDB中的cdfBeta函数，用于计算Beta分布的累计密度函数值。",
      "keywords": [
        "cdfBeta",
        "Beta分布",
        "累计密度函数"
      ],
      "hypothetical_question": "如何在DolphinDB中计算Beta分布的累计密度函数值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cbrt.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cbrt.md",
      "start_line": 1,
      "end_line": 33,
      "summary": "DolphinDB中的cbrt函数用于计算输入X的立方根，支持多种数据类型输入，返回DOUBLE类型结果。",
      "keywords": [
        "cbrt",
        "立方根",
        "DOUBLE类型",
        "DolphinDB函数"
      ],
      "hypothetical_question": "DolphinDB中如何计算一个数的立方根？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cdfBinomial.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cdfBinomial.md",
      "start_line": 1,
      "end_line": 32,
      "summary": "介绍DolphinDB中的cdfBinomial函数，用于计算二项分布的累计密度函数值。",
      "keywords": [
        "cdfBinomial",
        "二项分布",
        "累计密度函数"
      ],
      "hypothetical_question": "如何在DolphinDB中计算二项分布的累计密度函数值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cdfChiSquare.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cdfChiSquare.md",
      "start_line": 1,
      "end_line": 28,
      "summary": "该文档详细介绍了DolphinDB中的cdfChiSquare函数，用于计算卡方分布的累计密度函数值。",
      "keywords": [
        "cdfChiSquare",
        "卡方分布",
        "累计密度函数",
        "自由度"
      ],
      "hypothetical_question": "如何在DolphinDB中计算卡方分布的累计密度函数值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cdfF.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cdfF.md",
      "start_line": 1,
      "end_line": 28,
      "summary": "介绍DolphinDB中的cdfF函数，用于计算F分布的累计密度函数值。",
      "keywords": [
        "cdfF",
        "F分布",
        "累计密度函数",
        "自由度"
      ],
      "hypothetical_question": "如何在DolphinDB中计算F分布的累计密度函数值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cdfExp.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cdfExp.md",
      "start_line": 1,
      "end_line": 28,
      "summary": "cdfExp函数用于计算指数分布的累计密度函数值。",
      "keywords": [
        "cdfExp",
        "指数分布",
        "累计密度函数"
      ],
      "hypothetical_question": "如何使用DolphinDB的cdfExp函数计算指数分布的累计密度函数值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cdfGamma.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cdfGamma.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "介绍 DolphinDB 中的 cdfGamma 函数，用于计算 Gamma 分布的累计密度函数值。",
      "keywords": [
        "cdfGamma",
        "Gamma 分布",
        "累计密度函数"
      ],
      "hypothetical_question": "如何在 DolphinDB 中计算 Gamma 分布的累计密度函数值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cdfStudent.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cdfStudent.md",
      "start_line": 1,
      "end_line": 28,
      "summary": "介绍DolphinDB中的cdfStudent函数，用于计算t分布的累计密度函数值。",
      "keywords": [
        "cdfStudent",
        "t分布",
        "累计密度函数"
      ],
      "hypothetical_question": "如何在DolphinDB中计算t分布的累计密度函数值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cdfLogistic.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cdfLogistic.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "介绍DolphinDB中的cdfLogistic函数，用于计算Logistic分布的累计密度函数值。",
      "keywords": [
        "cdfLogistic",
        "Logistic分布",
        "累计密度函数"
      ],
      "hypothetical_question": "如何在DolphinDB中计算Logistic分布的累计密度函数值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cdfUniform.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cdfUniform.md",
      "start_line": 1,
      "end_line": 28,
      "summary": "介绍DolphinDB中的cdfUniform函数，用于计算均匀分布的累计密度函数值。",
      "keywords": [
        "cdfUniform",
        "累计密度函数",
        "均匀分布",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中计算均匀分布的累计密度函数值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cdfNormal.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cdfNormal.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "介绍DolphinDB中的cdfNormal函数，用于计算正态分布的累计密度函数值。",
      "keywords": [
        "cdfNormal",
        "正态分布",
        "累计密度函数",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中计算正态分布的累计密度函数值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cdfPoisson.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cdfPoisson.md",
      "start_line": 1,
      "end_line": 28,
      "summary": "该文档详细介绍了DolphinDB中的cdfPoisson函数，用于计算泊松分布的累计分布函数值。",
      "keywords": [
        "cdfPoisson",
        "泊松分布",
        "累计分布函数"
      ],
      "hypothetical_question": "如何在DolphinDB中计算泊松分布的累计分布函数值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cdfZipf.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cdfZipf.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "介绍DolphinDB中的cdfZipf函数，用于计算Zipf分布的累计密度函数值。",
      "keywords": [
        "cdfZipf",
        "Zipf分布",
        "累计密度函数",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中计算Zipf分布的累计密度函数值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cdfKolmogorov.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cdfKolmogorov.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "介绍DolphinDB中的cdfKolmogorov函数，用于计算Kolmogorov分布的累计密度函数值。",
      "keywords": [
        "cdfKolmogorov",
        "Kolmogorov分布",
        "累计密度函数"
      ],
      "hypothetical_question": "如何在DolphinDB中计算Kolmogorov分布的累计密度函数值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cdfWeibull.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cdfWeibull.md",
      "start_line": 1,
      "end_line": 28,
      "summary": "介绍 DolphinDB 中的 cdfWeibull 函数，用于计算 Weibull 分布的累计密度函数值。",
      "keywords": [
        "cdfWeibull",
        "Weibull 分布",
        "累计密度函数"
      ],
      "hypothetical_question": "如何在 DolphinDB 中计算 Weibull 分布的累计密度函数值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cell.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cell.md",
      "start_line": 1,
      "end_line": 48,
      "summary": "介绍DolphinDB中的cell函数，用于高效获取矩阵或表中指定行列的标量值。",
      "keywords": [
        "cell",
        "矩阵",
        "表",
        "标量",
        "行列"
      ],
      "hypothetical_question": "如何在DolphinDB中高效获取矩阵或表中指定行列的标量值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/ceil.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/ceil.md",
      "start_line": 1,
      "end_line": 66,
      "summary": "介绍了DolphinDB中的ceil函数，用于将实数映射到大于等于它的最小整数，并提供了相关示例。",
      "keywords": [
        "ceil",
        "DolphinDB",
        "数学函数",
        "取整"
      ],
      "hypothetical_question": "DolphinDB中ceil函数的用途和示例是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cells.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cells.md",
      "start_line": 1,
      "end_line": 43,
      "summary": "介绍了DolphinDB中cells函数的语法、参数、功能及使用示例，用于从矩阵中提取指定位置的元素。",
      "keywords": [
        "cells",
        "矩阵",
        "元素提取",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中从矩阵中提取指定位置的元素？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cds.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cds.md",
      "start_line": 1,
      "end_line": 123,
      "summary": "DolphinDB中的cds函数用于计算信用违约互换（CDS）的估值，支持多种参数配置和日期调整规则。",
      "keywords": [
        "信用违约互换",
        "CDS估值",
        "DolphinDB函数",
        "金融衍生品",
        "日期调整规则"
      ],
      "hypothetical_question": "如何在DolphinDB中使用cds函数计算信用违约互换的估值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/changePwd.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/changePwd.md",
      "start_line": 1,
      "end_line": 32,
      "summary": "DolphinDB的changePwd函数用于修改用户密码，并支持通过配置项增强密码复杂性校验。",
      "keywords": [
        "changePwd",
        "密码修改",
        "enhancedSecurityVerification",
        "DolphinDB",
        "密码复杂性"
      ],
      "hypothetical_question": "如何在DolphinDB中修改用户密码并设置密码复杂性要求？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/char.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/char.md",
      "start_line": 1,
      "end_line": 57,
      "summary": "char函数用于将输入转换为CHAR数据类型，支持多种输入类型但字符串需在ASCII码范围内。",
      "keywords": [
        "char",
        "数据类型转换",
        "ASCII码"
      ],
      "hypothetical_question": "DolphinDB中如何将输入转换为CHAR数据类型？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/charAt.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/charAt.md",
      "start_line": 1,
      "end_line": 33,
      "summary": "charAt函数用于返回字符串中指定位置的字符，返回结果为CHAR类型。",
      "keywords": [
        "charAt",
        "字符串",
        "字符",
        "位置",
        "CHAR类型"
      ],
      "hypothetical_question": "如何在DolphinDB中获取字符串中指定位置的字符？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/checkBackup.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/checkBackup.md",
      "start_line": 1,
      "end_line": 70,
      "summary": "介绍DolphinDB的checkBackup函数，用于检查备份文件的完整性和准确性，并提供异常处理方案。",
      "keywords": [
        "checkBackup",
        "备份检查",
        "DolphinDB",
        "数据库备份"
      ],
      "hypothetical_question": "如何在DolphinDB中检查备份文件的完整性和准确性？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cj.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cj.md",
      "start_line": 1,
      "end_line": 47,
      "summary": "cj函数用于对两个表执行交叉连接，生成它们的笛卡儿积。",
      "keywords": [
        "交叉连接",
        "笛卡儿积",
        "表操作",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中对两个表执行交叉连接？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/chiSquareTest.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/chiSquareTest.md",
      "start_line": 1,
      "end_line": 64,
      "summary": "介绍DolphinDB中的chiSquareTest函数，用于进行Chi-square Goodness-of-fit检验或Pearson's Chi-squared检验，并返回相关统计结果。",
      "keywords": [
        "chiSquareTest",
        "Chi-square检验",
        "Pearson's Chi-squared检验",
        "统计检验",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用chiSquareTest函数进行Chi-square检验？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cholesky.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cholesky.md",
      "start_line": 1,
      "end_line": 51,
      "summary": "介绍 DolphinDB 中的 cholesky 函数，用于对对称正定矩阵进行 Cholesky 分解。",
      "keywords": [
        "cholesky",
        "矩阵分解",
        "对称正定矩阵",
        "下三角",
        "上三角"
      ],
      "hypothetical_question": "DolphinDB 中如何使用 cholesky 函数对矩阵进行 Cholesky 分解？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cleanOutdateLogFiles.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cleanOutdateLogFiles.md",
      "start_line": 1,
      "end_line": 14,
      "summary": "cleanOutdateLogFiles函数用于手动清理超过指定保留时间的系统日志。",
      "keywords": [
        "cleanOutdateLogFiles",
        "系统日志",
        "清理"
      ],
      "hypothetical_question": "如何手动清理DolphinDB中超过保留时间的系统日志？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/clearDSCacheNow.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/clearDSCacheNow.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "clearDSCacheNow函数用于立即清除数据源及其缓存。",
      "keywords": [
        "clearDSCacheNow",
        "数据源",
        "缓存"
      ],
      "hypothetical_question": "如何立即清除DolphinDB中的数据源缓存？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/clearDSCache_.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/clearDSCache_.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "clearDSCache!函数用于指示系统在下次执行数据源后清除缓存。",
      "keywords": [
        "clearDSCache!",
        "数据源",
        "缓存"
      ],
      "hypothetical_question": "如何在DolphinDB中清除数据源的缓存？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/clearCachedDatabase.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/clearCachedDatabase.md",
      "start_line": 1,
      "end_line": 16,
      "summary": "该文档介绍了`clearCachedDatabase`函数的语法、参数及其功能，用于清理分布式数据库中加载到内存的数据表缓存。",
      "keywords": [
        "clearCachedDatabase",
        "分布式数据库",
        "缓存清理",
        "内存管理"
      ],
      "hypothetical_question": "如何清理DolphinDB中分布式数据库的内存缓存？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/clearalliotdblatestkeycache.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/clearalliotdblatestkeycache.md",
      "start_line": 1,
      "end_line": 20,
      "summary": "该函数用于清理最新值缓存表缓存。",
      "keywords": [
        "clearAllIOTDBLatestKeyCache",
        "缓存清理",
        "最新值缓存"
      ],
      "hypothetical_question": "如何清理DolphinDB中的最新值缓存表缓存？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/clearCachedModules.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/clearCachedModules.md",
      "start_line": 1,
      "end_line": 60,
      "summary": "该文档介绍了如何使用`clearCachedModules`命令清除缓存的module，以便在更新module文件后重新加载，而无需重启节点。",
      "keywords": [
        "clearCachedModules",
        "module",
        "缓存",
        "管理员",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中更新module文件后重新加载module而不重启节点？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/clear_.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/clear_.md",
      "start_line": 1,
      "end_line": 57,
      "summary": "`clear!` 函数用于清除向量、矩阵、集合、字典或内存表中的所有内容，同时保持其数据类型不变。",
      "keywords": [
        "clear!",
        "清除数据",
        "数据类型",
        "内存表",
        "字典"
      ],
      "hypothetical_question": "DolphinDB中如何清除一个向量或字典中的所有数据而不改变其数据类型？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/clearAllCache.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/clearAllCache.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "clearAllCache函数用于清除DolphinDB中的多种缓存数据，包括维度表、OLAP引擎分区表、TSDB引擎的索引和字典编码缓存，以及分布式计算的中间结果。",
      "keywords": [
        "clearAllCache",
        "缓存清除",
        "DolphinDB",
        "OLAP引擎",
        "TSDB引擎"
      ],
      "hypothetical_question": "DolphinDB中clearAllCache函数的作用是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/clearalliotdbstatictablecache.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/clearalliotdbstatictablecache.md",
      "start_line": 1,
      "end_line": 20,
      "summary": "该函数用于清理DolphinDB中的静态表缓存。",
      "keywords": [
        "clearAllIOTDBStaticTableCache",
        "静态表缓存",
        "清理"
      ],
      "hypothetical_question": "如何在DolphinDB中清理静态表缓存？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/clearTablePersistence.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/clearTablePersistence.md",
      "start_line": 1,
      "end_line": 36,
      "summary": "clearTablePersistence函数用于停止流数据表的磁盘持久化并删除磁盘上的表内容，同时保留表结构。",
      "keywords": [
        "clearTablePersistence",
        "流数据表",
        "磁盘持久化",
        "表结构"
      ],
      "hypothetical_question": "如何停止流数据表的磁盘持久化并删除磁盘上的表内容但保留表结构？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/clearalltsdbsymbolbasecache.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/clearalltsdbsymbolbasecache.md",
      "start_line": 1,
      "end_line": 21,
      "summary": "该函数用于清除缓存中所有未被使用的symbolBase。",
      "keywords": [
        "clearAllTSDBSymbolBaseCache",
        "symbolBase",
        "缓存"
      ],
      "hypothetical_question": "如何清除DolphinDB中所有未被使用的symbolBase缓存？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/clip.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/clip.md",
      "start_line": 1,
      "end_line": 145,
      "summary": "clip函数用于将输入数据X的值限制在由Y和Z指定的范围内，返回一个与X数据形式和数据类型相同的结果。",
      "keywords": [
        "clip",
        "数值限制",
        "区间限制",
        "数据处理",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用clip函数将数值限制在指定范围内？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/clearcomputenodecache.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/clearcomputenodecache.md",
      "start_line": 1,
      "end_line": 36,
      "summary": "该文档描述了DolphinDB中clearComputeNodeCache函数的语法、参数和用法，用于清空计算节点的内存和磁盘缓存。",
      "keywords": [
        "clearComputeNodeCache",
        "内存缓存",
        "磁盘缓存",
        "计算节点",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中清空计算节点的内存和磁盘缓存？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/clearcomputenodediskcache.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/clearcomputenodediskcache.md",
      "start_line": 1,
      "end_line": 36,
      "summary": "该文档描述了如何使用`clearComputeNodeDiskCache`函数来清空计算节点上的磁盘缓存。",
      "keywords": [
        "clearComputeNodeDiskCache",
        "磁盘缓存",
        "计算节点",
        "数据库"
      ],
      "hypothetical_question": "如何在DolphinDB中清空计算节点的磁盘缓存？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/clip_.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/clip_.md",
      "start_line": 1,
      "end_line": 18,
      "summary": "clip! 函数用于原地修改输入对象 X 的值，其修改规则参考 clip 函数。",
      "keywords": [
        "clip!",
        "原地修改",
        "函数",
        "DolphinDB",
        "数值处理"
      ],
      "hypothetical_question": "DolphinDB 中的 clip! 函数有什么作用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/close.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/close.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "close函数用于关闭已打开的文件或远程连接，需用户登录后执行。",
      "keywords": [
        "close",
        "文件句柄",
        "远程连接",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中关闭一个已打开的文件或远程连接？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cols.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cols.md",
      "start_line": 1,
      "end_line": 53,
      "summary": "cols函数用于返回向量、矩阵或表中的列数。",
      "keywords": [
        "cols",
        "列数",
        "向量",
        "矩阵",
        "表"
      ],
      "hypothetical_question": "在DolphinDB中如何获取一个矩阵或表的列数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/coevent.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/coevent.md",
      "start_line": 1,
      "end_line": 54,
      "summary": "DolphinDB的coevent函数用于统计给定时间间隔内事件对的出现次数。",
      "keywords": [
        "coevent",
        "事件统计",
        "时间间隔"
      ],
      "hypothetical_question": "如何在DolphinDB中统计特定时间窗口内两个事件同时出现的次数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/closeSessions.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/closeSessions.md",
      "start_line": 1,
      "end_line": 40,
      "summary": "介绍DolphinDB中用于关闭一个或多个session的函数closeSessions的语法、参数和用法示例。",
      "keywords": [
        "closeSessions",
        "session",
        "DolphinDB",
        "sessionId"
      ],
      "hypothetical_question": "如何在DolphinDB中关闭一个或多个session？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/col.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/col.md",
      "start_line": 1,
      "end_line": 55,
      "summary": "介绍DolphinDB中`col`函数的语法、参数、功能及使用示例。",
      "keywords": [
        "col",
        "column",
        "向量",
        "矩阵",
        "表"
      ],
      "hypothetical_question": "在DolphinDB中如何提取向量、矩阵或表的某一列？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/coint.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/coint.md",
      "start_line": 1,
      "end_line": 56,
      "summary": "该文档详细介绍了DolphinDB中的coint函数，用于检验单变量方程中的协整性，包括语法、参数、返回结果及示例。",
      "keywords": [
        "协整性检验",
        "coint函数",
        "增广Engle-Granger检验"
      ],
      "hypothetical_question": "如何在DolphinDB中使用coint函数进行协整性检验？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/compose.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/compose.md",
      "start_line": 1,
      "end_line": 35,
      "summary": "DolphinDB中的compose函数用于将两个函数组合成一个新的复合函数，执行顺序为second(first(...))。",
      "keywords": [
        "compose",
        "复合函数",
        "函数组合",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中将两个函数组合成一个新的复合函数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/complex.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/complex.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "介绍DolphinDB中complex函数的语法、参数、详情及使用示例。",
      "keywords": [
        "complex",
        "复数",
        "DolphinDB",
        "函数",
        "数值型"
      ],
      "hypothetical_question": "DolphinDB中如何创建复数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/columnNames.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/columnNames.md",
      "start_line": 1,
      "end_line": 61,
      "summary": "columnNames函数用于获取矩阵或表的列名向量。",
      "keywords": [
        "columnNames",
        "列名",
        "矩阵",
        "表",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中获取矩阵或表的列名？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/conditionalFilter.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/conditionalFilter.md",
      "start_line": 1,
      "end_line": 103,
      "summary": "conditionalFilter函数根据字典参数filterMap，对向量X和condition进行条件过滤，返回布尔值向量。",
      "keywords": [
        "conditionalFilter",
        "过滤条件",
        "字典参数",
        "布尔值向量"
      ],
      "hypothetical_question": "如何使用conditionalFilter函数根据字典参数对向量进行条件过滤？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/concat.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/concat.md",
      "start_line": 1,
      "end_line": 70,
      "summary": "concat函数用于连接字符串或字符，支持标量和向量输入，并可选择分隔符。",
      "keywords": [
        "concat",
        "字符串连接",
        "分隔符",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用concat函数连接字符串或字符？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/constantdesc.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/constantdesc.md",
      "start_line": 1,
      "end_line": 87,
      "summary": "constantDesc 函数用于返回描述对象属性的字典，包含数据形式、类型、内存分配等详细信息。",
      "keywords": [
        "constantDesc",
        "对象属性",
        "字典"
      ],
      "hypothetical_question": "DolphinDB 中 constantDesc 函数的作用是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/concatDateTime.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/concatDateTime.md",
      "start_line": 1,
      "end_line": 52,
      "summary": "concatDateTime函数用于合并日期和时间，根据输入的时间类型返回不同的时间戳类型。",
      "keywords": [
        "concatDateTime",
        "日期合并",
        "时间合并",
        "DATETIME",
        "TIMESTAMP"
      ],
      "hypothetical_question": "如何在DolphinDB中合并日期和时间？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/concatMatrix.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/concatMatrix.md",
      "start_line": 1,
      "end_line": 47,
      "summary": "concatMatrix函数用于水平或垂直拼接多个矩阵，要求拼接方向上的维度必须相同。",
      "keywords": [
        "concatMatrix",
        "矩阵拼接",
        "水平拼接",
        "垂直拼接"
      ],
      "hypothetical_question": "如何在DolphinDB中水平或垂直拼接多个矩阵？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/compress.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/compress.md",
      "start_line": 1,
      "end_line": 57,
      "summary": "DolphinDB中的compress函数用于使用指定压缩算法（如lz4、delta、zstd或chimp）对向量或数据表进行压缩，需配合decompress函数解压使用。",
      "keywords": [
        "compress",
        "压缩算法",
        "lz4",
        "zstd",
        "decompress"
      ],
      "hypothetical_question": "DolphinDB中compress函数支持哪些压缩算法，以及如何使用它们？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/conditionalIterate.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/conditionalIterate.md",
      "start_line": 1,
      "end_line": 154,
      "summary": "conditionalIterate函数用于在响应式状态引擎中实现条件迭代计算，根据布尔条件选择执行trueValue计算或基于历史结果的falseIterFunc迭代计算。",
      "keywords": [
        "conditionalIterate",
        "响应式状态引擎",
        "迭代计算",
        "布尔条件",
        "滑动窗口函数"
      ],
      "hypothetical_question": "如何在DolphinDB的响应式状态引擎中使用conditionalIterate函数实现条件迭代计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/contextCount.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/contextCount.md",
      "start_line": 1,
      "end_line": 32,
      "summary": "contextCount函数用于计算两个向量中相同位置都不为NULL的元素个数。",
      "keywords": [
        "contextCount",
        "NULL",
        "向量",
        "计算"
      ],
      "hypothetical_question": "DolphinDB中如何计算两个向量中相同位置都不为NULL的元素个数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/contextSum.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/contextSum.md",
      "start_line": 1,
      "end_line": 32,
      "summary": "contextSum函数用于计算X和Y中对应元素都不为NULL时X元素的和。",
      "keywords": [
        "contextSum",
        "NULL处理",
        "向量计算"
      ],
      "hypothetical_question": "如何在DolphinDB中计算两个向量中对应非NULL元素的和？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/contextSum2.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/contextSum2.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "contextSum2函数计算X和Y中非NULL对应位置的X元素的平方和，结果总是DOUBLE类型。",
      "keywords": [
        "contextSum2",
        "平方和",
        "非NULL",
        "DOUBLE",
        "向量"
      ],
      "hypothetical_question": "DolphinDB中如何计算两个向量中非NULL对应位置的元素的平方和？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/convertEncode.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/convertEncode.md",
      "start_line": 1,
      "end_line": 34,
      "summary": "DolphinDB的convertEncode函数用于转换字符串编码，支持不同编码之间的转换，且对编码名称大小写敏感。",
      "keywords": [
        "convertEncode",
        "字符串编码",
        "gbk",
        "utf-8",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中转换字符串的编码格式？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/convertTZ.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/convertTZ.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "convertTZ函数用于将指定时区的时间对象转换为另一个时区的时间。",
      "keywords": [
        "convertTZ",
        "时区转换",
        "时间对象",
        "DATETIME",
        "TIMESTAMP"
      ],
      "hypothetical_question": "如何在DolphinDB中将一个时间对象从一个时区转换到另一个时区？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/convertExcelFormula.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/convertExcelFormula.md",
      "start_line": 1,
      "end_line": 56,
      "summary": "DolphinDB的convertExcelFormula函数用于将Excel公式转换为DolphinDB表达式，支持四则运算、逻辑运算和聚合函数。",
      "keywords": [
        "convertExcelFormula",
        "Excel公式转换",
        "DolphinDB表达式",
        "聚合函数"
      ],
      "hypothetical_question": "如何将Excel公式转换为DolphinDB表达式？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/copy.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/copy.md",
      "start_line": 1,
      "end_line": 60,
      "summary": "DolphinDB中的copy函数用于创建对象的浅拷贝，仅复制最外层结构而共享内部子对象的引用。",
      "keywords": [
        "copy",
        "浅拷贝",
        "DolphinDB",
        "deepCopy",
        "引用共享"
      ],
      "hypothetical_question": "DolphinDB中copy函数和deepCopy函数有什么区别？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cosh.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cosh.md",
      "start_line": 1,
      "end_line": 34,
      "summary": "DolphinDB中的cosh函数用于计算双曲余弦值。",
      "keywords": [
        "cosh",
        "双曲余弦",
        "DolphinDB函数"
      ],
      "hypothetical_question": "DolphinDB中如何计算双曲余弦值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cos.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cos.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "介绍DolphinDB中的cos函数，用于计算标量、向量或矩阵的余弦值。",
      "keywords": [
        "cos",
        "余弦",
        "三角函数",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中如何计算标量、向量或矩阵的余弦值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/corr.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/corr.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "介绍DolphinDB中corr函数的语法、参数、详情及使用示例，用于计算两个数值型向量、矩阵或表之间的相关性。",
      "keywords": [
        "corr",
        "相关性",
        "DolphinDB",
        "数值型向量",
        "矩阵"
      ],
      "hypothetical_question": "如何在DolphinDB中计算两个数值型向量之间的相关性？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/convertiblefixedratebonddirtyprice.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/convertiblefixedratebonddirtyprice.md",
      "start_line": 1,
      "end_line": 155,
      "summary": "该文档详细介绍了DolphinDB中convertibleFixedRateBondDirtyPrice函数的语法、参数和使用方法，用于计算固息可转债的含息价格。",
      "keywords": [
        "可转换债券",
        "含息价格",
        "二叉树模型"
      ],
      "hypothetical_question": "如何在DolphinDB中计算固息可转债的含息价格？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/copyReplicas.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/copyReplicas.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "介绍DolphinDB中copyReplicas函数的语法、参数、功能及使用示例，用于将源节点上的chunk副本复制到目标节点。",
      "keywords": [
        "copyReplicas",
        "chunk复制",
        "DolphinDB",
        "节点管理",
        "副本管理"
      ],
      "hypothetical_question": "如何在DolphinDB中将一个节点上的chunk副本复制到另一个节点？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/corrMatrix.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/corrMatrix.md",
      "start_line": 1,
      "end_line": 53,
      "summary": "DolphinDB的corrMatrix函数用于计算矩阵的列间相关矩阵，优化了性能并处理空值。",
      "keywords": [
        "corrMatrix",
        "相关矩阵",
        "DolphinDB",
        "性能优化",
        "空值处理"
      ],
      "hypothetical_question": "如何在DolphinDB中高效计算矩阵的列间相关矩阵？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/covar.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/covar.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "介绍DolphinDB中的covar函数，用于计算两个数值型向量、矩阵或表的协方差。",
      "keywords": [
        "covar",
        "协方差",
        "DolphinDB",
        "数值型向量"
      ],
      "hypothetical_question": "如何在DolphinDB中计算两个数值型向量的协方差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/countNanInf.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/countNanInf.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "countNanInf函数用于统计DOUBLE类型数据中NaN或Inf值的数量，可选择是否包含NULL值。",
      "keywords": [
        "countNanInf",
        "NaN",
        "Inf",
        "聚合函数",
        "NULL"
      ],
      "hypothetical_question": "如何统计DOUBLE类型数据中NaN或Inf值的数量？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/count.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/count.md",
      "start_line": 1,
      "end_line": 93,
      "summary": "count函数用于计算向量、矩阵或表中非NULL元素的个数，与size函数的区别在于count忽略NULL值，并详细介绍了其在SQL查询中的三种常见用法。",
      "keywords": [
        "count函数",
        "非NULL元素",
        "SQL查询",
        "size函数",
        "分区表"
      ],
      "hypothetical_question": "DolphinDB中count函数和size函数有什么区别？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/crc32.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/crc32.md",
      "start_line": 1,
      "end_line": 29,
      "summary": "介绍DolphinDB中的crc32函数，用于根据CRC32算法对字符串进行哈希处理，生成INT类型数据。",
      "keywords": [
        "crc32",
        "哈希",
        "DolphinDB",
        "字符串处理"
      ],
      "hypothetical_question": "DolphinDB中如何使用crc32函数对字符串进行哈希处理？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/createCatalog.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/createCatalog.md",
      "start_line": 1,
      "end_line": 20,
      "summary": "介绍如何使用 `createCatalog` 函数创建一个 catalog。",
      "keywords": [
        "createCatalog",
        "catalog",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在 DolphinDB 中创建一个 catalog？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/covarMatrix.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/covarMatrix.md",
      "start_line": 1,
      "end_line": 48,
      "summary": "covarMatrix函数用于计算矩阵的协方差矩阵，并对含空值的矩阵进行了特殊处理，同时优化了性能。",
      "keywords": [
        "协方差矩阵",
        "矩阵计算",
        "空值处理",
        "性能优化"
      ],
      "hypothetical_question": "如何在DolphinDB中计算矩阵的协方差矩阵并处理空值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/createAsofJoinEngine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/createAsofJoinEngine.md",
      "start_line": 1,
      "end_line": 179,
      "summary": "介绍DolphinDB中createAsofJoinEngine函数的语法、参数、功能及使用示例，用于创建流数据asof join引擎。",
      "keywords": [
        "createAsofJoinEngine",
        "流数据引擎",
        "asof join",
        "DolphinDB",
        "时间序列"
      ],
      "hypothetical_question": "如何在DolphinDB中使用createAsofJoinEngine函数创建流数据asof join引擎？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/createAnomalyDetectionEngine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/createAnomalyDetectionEngine.md",
      "start_line": 1,
      "end_line": 208,
      "summary": "介绍了DolphinDB中createAnomalyDetectionEngine函数的语法、参数、计算规则及功能，用于创建异常检测引擎并处理流数据中的异常检测。",
      "keywords": [
        "createAnomalyDetectionEngine",
        "流数据引擎",
        "异常检测",
        "聚合函数",
        "窗口计算"
      ],
      "hypothetical_question": "如何在DolphinDB中使用createAnomalyDetectionEngine函数创建异常检测引擎并处理流数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/createCrossSectionalAggregator.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/createCrossSectionalAggregator.md",
      "start_line": 1,
      "end_line": 7,
      "summary": "createCrossSectionalAggregator 是 createCrossSectionalEngine 的别名。",
      "keywords": [
        "createCrossSectionalAggregator",
        "createCrossSectionalEngine",
        "别名"
      ],
      "hypothetical_question": "createCrossSectionalAggregator 和 createCrossSectionalEngine 之间有什么关系？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/createEqualJoinEngine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/createEqualJoinEngine.md",
      "start_line": 1,
      "end_line": 8,
      "summary": "createEqualJoinEngine 是 createEquiJoinEngine 的别名。",
      "keywords": [
        "createEqualJoinEngine",
        "createEquiJoinEngine",
        "别名"
      ],
      "hypothetical_question": "createEqualJoinEngine 和 createEquiJoinEngine 之间有什么关系？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/createCrossSectionalEngine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/createCrossSectionalEngine.md",
      "start_line": 1,
      "end_line": 447,
      "summary": "该文档详细介绍了DolphinDB中createCrossSectionalEngine函数的语法、参数、功能及使用示例，用于创建横截面引擎进行流数据处理。",
      "keywords": [
        "横截面引擎",
        "流数据处理",
        "DolphinDB",
        "createCrossSectionalEngine",
        "计算触发方式"
      ],
      "hypothetical_question": "如何在DolphinDB中使用createCrossSectionalEngine函数创建横截面引擎进行流数据处理？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/createDistributedInMemoryTable.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/createDistributedInMemoryTable.md",
      "start_line": 1,
      "end_line": 98,
      "summary": "介绍如何在DolphinDB中创建分布式共享内存表，包括语法、参数说明、分区类型及示例。",
      "keywords": [
        "分布式共享内存表",
        "分区方案",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中创建分布式共享内存表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/createDailyTimeSeriesEngine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/createDailyTimeSeriesEngine.md",
      "start_line": 1,
      "end_line": 337,
      "summary": "介绍DolphinDB中createDailyTimeSeriesEngine函数的语法、参数、功能及示例，用于创建日级时间序列引擎，支持在指定时间段内进行窗口聚合计算。",
      "keywords": [
        "createDailyTimeSeriesEngine",
        "时间序列引擎",
        "窗口聚合",
        "session",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中创建一个日级时间序列引擎并在指定时间段内进行窗口聚合计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/createGroup.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/createGroup.md",
      "start_line": 1,
      "end_line": 28,
      "summary": "介绍如何使用 `createGroup` 函数在 DolphinDB 中创建组并添加成员。",
      "keywords": [
        "createGroup",
        "组管理",
        "用户权限",
        "DolphinDB",
        "管理员"
      ],
      "hypothetical_question": "如何在 DolphinDB 中创建一个组并添加用户？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/createDualOwnershipReactiveStateEngine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/createDualOwnershipReactiveStateEngine.md",
      "start_line": 1,
      "end_line": 93,
      "summary": "DolphinDB的createDualOwnershipReactiveStateEngine函数是一种支持对同一张流数据表指定两种不同分组方式并分别应用不同指标进行并行计算的响应式状态引擎扩展。",
      "keywords": [
        "DolphinDB",
        "响应式状态引擎",
        "并行计算"
      ],
      "hypothetical_question": "DolphinDB中如何实现对同一张流数据表指定两种不同分组方式并分别应用不同指标进行并行计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/createEquiJoinEngine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/createEquiJoinEngine.md",
      "start_line": 1,
      "end_line": 102,
      "summary": "介绍了DolphinDB中createEquiJoinEngine函数的语法、参数、计算规则及示例，用于创建流数据等值连接引擎。",
      "keywords": [
        "createEquiJoinEngine",
        "流数据",
        "等值连接",
        "DolphinDB",
        "引擎"
      ],
      "hypothetical_question": "如何在DolphinDB中创建和使用等值连接引擎？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/createIPCInMemoryTable.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/createIPCInMemoryTable.md",
      "start_line": 1,
      "end_line": 60,
      "summary": "介绍DolphinDB中createIPCInMemoryTable函数的语法、参数、详情和使用示例，用于创建跨进程共享内存表。",
      "keywords": [
        "createIPCInMemoryTable",
        "共享内存表",
        "跨进程通信"
      ],
      "hypothetical_question": "如何在DolphinDB中创建跨进程共享内存表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/createLeftSemiJoinEngine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/createLeftSemiJoinEngine.md",
      "start_line": 1,
      "end_line": 131,
      "summary": "介绍了DolphinDB中createLeftSemiJoinEngine函数的语法、参数、功能及使用示例，用于创建流数据左半等值连接引擎。",
      "keywords": [
        "createLeftSemiJoinEngine",
        "流数据",
        "左半等值连接",
        "DolphinDB",
        "流计算引擎"
      ],
      "hypothetical_question": "如何在DolphinDB中创建和使用左半等值连接引擎？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/createIMOLTPTable.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/createIMOLTPTable.md",
      "start_line": 1,
      "end_line": 77,
      "summary": "介绍如何在DolphinDB中使用createIMOLTPTable函数在IMOLTP数据库中创建表，包括语法、参数说明和示例。",
      "keywords": [
        "createIMOLTPTable",
        "IMOLTP",
        "数据库",
        "主键",
        "二级索引"
      ],
      "hypothetical_question": "如何在DolphinDB中创建一个带有主键和二级索引的IMOLTP表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/createLookupJoinEngine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/createLookupJoinEngine.md",
      "start_line": 1,
      "end_line": 346,
      "summary": "介绍DolphinDB中createLookupJoinEngine函数的语法、参数、工作机制及示例，用于创建流数据表的lookup join引擎。",
      "keywords": [
        "createLookupJoinEngine",
        "流数据引擎",
        "lookup join",
        "DolphinDB",
        "参数说明"
      ],
      "hypothetical_question": "如何在DolphinDB中创建和使用lookup join引擎进行流数据表的连接操作？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/createSchema.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/createSchema.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "介绍了如何使用 `createSchema` 函数将指定数据库添加到指定 catalog 中，并为其分配一个 schema 名称。",
      "keywords": [
        "createSchema",
        "catalog",
        "dbUrl",
        "schema"
      ],
      "hypothetical_question": "如何在 DolphinDB 中将数据库添加到 catalog 并指定 schema 名称？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/createRuleEngine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/createRuleEngine.md",
      "start_line": 1,
      "end_line": 124,
      "summary": "介绍如何使用createRuleEngine函数创建一个规则引擎，支持动态调整规则集并处理流数据。",
      "keywords": [
        "规则引擎",
        "动态规则",
        "流数据处理",
        "回调函数"
      ],
      "hypothetical_question": "如何在DolphinDB中创建一个支持动态调整规则的规则引擎？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/createReactiveStateEngine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/createReactiveStateEngine.md",
      "start_line": 1,
      "end_line": 266,
      "summary": "本文档详细介绍了DolphinDB中createReactiveStateEngine函数的语法、参数、功能及使用示例，用于创建响应式状态引擎进行流数据计算。",
      "keywords": [
        "createReactiveStateEngine",
        "响应式状态引擎",
        "流数据计算",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用createReactiveStateEngine函数创建响应式状态引擎进行流数据计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/createSessionWindowEngine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/createSessionWindowEngine.md",
      "start_line": 1,
      "end_line": 117,
      "summary": "介绍了DolphinDB中createSessionWindowEngine函数的语法、参数、计算规则及示例，用于创建流数据会话窗口引擎。",
      "keywords": [
        "createSessionWindowEngine",
        "流数据",
        "会话窗口",
        "sessionGap",
        "forceTriggerTime"
      ],
      "hypothetical_question": "DolphinDB中如何创建和使用会话窗口引擎进行流数据处理？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/createReactiveStatelessEngine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/createReactiveStatelessEngine.md",
      "start_line": 1,
      "end_line": 178,
      "summary": "介绍DolphinDB中的createReactiveStatelessEngine函数，用于创建响应式无状态引擎，处理数据间的依赖关系并实时更新计算结果。",
      "keywords": [
        "响应式无状态引擎",
        "数据依赖",
        "实时计算",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中创建一个响应式无状态引擎来处理数据间的依赖关系？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/createStreamDispatchEngine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/createStreamDispatchEngine.md",
      "start_line": 1,
      "end_line": 119,
      "summary": "介绍DolphinDB中createStreamDispatchEngine函数的语法、参数、功能及其应用场景，用于创建流数据分发引擎以实现负载均衡。",
      "keywords": [
        "流数据分发引擎",
        "负载均衡",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中创建一个流数据分发引擎以实现负载均衡？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/createTable.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/createTable.md",
      "start_line": 1,
      "end_line": 7,
      "summary": "createTable是createDimensionTable的别名。",
      "keywords": [
        "createTable",
        "createDimensionTable",
        "别名"
      ],
      "hypothetical_question": "createTable在DolphinDB中有什么作用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/createPartitionedTable.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/createPartitionedTable.md",
      "start_line": 1,
      "end_line": 398,
      "summary": "该文档详细介绍了DolphinDB中createPartitionedTable函数的语法、参数、功能及使用示例，用于创建分区表。",
      "keywords": [
        "createPartitionedTable",
        "分区表",
        "TSDB引擎",
        "参数说明",
        "示例"
      ],
      "hypothetical_question": "如何在DolphinDB中使用createPartitionedTable函数创建分区表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/createStreamGraph.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/createStreamGraph.md",
      "start_line": 1,
      "end_line": 36,
      "summary": "介绍如何使用createStreamGraph函数创建一个声明式流图，并控制其生命周期、配置订阅与私有流表行为以及定义数据源。",
      "keywords": [
        "createStreamGraph",
        "流图",
        "声明式流图",
        "StreamGraph"
      ],
      "hypothetical_question": "如何在DolphinDB中创建一个声明式流图并控制其生命周期？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/createTimeSeriesAggregator.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/createTimeSeriesAggregator.md",
      "start_line": 1,
      "end_line": 7,
      "summary": "createTimeSeriesAggregator是createTimeSeriesEngine函数的别名。",
      "keywords": [
        "createTimeSeriesAggregator",
        "createTimeSeriesEngine",
        "别名"
      ],
      "hypothetical_question": "createTimeSeriesAggregator函数与createTimeSeriesEngine函数有什么关系？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/createTimeSeriesEngine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/createTimeSeriesEngine.md",
      "start_line": 1,
      "end_line": 749,
      "summary": "DolphinDB的createTimeSeriesEngine函数用于创建流数据时间序列引擎，实现基于时间的滑动窗口或滚动窗口的实时计算，支持多种聚合计算和窗口配置。",
      "keywords": [
        "createTimeSeriesEngine",
        "流数据",
        "时间序列引擎",
        "滑动窗口",
        "聚合计算"
      ],
      "hypothetical_question": "如何在DolphinDB中创建一个流数据时间序列引擎来实现实时滑动窗口计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/createUser.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/createUser.md",
      "start_line": 1,
      "end_line": 59,
      "summary": "DolphinDB的createUser函数用于创建用户，支持设置密码、组别、管理员权限及认证方式。",
      "keywords": [
        "createUser",
        "DolphinDB",
        "用户管理",
        "SCRAM认证",
        "密码策略"
      ],
      "hypothetical_question": "如何在DolphinDB中使用createUser函数创建一个新用户并设置其组别和认证方式？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/createWindowJoinEngine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/createWindowJoinEngine.md",
      "start_line": 1,
      "end_line": 326,
      "summary": "该文档详细介绍了DolphinDB中createWindowJoinEngine函数的语法、参数、功能及其在流数据处理中的应用，包括窗口连接引擎的创建、配置和使用示例。",
      "keywords": [
        "createWindowJoinEngine",
        "流数据引擎",
        "窗口连接",
        "DolphinDB",
        "元编程"
      ],
      "hypothetical_question": "如何在DolphinDB中使用createWindowJoinEngine函数进行流数据的窗口连接计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/createdeviceengine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/createdeviceengine.md",
      "start_line": 1,
      "end_line": 97,
      "summary": "介绍DolphinDB中的createDeviceEngine函数，用于创建设备引擎，通过GPU加速计算并将结果输出到指定表。",
      "keywords": [
        "createDeviceEngine",
        "GPU加速",
        "设备引擎"
      ],
      "hypothetical_question": "如何在DolphinDB中创建一个使用GPU加速计算的设备引擎？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/createnarrowreactivestateengine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/createnarrowreactivestateengine.md",
      "start_line": 1,
      "end_line": 92,
      "summary": "介绍了如何创建生成窄表的响应式状态引擎createNarrowReactiveStateEngine，包括其语法、参数说明、输出表结构及示例。",
      "keywords": [
        "createNarrowReactiveStateEngine",
        "响应式状态引擎",
        "窄表"
      ],
      "hypothetical_question": "如何在DolphinDB中创建生成窄表的响应式状态引擎？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/creategplearnengine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/creategplearnengine.md",
      "start_line": 1,
      "end_line": 86,
      "summary": "介绍如何在DolphinDB中创建GPLearn引擎，包括语法、参数说明和注意事项。",
      "keywords": [
        "GPLearn引擎",
        "参数配置",
        "机器学习"
      ],
      "hypothetical_question": "如何在DolphinDB中配置GPLearn引擎的参数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/createdimensiontable.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/createdimensiontable.md",
      "start_line": 1,
      "end_line": 160,
      "summary": "介绍如何在DolphinDB中创建维度表，包括语法、参数、使用场景及示例。",
      "keywords": [
        "createDimensionTable",
        "维度表",
        "DolphinDB",
        "分布式数据库",
        "TSDB"
      ],
      "hypothetical_question": "如何在DolphinDB中创建一个维度表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/createcryptoorderbookengine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/createcryptoorderbookengine.md",
      "start_line": 1,
      "end_line": 222,
      "summary": "DolphinDB的createCryptoOrderBookEngine函数用于根据数字货币的全量深度快照和增量深度信息实时更新订单簿，支持多种更新规则和错误处理机制。",
      "keywords": [
        "数字货币",
        "订单簿",
        "DolphinDB",
        "实时更新"
      ],
      "hypothetical_question": "如何在DolphinDB中创建一个加密货币订单簿引擎并实时更新订单簿？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/createpricingengine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/createpricingengine.md",
      "start_line": 1,
      "end_line": 129,
      "summary": "DolphinDB的createPricingEngine函数用于创建估值定价引擎，支持多种债券类型和定价算法，适用于金融工具的估值和风险管理。",
      "keywords": [
        "估值定价",
        "债券定价",
        "金融工具",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中创建一个估值定价引擎来计算债券的估值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/createorderbooksnapshotengine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/createorderbooksnapshotengine.md",
      "start_line": 1,
      "end_line": 642,
      "summary": "DolphinDB的createOrderBookSnapshotEngine函数用于基于逐笔委托和逐笔交易数据实时合成指定频率的全档位盘口信息、窗口内统计信息和全天累计统计信息等订单簿数据。",
      "keywords": [
        "DolphinDB",
        "orderbook",
        "快照引擎",
        "逐笔数据",
        "盘口信息"
      ],
      "hypothetical_question": "如何在DolphinDB中基于逐笔数据实时合成订单簿快照？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/crossStat.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/crossStat.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "crossStat函数用于计算两个数值型向量之间的交叉统计量，包括计数、求和、平方和及乘积和。",
      "keywords": [
        "crossStat",
        "统计量",
        "数值型向量",
        "交叉计算"
      ],
      "hypothetical_question": "DolphinDB中如何计算两个数值型向量的交叉统计量？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/createyieldcurveengine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/createyieldcurveengine.md",
      "start_line": 1,
      "end_line": 131,
      "summary": "介绍如何创建利率（或收益率）曲线引擎，用于拟合和预测金融工具的利率与剩余期限之间的关系。",
      "keywords": [
        "收益率曲线引擎",
        "利率建模",
        "金融工具"
      ],
      "hypothetical_question": "如何在DolphinDB中创建一个收益率曲线引擎来拟合和预测金融工具的利率？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/createsnapshotjoinengine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/createsnapshotjoinengine.md",
      "start_line": 1,
      "end_line": 385,
      "summary": "DolphinDB的createSnapshotJoinEngine函数用于创建快照连接引擎，实现两个流数据表的实时内连接或外连接，支持多种连接方式和参数配置。",
      "keywords": [
        "createSnapshotJoinEngine",
        "流数据连接",
        "实时连接",
        "内连接",
        "外连接"
      ],
      "hypothetical_question": "如何在DolphinDB中实现两个流数据表的实时连接？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/createtimebucketengine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/createtimebucketengine.md",
      "start_line": 1,
      "end_line": 188,
      "summary": "介绍DolphinDB中的createTimeBucketEngine函数，用于创建自定义窗口长度的时间序列聚合引擎，支持分组计算和多种填充方式。",
      "keywords": [
        "createTimeBucketEngine",
        "时间序列聚合引擎",
        "窗口计算",
        "分组聚合",
        "填充规则"
      ],
      "hypothetical_question": "如何在DolphinDB中使用createTimeBucketEngine函数进行自定义时间窗口的聚合计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/createstreambroadcastengine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/createstreambroadcastengine.md",
      "start_line": 1,
      "end_line": 61,
      "summary": "介绍DolphinDB中的createStreamBroadcastEngine函数，用于创建流数据广播引擎，将同一份流数据复制后分发至不同的目标表对象。",
      "keywords": [
        "createStreamBroadcastEngine",
        "流数据广播引擎",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中创建流数据广播引擎并实现数据多路广播？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/crmwcbond.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/crmwcbond.md",
      "start_line": 1,
      "end_line": 38,
      "summary": "介绍如何使用 `crmwCBond` 函数对到期一次还本付息的短期债券的信用风险缓释凭证（CRMW）进行估值。",
      "keywords": [
        "crmwCBond",
        "信用风险缓释凭证",
        "债券估值",
        "中债估值方法"
      ],
      "hypothetical_question": "如何使用 DolphinDB 的 `crmwCBond` 函数计算信用风险缓释凭证（CRMW）的估值价格？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cubichermitesplinefit.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cubichermitesplinefit.md",
      "start_line": 1,
      "end_line": 85,
      "summary": "DolphinDB中的cubicHermiteSplineFit函数用于对给定数据点进行三次埃尔米特插值，并返回包含模型信息和预测函数的字典。",
      "keywords": [
        "三次埃尔米特插值",
        "DolphinDB",
        "预测函数"
      ],
      "hypothetical_question": "如何在DolphinDB中使用三次埃尔米特插值对数据进行拟合和预测？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cubicspline.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cubicspline.md",
      "start_line": 1,
      "end_line": 61,
      "summary": "cubicSpline函数用于生成三次样条插值曲线，支持多种边界条件，并返回包含系数、预测函数等信息的字典。",
      "keywords": [
        "cubicSpline",
        "三次样条插值",
        "边界条件"
      ],
      "hypothetical_question": "如何在DolphinDB中使用cubicSpline函数生成三次样条插值曲线？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cumPositiveStreak.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cumPositiveStreak.md",
      "start_line": 1,
      "end_line": 59,
      "summary": "cumPositiveStreak函数用于累计计算向量或矩阵中连续的正数之和。",
      "keywords": [
        "cumPositiveStreak",
        "累计计算",
        "连续正数",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中计算向量或矩阵中连续正数的累计和？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cubicsplinepredic.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cubicsplinepredic.md",
      "start_line": 1,
      "end_line": 39,
      "summary": "cubicSplinePredict函数用于根据三次样条曲线模型预测给定x值对应的y值。",
      "keywords": [
        "cubicSplinePredict",
        "三次样条",
        "预测"
      ],
      "hypothetical_question": "如何使用DolphinDB的cubicSplinePredict函数根据三次样条曲线模型预测y值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cumavgTopN.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cumavgTopN.md",
      "start_line": 1,
      "end_line": 63,
      "summary": "cumavgTopN函数用于在累计窗口内根据指定排序方式取前top个元素并计算平均值。",
      "keywords": [
        "cumavgTopN",
        "窗口计算",
        "平均值",
        "排序"
      ],
      "hypothetical_question": "如何在DolphinDB中使用cumavgTopN函数计算累计窗口内前top个元素的平均值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cumbeta.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cumbeta.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "cumbeta函数用于累积计算Y在X上的回归系数的最小二乘估计。",
      "keywords": [
        "cumbeta",
        "回归系数",
        "最小二乘估计",
        "累积计算"
      ],
      "hypothetical_question": "如何在DolphinDB中计算Y在X上的累积回归系数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cumavg.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cumavg.md",
      "start_line": 1,
      "end_line": 46,
      "summary": "介绍DolphinDB中的cumavg函数，用于计算元素的累积平均值。",
      "keywords": [
        "cumavg",
        "累积平均值",
        "DolphinDB函数",
        "矩阵计算"
      ],
      "hypothetical_question": "如何在DolphinDB中计算一个向量或矩阵的累积平均值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cumcorr.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cumcorr.md",
      "start_line": 1,
      "end_line": 29,
      "summary": "cumcorr函数用于累计计算两个向量、矩阵或表之间的相关性。",
      "keywords": [
        "cumcorr",
        "相关性",
        "累计计算",
        "向量"
      ],
      "hypothetical_question": "如何在DolphinDB中累计计算两个向量之间的相关性？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cumcount.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cumcount.md",
      "start_line": 1,
      "end_line": 46,
      "summary": "cumcount函数用于计算累积非NULL元素的数量，并提供向量和矩阵的示例。",
      "keywords": [
        "cumcount",
        "累积计算",
        "非NULL计数",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中使用cumcount函数计算累积非NULL元素的数量？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cumbetaTopN.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cumbetaTopN.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "cumbetaTopN函数用于在累计窗口内根据指定排序方式取前top个元素后计算Y在X上的回归系数的最小二乘估计。",
      "keywords": [
        "cumbetaTopN",
        "回归系数",
        "最小二乘估计"
      ],
      "hypothetical_question": "如何在DolphinDB中使用cumbetaTopN函数计算Y在X上的回归系数的最小二乘估计？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cumcovar.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cumcovar.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "介绍DolphinDB中的cumcovar函数，用于计算两个变量的累积协方差。",
      "keywords": [
        "cumcovar",
        "协方差",
        "累积计算",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中计算两个变量的累积协方差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cumcorrTopN.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cumcorrTopN.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "cumcorrTopN函数用于在累计窗口内根据指定排序方式取前top个元素后计算X和Y之间的相关性。",
      "keywords": [
        "cumcorrTopN",
        "相关性计算",
        "窗口函数"
      ],
      "hypothetical_question": "如何在DolphinDB中使用cumcorrTopN函数计算两个序列在累计窗口内的相关性？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cumdenseRank.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cumdenseRank.md",
      "start_line": 1,
      "end_line": 77,
      "summary": "该文档详细介绍了DolphinDB中的cumdenseRank函数，包括其语法、参数、功能详情及使用示例。",
      "keywords": [
        "cumdenseRank",
        "密集排名",
        "DolphinDB函数",
        "参数说明"
      ],
      "hypothetical_question": "如何在DolphinDB中使用cumdenseRank函数进行密集排名计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cumcovarTopN.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cumcovarTopN.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "cumcovarTopN函数用于在累计窗口内根据指定排序方式取前top个元素后计算X和Y的协方差。",
      "keywords": [
        "cumcovarTopN",
        "协方差",
        "窗口计算",
        "排序"
      ],
      "hypothetical_question": "如何在DolphinDB中使用cumcovarTopN函数计算累计窗口内前top个元素的协方差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cumfirstNot.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cumfirstNot.md",
      "start_line": 1,
      "end_line": 58,
      "summary": "cumfirstNot函数用于返回向量或矩阵中每个元素之前第一个不为NULL或指定值的元素。",
      "keywords": [
        "cumfirstNot",
        "NULL处理",
        "累计窗口函数"
      ],
      "hypothetical_question": "DolphinDB中cumfirstNot函数的作用是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cummax.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cummax.md",
      "start_line": 1,
      "end_line": 46,
      "summary": "介绍DolphinDB中的cummax函数，用于计算元素的累计最大值，并提供示例和相关函数链接。",
      "keywords": [
        "cummax",
        "累计最大值",
        "DolphinDB",
        "函数",
        "示例"
      ],
      "hypothetical_question": "DolphinDB中如何计算元素的累计最大值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cummdd.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cummdd.md",
      "start_line": 1,
      "end_line": 55,
      "summary": "介绍DolphinDB函数cummdd的语法、参数、功能和示例，用于计算输入数据的累计最大回撤。",
      "keywords": [
        "cummdd",
        "最大回撤",
        "累计计算",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中使用cummdd函数计算累计最大回撤？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cumlastNot.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cumlastNot.md",
      "start_line": 1,
      "end_line": 58,
      "summary": "cumlastNot函数用于返回向量或矩阵中每个元素之前最后一个不为NULL或指定值的元素。",
      "keywords": [
        "cumlastNot",
        "累计窗口函数",
        "NULL处理",
        "向量计算",
        "矩阵计算"
      ],
      "hypothetical_question": "DolphinDB中cumlastNot函数的作用是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cummed.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cummed.md",
      "start_line": 1,
      "end_line": 46,
      "summary": "介绍DolphinDB中的cummed函数，用于计算元素的累计中位数。",
      "keywords": [
        "cummed",
        "累计中位数",
        "DolphinDB",
        "窗口计算"
      ],
      "hypothetical_question": "DolphinDB中如何计算元素的累计中位数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cumkurtosisTopN.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cumkurtosisTopN.md",
      "start_line": 1,
      "end_line": 67,
      "summary": "介绍DolphinDB函数cumkurtosisTopN的语法、参数、功能及使用示例，该函数用于在累计窗口内计算前top个元素的峰度。",
      "keywords": [
        "cumkurtosisTopN",
        "峰度计算",
        "DolphinDB函数",
        "窗口计算"
      ],
      "hypothetical_question": "如何在DolphinDB中使用cumkurtosisTopN函数计算累计窗口内前top个元素的峰度？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cumprod.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cumprod.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "演示了如何使用DolphinDB的cumprod函数计算矩阵的累积乘积。",
      "keywords": [
        "cumprod",
        "矩阵",
        "累积乘积",
        "DolphinDB",
        "函数"
      ],
      "hypothetical_question": "如何在DolphinDB中计算矩阵的累积乘积？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cumpercentile.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cumpercentile.md",
      "start_line": 1,
      "end_line": 93,
      "summary": "cumpercentile函数用于计算元素的累计百分位，支持多种插值方法。",
      "keywords": [
        "cumpercentile",
        "累计百分位",
        "插值方法"
      ],
      "hypothetical_question": "DolphinDB中如何使用cumpercentile函数计算累计百分位？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cummin.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cummin.md",
      "start_line": 1,
      "end_line": 46,
      "summary": "该文档详细介绍了DolphinDB中的cummin函数，用于计算元素的累计最小值，并提供了语法、参数说明、使用示例及相关函数链接。",
      "keywords": [
        "cummin",
        "累计最小值",
        "DolphinDB",
        "矩阵计算"
      ],
      "hypothetical_question": "如何在DolphinDB中使用cummin函数计算元素的累计最小值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cumnunique.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cumnunique.md",
      "start_line": 1,
      "end_line": 41,
      "summary": "介绍DolphinDB中的cumnunique函数，用于计算元素的累计唯一值数量，并支持忽略NULL值的选项。",
      "keywords": [
        "cumnunique",
        "累计唯一值",
        "NULL值处理",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中计算累计唯一值数量并处理NULL值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cumstd.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cumstd.md",
      "start_line": 1,
      "end_line": 46,
      "summary": "该文档介绍了DolphinDB中的cumstd函数，用于计算元素的累计标准差，并提供了语法、参数说明、使用示例和相关函数链接。",
      "keywords": [
        "cumstd",
        "累计标准差",
        "DolphinDB",
        "矩阵计算",
        "统计函数"
      ],
      "hypothetical_question": "如何在DolphinDB中计算元素的累计标准差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cumstdTopN.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cumstdTopN.md",
      "start_line": 1,
      "end_line": 63,
      "summary": "cumstdTopN函数用于在累计窗口内根据指定排序方式取前top个元素并计算标准差。",
      "keywords": [
        "cumstdTopN",
        "标准差",
        "排序",
        "窗口计算"
      ],
      "hypothetical_question": "如何在DolphinDB中使用cumstdTopN函数计算累计窗口内前top个元素的标准差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cumskewTopN.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cumskewTopN.md",
      "start_line": 1,
      "end_line": 67,
      "summary": "介绍DolphinDB函数cumskewTopN的语法、参数、功能及使用示例，用于计算累计窗口内前N个元素的斜度。",
      "keywords": [
        "cumskewTopN",
        "斜度计算",
        "DolphinDB函数",
        "窗口计算"
      ],
      "hypothetical_question": "如何在DolphinDB中使用cumskewTopN函数计算累计窗口内前N个元素的斜度？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cumrank.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cumrank.md",
      "start_line": 1,
      "end_line": 76,
      "summary": "cumrank函数用于计算累计窗口内元素的排名，支持升序或降序、忽略NULL值、处理重复值排名方式等参数设置。",
      "keywords": [
        "cumrank",
        "累计窗口",
        "排名",
        "NULL值处理",
        "重复值排名"
      ],
      "hypothetical_question": "如何在DolphinDB中使用cumrank函数计算累计窗口内元素的排名？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cumsum.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cumsum.md",
      "start_line": 1,
      "end_line": 42,
      "summary": "介绍DolphinDB中的cumsum函数，用于计算元素的累计和，并提供示例说明其用法。",
      "keywords": [
        "cumsum",
        "累计和",
        "DolphinDB",
        "矩阵计算",
        "累计窗口函数"
      ],
      "hypothetical_question": "DolphinDB中如何计算矩阵或向量的累计和？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cumstdp.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cumstdp.md",
      "start_line": 1,
      "end_line": 46,
      "summary": "该文档介绍了DolphinDB中的cumstdp函数，用于计算元素的累计总体标准差，并提供了语法、参数说明及示例。",
      "keywords": [
        "cumstdp",
        "累计总体标准差",
        "DolphinDB",
        "窗口计算"
      ],
      "hypothetical_question": "如何在DolphinDB中计算元素的累计总体标准差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cumstdpTopN.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cumstdpTopN.md",
      "start_line": 1,
      "end_line": 63,
      "summary": "cumstdpTopN函数用于在累计窗口内根据指定排序方式取前top个元素并计算总体标准差。",
      "keywords": [
        "cumstdpTopN",
        "总体标准差",
        "累计窗口",
        "排序"
      ],
      "hypothetical_question": "如何在DolphinDB中使用cumstdpTopN函数计算累计窗口内前top个元素的总体标准差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cumsum2.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cumsum2.md",
      "start_line": 1,
      "end_line": 32,
      "summary": "cumsum2函数用于计算元素的累计平方和。",
      "keywords": [
        "cumsum2",
        "累计平方和",
        "DolphinDB函数"
      ],
      "hypothetical_question": "DolphinDB中如何计算元素的累计平方和？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cumsum3.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cumsum3.md",
      "start_line": 1,
      "end_line": 42,
      "summary": "介绍DolphinDB中的cumsum3函数，用于计算元素的累计立方和，并提供示例。",
      "keywords": [
        "cumsum3",
        "累计立方和",
        "DolphinDB函数"
      ],
      "hypothetical_question": "DolphinDB中如何计算元素的累计立方和？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cumsum4.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cumsum4.md",
      "start_line": 1,
      "end_line": 42,
      "summary": "cumsum4函数用于计算元素的累计四次方和。",
      "keywords": [
        "cumsum4",
        "累计四次方和",
        "DolphinDB函数"
      ],
      "hypothetical_question": "DolphinDB中cumsum4函数的作用是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cumvar.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cumvar.md",
      "start_line": 1,
      "end_line": 46,
      "summary": "该文档详细介绍了DolphinDB中的cumvar函数，用于计算元素的累计方差，并提供了语法、参数说明、使用示例及相关函数链接。",
      "keywords": [
        "cumvar",
        "累计方差",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中计算元素的累计方差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cumwavg.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cumwavg.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "cumwavg函数用于计算以Y为权重的X的累计加权平均。",
      "keywords": [
        "cumwavg",
        "累计加权平均",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中计算累计加权平均值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cumvarp.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cumvarp.md",
      "start_line": 1,
      "end_line": 45,
      "summary": "该文档介绍了DolphinDB中的cumvarp函数，用于计算元素的累计总体方差，并提供了语法、参数说明、使用示例和相关函数链接。",
      "keywords": [
        "cumvarp",
        "累计总体方差",
        "DolphinDB函数",
        "矩阵计算",
        "统计函数"
      ],
      "hypothetical_question": "如何在DolphinDB中计算元素的累计总体方差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cumsumTopN.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cumsumTopN.md",
      "start_line": 1,
      "end_line": 63,
      "summary": "cumsumTopN函数用于在累计窗口内根据指定排序方式取前top个元素并计算和。",
      "keywords": [
        "cumsumTopN",
        "窗口计算",
        "排序",
        "累计和"
      ],
      "hypothetical_question": "如何在DolphinDB中使用cumsumTopN函数计算累计窗口内前top个元素的和？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cumvarTopN.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cumvarTopN.md",
      "start_line": 1,
      "end_line": 63,
      "summary": "cumvarTopN函数用于在累计窗口内根据指定排序方式取前top个元素并计算方差。",
      "keywords": [
        "cumvarTopN",
        "方差计算",
        "窗口函数",
        "排序"
      ],
      "hypothetical_question": "如何在DolphinDB中使用cumvarTopN函数计算累计窗口内前N个元素的方差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cumvarpTopN.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cumvarpTopN.md",
      "start_line": 1,
      "end_line": 63,
      "summary": "DolphinDB的cumvarpTopN函数用于在累计窗口内根据指定排序方式取前top个元素并计算总体方差。",
      "keywords": [
        "cumvarpTopN",
        "总体方差",
        "DolphinDB",
        "窗口计算"
      ],
      "hypothetical_question": "如何在DolphinDB中计算累计窗口内前N个元素的总体方差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cut.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cut.md",
      "start_line": 1,
      "end_line": 141,
      "summary": "DolphinDB的cut函数用于将标量、向量、矩阵或表按指定大小或位置分段，并返回分段后的结果。",
      "keywords": [
        "cut函数",
        "分段",
        "向量",
        "矩阵",
        "表"
      ],
      "hypothetical_question": "如何在DolphinDB中使用cut函数对向量或矩阵进行分段操作？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cumwsum.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cumwsum.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "cumwsum函数用于计算两个向量的累计内积。",
      "keywords": [
        "cumwsum",
        "累计内积",
        "DolphinDB函数"
      ],
      "hypothetical_question": "DolphinDB中如何计算两个向量的累计内积？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cumwsumTopN.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cumwsumTopN.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "cumwsumTopN 函数在累计窗口内根据指定排序方式取前 top 个元素后计算 X 和 Y 的内积。",
      "keywords": [
        "cumwsumTopN",
        "内积",
        "排序",
        "窗口计算"
      ],
      "hypothetical_question": "如何在 DolphinDB 中使用 cumwsumTopN 函数计算累计窗口内前 top 个元素的内积？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cutPoints.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cutPoints.md",
      "start_line": 1,
      "end_line": 34,
      "summary": "cutPoints函数用于将向量X中的数据均匀分配到指定数量的桶中，并返回桶的边界值。",
      "keywords": [
        "cutPoints",
        "桶",
        "分区方案",
        "RANGE分区"
      ],
      "hypothetical_question": "如何使用cutPoints函数生成RANGE分区数据库的分区方案？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/c/cvar.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/c/cvar.md",
      "start_line": 1,
      "end_line": 37,
      "summary": "该文档详细介绍了DolphinDB中的condValueAtRisk函数，用于计算条件风险指标（Conditional Value at Risk），包括其语法、参数、方法和示例。",
      "keywords": [
        "condValueAtRisk",
        "Conditional Value at Risk",
        "Expected Shortfall",
        "风险指标",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用condValueAtRisk函数计算条件风险指标？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/DStream_asofJoinEngine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/DStream_asofJoinEngine.md",
      "start_line": 1,
      "end_line": 100,
      "summary": "介绍了DolphinDB中DStream::asofJoinEngine函数的语法、参数、返回值和示例，用于创建流计算asof join引擎。",
      "keywords": [
        "DStream",
        "asofJoinEngine",
        "流计算",
        "DolphinDB",
        "元编程"
      ],
      "hypothetical_question": "如何在DolphinDB中使用DStream::asofJoinEngine函数创建流计算asof join引擎？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/DStream_crossSectionalEngine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/DStream_crossSectionalEngine.md",
      "start_line": 1,
      "end_line": 120,
      "summary": "介绍DolphinDB中DStream::crossSectionalEngine函数的语法、参数、返回值及使用示例，用于创建流计算横截面引擎。",
      "keywords": [
        "DStream",
        "crossSectionalEngine",
        "流计算",
        "横截面引擎",
        "元编程"
      ],
      "hypothetical_question": "如何在DolphinDB中使用DStream::crossSectionalEngine函数创建流计算横截面引擎？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/DStream_anomalyDetectionEngine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/DStream_anomalyDetectionEngine.md",
      "start_line": 1,
      "end_line": 85,
      "summary": "介绍DolphinDB中DStream::anomalyDetectionEngine函数的语法、参数、返回值及使用示例，用于创建流计算异常检测引擎。",
      "keywords": [
        "DStream",
        "anomalyDetectionEngine",
        "流计算",
        "异常检测",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用DStream::anomalyDetectionEngine函数创建流计算异常检测引擎？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/DStream_cryptoOrderBookEngine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/DStream_cryptoOrderBookEngine.md",
      "start_line": 1,
      "end_line": 82,
      "summary": "DStream::cryptoOrderBookEngine 函数用于创建流计算数字货币实时订单簿引擎，支持根据全量深度快照和增量深度信息实时更新订单簿。",
      "keywords": [
        "数字货币",
        "订单簿引擎",
        "流计算"
      ],
      "hypothetical_question": "如何在 DolphinDB 中创建数字货币实时订单簿引擎？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/DStream_dualOwnershipReactiveStateEngine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/DStream_dualOwnershipReactiveStateEngine.md",
      "start_line": 1,
      "end_line": 70,
      "summary": "介绍DolphinDB中DStream::dualOwnershipReactiveStateEngine函数的语法、参数、功能及使用示例。",
      "keywords": [
        "DolphinDB",
        "DStream",
        "dualOwnershipReactiveStateEngine",
        "流计算",
        "状态引擎"
      ],
      "hypothetical_question": "如何在DolphinDB中使用dualOwnershipReactiveStateEngine函数进行流计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/DStream_fork.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/DStream_fork.md",
      "start_line": 1,
      "end_line": 37,
      "summary": "DStream::fork函数用于生成多个流数据下游DStream分支，以便在不同分支中执行各自的处理逻辑。",
      "keywords": [
        "DStream",
        "fork",
        "流数据",
        "分支",
        "广播"
      ],
      "hypothetical_question": "如何在DolphinDB中复制流数据并在不同分支中执行不同的处理逻辑？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/DStream_dailyTimeSeriesEngine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/DStream_dailyTimeSeriesEngine.md",
      "start_line": 1,
      "end_line": 211,
      "summary": "介绍了DolphinDB中DStream::dailyTimeSeriesEngine函数的语法、参数、功能及示例，用于创建流计算日级时间序列引擎。",
      "keywords": [
        "DolphinDB",
        "时间序列引擎",
        "流计算",
        "聚合函数",
        "窗口计算"
      ],
      "hypothetical_question": "如何在DolphinDB中创建和使用dailyTimeSeriesEngine进行流数据的时间序列计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/DStream_getOutputSchema.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/DStream_getOutputSchema.md",
      "start_line": 1,
      "end_line": 29,
      "summary": "DStream::getOutputSchema 方法用于返回当前 DStream 对象的表结构。",
      "keywords": [
        "DStream",
        "getOutputSchema",
        "表结构",
        "streaming engine"
      ],
      "hypothetical_question": "如何获取 DolphinDB 中 DStream 对象的表结构？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/DStream_equalJoinEngine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/DStream_equalJoinEngine.md",
      "start_line": 1,
      "end_line": 83,
      "summary": "DolphinDB中DStream::equalJoinEngine函数的语法、参数、返回值及使用示例，用于创建流计算等值连接引擎。",
      "keywords": [
        "DolphinDB",
        "DStream",
        "equalJoinEngine",
        "流计算",
        "等值连接"
      ],
      "hypothetical_question": "如何在DolphinDB中使用DStream::equalJoinEngine函数创建流计算等值连接引擎？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/DStream_latestKeyedSink.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/DStream_latestKeyedSink.md",
      "start_line": 1,
      "end_line": 58,
      "summary": "介绍 DolphinDB 中 DStream::latestKeyedSink 函数的语法、参数及其功能，用于将流数据输出到最新键值流表。",
      "keywords": [
        "DolphinDB",
        "DStream",
        "latestKeyedSink",
        "流数据",
        "键值表"
      ],
      "hypothetical_question": "DolphinDB 中如何使用 DStream::latestKeyedSink 函数将流数据输出到最新键值流表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/DStream_keyedSink.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/DStream_keyedSink.md",
      "start_line": 1,
      "end_line": 54,
      "summary": "介绍DolphinDB中DStream::keyedSink函数的语法、参数及其功能，用于将流数据输出至持久化键值流数据表。",
      "keywords": [
        "DStream",
        "keyedSink",
        "流数据",
        "持久化",
        "键值表"
      ],
      "hypothetical_question": "如何在DolphinDB中使用DStream::keyedSink函数将流数据输出至持久化键值流数据表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/DStream_lookupJoinEngine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/DStream_lookupJoinEngine.md",
      "start_line": 1,
      "end_line": 101,
      "summary": "DStream::lookupJoinEngine 用于创建流计算 lookup join 引擎，支持通过指定参数实现左右表的数据连接和计算。",
      "keywords": [
        "DStream",
        "lookupJoinEngine",
        "流计算",
        "数据连接",
        "元编程"
      ],
      "hypothetical_question": "如何在 DolphinDB 中使用 DStream::lookupJoinEngine 创建流计算 lookup join 引擎？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/DStream_haKeyedSink.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/DStream_haKeyedSink.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "DStream::haKeyedSink函数用于将流数据输出到高可用键值流数据表，并支持配置主键列、Raft组ID、内存缓存限制和日志文件保留时间等参数。",
      "keywords": [
        "DStream",
        "haKeyedSink",
        "流数据",
        "高可用",
        "键值表"
      ],
      "hypothetical_question": "如何使用DolphinDB的DStream::haKeyedSink函数将流数据输出到高可用键值流数据表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/DStream_map.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/DStream_map.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "DStream::map 方法用于对流数据中的每条消息应用指定的一元函数进行映射处理。",
      "keywords": [
        "DStream",
        "map",
        "流数据",
        "函数映射"
      ],
      "hypothetical_question": "如何在 DolphinDB 中使用 DStream::map 方法对流数据进行映射处理？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/DStream_haSink.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/DStream_haSink.md",
      "start_line": 1,
      "end_line": 28,
      "summary": "介绍DolphinDB中DStream::haSink函数的语法、参数和功能，用于将流数据输出到高可用流数据表。",
      "keywords": [
        "DStream",
        "haSink",
        "高可用流数据表",
        "Raft组",
        "流数据"
      ],
      "hypothetical_question": "如何在DolphinDB中使用DStream::haSink函数将流数据输出到高可用流数据表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/DStream_leftSemiJoinEngine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/DStream_leftSemiJoinEngine.md",
      "start_line": 1,
      "end_line": 86,
      "summary": "DStream::leftSemiJoinEngine函数用于创建流计算左半等值连接引擎，支持参数配置和元代码计算指标。",
      "keywords": [
        "DStream",
        "leftSemiJoinEngine",
        "流计算",
        "连接引擎",
        "元代码"
      ],
      "hypothetical_question": "如何在DolphinDB中创建流计算左半等值连接引擎？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/DStream_narrowReactiveStateEngine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/DStream_narrowReactiveStateEngine.md",
      "start_line": 1,
      "end_line": 105,
      "summary": "DolphinDB的DStream::narrowReactiveStateEngine函数用于创建流计算生成窄表的响应式状态引擎，支持分组计算和条件过滤。",
      "keywords": [
        "DolphinDB",
        "响应式状态引擎",
        "流计算",
        "分组计算",
        "条件过滤"
      ],
      "hypothetical_question": "如何在DolphinDB中创建一个流计算生成窄表的响应式状态引擎？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/DStream_parallelize.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/DStream_parallelize.md",
      "start_line": 1,
      "end_line": 36,
      "summary": "DStream::parallelize函数用于基于指定列对流数据进行哈希分区，生成多个并行处理分支。",
      "keywords": [
        "DStream",
        "parallelize",
        "哈希分区",
        "并行处理"
      ],
      "hypothetical_question": "如何在DolphinDB中基于指定列对流数据进行并行处理？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/DStream_orderBookSnapshotEngine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/DStream_orderBookSnapshotEngine.md",
      "start_line": 1,
      "end_line": 189,
      "summary": "DolphinDB中DStream::orderBookSnapshotEngine函数的语法、参数和功能描述，用于创建一个订单簿引擎。",
      "keywords": [
        "DolphinDB",
        "orderBookSnapshotEngine",
        "DStream",
        "订单簿引擎",
        "参数配置"
      ],
      "hypothetical_question": "如何在DolphinDB中使用DStream::orderBookSnapshotEngine函数创建一个订单簿引擎？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/DStream_pricingEngine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/DStream_pricingEngine.md",
      "start_line": 1,
      "end_line": 117,
      "summary": "DolphinDB中的DStream::pricingEngine函数用于创建一个估值定价引擎，支持多种债券定价算法和参数配置。",
      "keywords": [
        "DolphinDB",
        "pricingEngine",
        "债券定价",
        "DStream",
        "估值引擎"
      ],
      "hypothetical_question": "如何在DolphinDB中使用DStream::pricingEngine函数创建一个估值定价引擎？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/DStream_reactiveStateEngine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/DStream_reactiveStateEngine.md",
      "start_line": 1,
      "end_line": 86,
      "summary": "介绍了DolphinDB中DStream::reactiveStateEngine函数的语法、参数和用法，用于创建流计算响应式状态引擎。",
      "keywords": [
        "DolphinDB",
        "reactiveStateEngine",
        "流计算",
        "状态引擎",
        "元编程"
      ],
      "hypothetical_question": "如何在DolphinDB中使用reactiveStateEngine函数创建流计算响应式状态引擎？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/DStream_sync.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/DStream_sync.md",
      "start_line": 1,
      "end_line": 34,
      "summary": "DStream::sync 方法用于等待所有并行任务完成再进行后续处理。",
      "keywords": [
        "DStream::sync",
        "并行任务",
        "DolphinDB"
      ],
      "hypothetical_question": "在 DolphinDB 中，如何等待所有并行任务完成再进行后续处理？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/DStream_reactiveStatelessEngine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/DStream_reactiveStatelessEngine.md",
      "start_line": 1,
      "end_line": 84,
      "summary": "DStream::reactiveStatelessEngine 用于创建流计算响应式无状态引擎，通过定义数据间的依赖关系进行计算。",
      "keywords": [
        "DStream",
        "reactiveStatelessEngine",
        "流计算",
        "依赖关系",
        "metrics"
      ],
      "hypothetical_question": "如何在 DolphinDB 中使用 DStream::reactiveStatelessEngine 创建响应式无状态流计算引擎？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/DStream_ruleEngine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/DStream_ruleEngine.md",
      "start_line": 1,
      "end_line": 83,
      "summary": "DStream::ruleEngine用于创建流计算规则引擎，支持定义规则集、输出列、检查策略及回调函数。",
      "keywords": [
        "DStream",
        "ruleEngine",
        "流计算",
        "规则集",
        "回调函数"
      ],
      "hypothetical_question": "如何在DolphinDB中使用DStream::ruleEngine创建流计算规则引擎？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/DStream_snapshotJoinEngine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/DStream_snapshotJoinEngine.md",
      "start_line": 1,
      "end_line": 107,
      "summary": "DStream::snapshotJoinEngine 用于创建流计算快照连接引擎，支持多种连接方式和参数配置。",
      "keywords": [
        "DStream",
        "snapshotJoinEngine",
        "流计算",
        "连接引擎",
        "元编程"
      ],
      "hypothetical_question": "如何在 DolphinDB 中使用 DStream::snapshotJoinEngine 创建流计算快照连接引擎？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/DStream_setEngineName.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/DStream_setEngineName.md",
      "start_line": 1,
      "end_line": 18,
      "summary": "DStream::setEngineName函数用于为当前流引擎设置名称，并返回引擎对象。",
      "keywords": [
        "DStream",
        "setEngineName",
        "流引擎",
        "引擎名称"
      ],
      "hypothetical_question": "如何在DolphinDB中为流引擎设置名称？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/DStream_sessionWindowEngine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/DStream_sessionWindowEngine.md",
      "start_line": 1,
      "end_line": 135,
      "summary": "DStream::sessionWindowEngine用于创建流计算会话窗口引擎，通过设置会话间隔、计算指标等参数对流数据进行聚合计算。",
      "keywords": [
        "DStream",
        "sessionWindowEngine",
        "流计算",
        "聚合函数",
        "会话窗口"
      ],
      "hypothetical_question": "如何在DolphinDB中使用DStream::sessionWindowEngine创建流计算会话窗口引擎？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/DStream_timeBucketEngine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/DStream_timeBucketEngine.md",
      "start_line": 1,
      "end_line": 112,
      "summary": "DolphinDB的DStream::timeBucketEngine函数用于创建自定义窗口长度的时间序列聚合引擎，支持流计算和分组聚合。",
      "keywords": [
        "DolphinDB",
        "时间序列聚合",
        "流计算",
        "自定义窗口"
      ],
      "hypothetical_question": "如何在DolphinDB中创建一个自定义窗口长度的时间序列聚合引擎？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/DStream_sink.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/DStream_sink.md",
      "start_line": 1,
      "end_line": 55,
      "summary": "DStream::sink方法用于将流数据输出到持久化共享流数据表、DFS表或函数，并支持多种参数配置如异步写入、压缩、缓存大小等。",
      "keywords": [
        "DStream",
        "sink",
        "流数据",
        "持久化",
        "参数配置"
      ],
      "hypothetical_question": "DolphinDB中如何配置DStream::sink方法以将流数据输出到持久化表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/database.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/database.md",
      "start_line": 1,
      "end_line": 359,
      "summary": "该文档详细介绍了DolphinDB中`database`函数的语法、参数、功能及多种分区类型的应用示例。",
      "keywords": [
        "database",
        "分区类型",
        "分布式数据库",
        "存储引擎",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中创建和使用不同类型的分布式数据库分区？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/datetimeParse.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/datetimeParse.md",
      "start_line": 1,
      "end_line": 7,
      "summary": "datetimeParse是temporalParse函数的别名。",
      "keywords": [
        "datetimeParse",
        "temporalParse",
        "别名"
      ],
      "hypothetical_question": "datetimeParse函数和temporalParse函数有什么关系？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/dailyAlignedBar.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/dailyAlignedBar.md",
      "start_line": 1,
      "end_line": 105,
      "summary": "该文档详细介绍了DolphinDB中的dailyAlignedBar函数，用于根据指定的起始时刻和时间区间长度划分时间区间，并返回每个元素所属的时间区间起始时刻。",
      "keywords": [
        "dailyAlignedBar",
        "时间区间",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用dailyAlignedBar函数划分时间区间？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/date.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/date.md",
      "start_line": 1,
      "end_line": 61,
      "summary": "介绍DolphinDB中的date函数，用于返回对应的日期，并说明其参数和用法示例。",
      "keywords": [
        "date",
        "DolphinDB",
        "日期函数",
        "参数",
        "示例"
      ],
      "hypothetical_question": "DolphinDB中的date函数如何使用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/DStream_timeSeriesEngine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/DStream_timeSeriesEngine.md",
      "start_line": 1,
      "end_line": 183,
      "summary": "DStream::timeSeriesEngine 用于创建流计算时间序列聚合引擎，支持滑动窗口计算、分组聚合及多种参数配置。",
      "keywords": [
        "DStream",
        "timeSeriesEngine",
        "流计算",
        "时间序列",
        "聚合引擎"
      ],
      "hypothetical_question": "如何在 DolphinDB 中使用 DStream::timeSeriesEngine 进行流计算时间序列聚合？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/datehour.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/datehour.md",
      "start_line": 1,
      "end_line": 45,
      "summary": "datehour函数将时间类型的标量或向量转换为DATEHOUR类型，返回日期和精确到小时的时间值。",
      "keywords": [
        "datehour",
        "时间转换",
        "DATEHOUR类型",
        "时间函数"
      ],
      "hypothetical_question": "如何将时间数据转换为DATEHOUR类型？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/dayOfMonth.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/dayOfMonth.md",
      "start_line": 1,
      "end_line": 29,
      "summary": "dayOfMonth函数用于计算给定日期在当月的第几天。",
      "keywords": [
        "dayOfMonth",
        "日期函数",
        "时间处理",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中计算一个日期在当月的第几天？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/DStream_windowJoinEngine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/DStream_windowJoinEngine.md",
      "start_line": 1,
      "end_line": 108,
      "summary": "DStream::windowJoinEngine 用于创建流计算窗口连接引擎，支持滑动窗口连接操作，并详细介绍了其语法、参数和示例。",
      "keywords": [
        "DStream",
        "windowJoinEngine",
        "流计算",
        "滑动窗口",
        "元编程"
      ],
      "hypothetical_question": "如何在 DolphinDB 中使用 DStream::windowJoinEngine 创建流计算窗口连接引擎？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/datetime.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/datetime.md",
      "start_line": 1,
      "end_line": 62,
      "summary": "datetime函数用于返回日期和精确到秒的时间值，支持多种输入类型，并详细说明了其参数和返回值。",
      "keywords": [
        "datetime",
        "DATETIME",
        "时间转换",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用datetime函数将输入转换为日期和时间值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/dayOfYear.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/dayOfYear.md",
      "start_line": 1,
      "end_line": 33,
      "summary": "dayOfYear函数用于计算给定日期是当年中的第几天，支持多种日期时间类型，并返回整型结果。",
      "keywords": [
        "dayOfYear",
        "日期函数",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中计算一个日期是当年中的第几天？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/dayOfWeek.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/dayOfWeek.md",
      "start_line": 1,
      "end_line": 36,
      "summary": "dayOfWeek函数用于计算给定日期是一周中的第几天，返回0（星期一）到6（星期日）之间的整数。",
      "keywords": [
        "dayOfWeek",
        "日期函数",
        "星期计算",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中计算一个日期是一周中的第几天？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/daysInMonth.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/daysInMonth.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "`daysInMonth` 函数用于返回指定日期所在月份的天数。",
      "keywords": [
        "daysInMonth",
        "日期函数",
        "月份天数"
      ],
      "hypothetical_question": "如何在 DolphinDB 中获取指定日期所在月份的天数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/decimal32.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/decimal32.md",
      "start_line": 1,
      "end_line": 88,
      "summary": "decimal32函数用于将输入数据转换为DECIMAL32类型，并指定小数位数。",
      "keywords": [
        "decimal32",
        "DECIMAL32",
        "scale",
        "数据类型转换",
        "四舍五入"
      ],
      "hypothetical_question": "如何在DolphinDB中使用decimal32函数进行数据类型转换并指定小数位数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/decimal128.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/decimal128.md",
      "start_line": 1,
      "end_line": 78,
      "summary": "介绍了DolphinDB中的decimal128函数，用于将输入数据转换为DECIMAL128类型，并指定小数位数。",
      "keywords": [
        "decimal128",
        "DECIMAL128类型",
        "scale",
        "数据类型转换",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中将数据转换为DECIMAL128类型并指定小数位数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/decimalFormat.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/decimalFormat.md",
      "start_line": 1,
      "end_line": 111,
      "summary": "decimalFormat函数用于将数字转换为指定格式的字符串，支持多种格式化标志如0、#、.、%、E、,和;。",
      "keywords": [
        "decimalFormat",
        "数字格式化",
        "字符串转换",
        "格式化标志"
      ],
      "hypothetical_question": "如何在DolphinDB中使用decimalFormat函数将数字转换为指定格式的字符串？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/decimal64.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/decimal64.md",
      "start_line": 1,
      "end_line": 90,
      "summary": "decimal64函数用于将输入数据转换为DECIMAL64类型，并指定保留的小数位数。",
      "keywords": [
        "decimal64",
        "DECIMAL64类型",
        "scale",
        "数据类型转换",
        "四舍五入"
      ],
      "hypothetical_question": "如何在DolphinDB中使用decimal64函数进行数据类型转换并指定小数位数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/decimalMultiply.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/decimalMultiply.md",
      "start_line": 1,
      "end_line": 109,
      "summary": "decimalMultiply函数用于执行DECIMAL类型的乘法运算，并允许指定结果的小数位数，同时处理不同情况下的类型转换和溢出问题。",
      "keywords": [
        "decimalMultiply",
        "DECIMAL类型",
        "乘法运算",
        "小数位数",
        "溢出处理"
      ],
      "hypothetical_question": "如何在DolphinDB中执行DECIMAL类型的乘法运算并指定结果的小数位数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/decompress.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/decompress.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "介绍DolphinDB中的decompress函数，用于解压缩向量。",
      "keywords": [
        "decompress",
        "解压缩",
        "向量",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中对压缩后的向量进行解压缩？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/decodeShortGenomeSeq.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/decodeShortGenomeSeq.md",
      "start_line": 1,
      "end_line": 47,
      "summary": "decodeShortGenomeSeq函数用于将经过encodeShortGenomeSeq编码的整型数字解码为DNA序列。",
      "keywords": [
        "decodeShortGenomeSeq",
        "DNA序列",
        "解码",
        "encodeShortGenomeSeq"
      ],
      "hypothetical_question": "如何将encodeShortGenomeSeq编码的整型数字解码为DNA序列？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/deepCopy.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/deepCopy.md",
      "start_line": 1,
      "end_line": 60,
      "summary": "deepCopy函数用于创建对象的深拷贝，包括所有可变子对象的独立副本，与浅拷贝copy的区别在于深拷贝会递归复制所有子对象。",
      "keywords": [
        "deepCopy",
        "深拷贝",
        "copy",
        "浅拷贝",
        "递归复制"
      ],
      "hypothetical_question": "DolphinDB中deepCopy和copy函数有什么区别？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/deleteGroup.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/deleteGroup.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "deleteGroup函数用于删除指定名称的群组，可能影响群组成员的权限，仅限管理员在特定节点执行。",
      "keywords": [
        "deleteGroup",
        "群组管理",
        "权限控制",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中删除一个群组并了解其影响？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/defined.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/defined.md",
      "start_line": 1,
      "end_line": 37,
      "summary": "DolphinDB函数`defined`用于检查指定名称的对象是否已被定义，支持检查变量、共享变量和函数定义。",
      "keywords": [
        "defined",
        "DolphinDB",
        "变量检查",
        "函数定义",
        "共享变量"
      ],
      "hypothetical_question": "如何在DolphinDB中检查变量或函数是否已被定义？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/defs.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/defs.md",
      "start_line": 1,
      "end_line": 79,
      "summary": "DolphinDB的defs函数用于查询系统中的所有函数，支持通配符筛选。",
      "keywords": [
        "defs",
        "函数查询",
        "通配符",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中查询系统中所有的函数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/deg2rad.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/deg2rad.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "deg2rad函数用于将角度从度转换为弧度。",
      "keywords": [
        "deg2rad",
        "角度转换",
        "弧度"
      ],
      "hypothetical_question": "如何在DolphinDB中将角度从度转换为弧度？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/deleteGroupMember.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/deleteGroupMember.md",
      "start_line": 1,
      "end_line": 31,
      "summary": "deleteGroupMember函数用于删除多个组中的同一个成员或同一个组中的多个成员，仅限管理员在特定节点运行。",
      "keywords": [
        "deleteGroupMember",
        "用户管理",
        "群组管理",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中删除群组成员？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/deleteMarketHoliday.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/deleteMarketHoliday.md",
      "start_line": 1,
      "end_line": 32,
      "summary": "介绍如何使用deleteMarketHoliday函数删除已有的交易日历，并说明其使用限制和注意事项。",
      "keywords": [
        "deleteMarketHoliday",
        "交易日历",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中删除一个已有的交易日历？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/deleteRule.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/deleteRule.md",
      "start_line": 1,
      "end_line": 52,
      "summary": "deleteRule函数用于删除指定引擎中的规则，成功返回true，失败返回false，默认规则不可删除。",
      "keywords": [
        "deleteRule",
        "规则引擎",
        "删除规则"
      ],
      "hypothetical_question": "如何在DolphinDB中删除指定引擎中的规则？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/deleteScheduledJob.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/deleteScheduledJob.md",
      "start_line": 1,
      "end_line": 20,
      "summary": "介绍如何使用deleteScheduledJob函数删除指定的定时任务。",
      "keywords": [
        "deleteScheduledJob",
        "定时任务",
        "任务ID",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中删除一个定时任务？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/deleteReplicas.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/deleteReplicas.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "deleteReplicas函数用于删除节点上一个或多个chunk的副本，仅限管理员在控制节点上执行。",
      "keywords": [
        "deleteReplicas",
        "chunk",
        "node",
        "副本删除",
        "管理员"
      ],
      "hypothetical_question": "如何在DolphinDB中删除节点上的chunk副本？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/deleteUser.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/deleteUser.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "deleteUser函数用于删除指定用户，仅限管理员在特定节点上执行。",
      "keywords": [
        "deleteUser",
        "用户管理",
        "管理员",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中删除一个用户？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/deletechunkmetaonmasterbyid.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/deletechunkmetaonmasterbyid.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "介绍如何使用 deleteChunkMetaOnMasterById 函数删除控制节点上指定 chunk 的元数据。",
      "keywords": [
        "deleteChunkMetaOnMasterById",
        "chunk",
        "元数据"
      ],
      "hypothetical_question": "如何在 DolphinDB 中删除控制节点上指定 chunk 的元数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/deltas.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/deltas.md",
      "start_line": 1,
      "end_line": 84,
      "summary": "deltas函数用于计算向量、矩阵或表中元素与之前n个索引位置的元素之差，NULL值不参与计算。",
      "keywords": [
        "deltas",
        "差值计算",
        "向量",
        "矩阵",
        "表"
      ],
      "hypothetical_question": "DolphinDB中的deltas函数有什么作用，如何使用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/demean.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/demean.md",
      "start_line": 1,
      "end_line": 34,
      "summary": "demean函数用于对一组数据进行去均值化操作，返回与输入维度相同的DOUBLE类型对象。",
      "keywords": [
        "demean",
        "去均值化",
        "零均值化"
      ],
      "hypothetical_question": "如何在DolphinDB中对数据进行去均值化操作？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/dema.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/dema.md",
      "start_line": 1,
      "end_line": 43,
      "summary": "介绍DolphinDB中的dema函数，用于计算双重指数移动平均。",
      "keywords": [
        "dema",
        "双重指数移动平均",
        "TA-lib",
        "滑动窗口",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中如何计算双重指数移动平均？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/det.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/det.md",
      "start_line": 1,
      "end_line": 62,
      "summary": "det函数用于计算矩阵的行列式，处理时NULL值会被替换为0。",
      "keywords": [
        "行列式",
        "矩阵",
        "det",
        "NULL处理",
        "计算"
      ],
      "hypothetical_question": "DolphinDB中如何计算矩阵的行列式并处理NULL值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/deny.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/deny.md",
      "start_line": 1,
      "end_line": 65,
      "summary": "介绍DolphinDB中deny函数的语法、参数、详情及示例，用于拒绝用户或组的特定权限。",
      "keywords": [
        "deny",
        "权限管理",
        "用户权限",
        "DolphinDB",
        "访问控制"
      ],
      "hypothetical_question": "如何在DolphinDB中使用deny函数拒绝用户或组的特定权限？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/diag.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/diag.md",
      "start_line": 1,
      "end_line": 48,
      "summary": "diag函数用于根据向量生成对角矩阵或从方阵中提取主对角线元素。",
      "keywords": [
        "diag",
        "对角矩阵",
        "主对角线",
        "向量",
        "方阵"
      ],
      "hypothetical_question": "DolphinDB中的diag函数有什么作用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/denseRank.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/denseRank.md",
      "start_line": 1,
      "end_line": 71,
      "summary": "denseRank函数用于计算向量或矩阵中元素的密集排名，支持升序或降序排序，并可选择忽略NULL值或按百分比显示排名。",
      "keywords": [
        "denseRank",
        "密集排名",
        "NULL值处理",
        "排序",
        "矩阵运算"
      ],
      "hypothetical_question": "如何在DolphinDB中使用denseRank函数计算向量或矩阵中元素的密集排名？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/derivative.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/derivative.md",
      "start_line": 1,
      "end_line": 39,
      "summary": "介绍DolphinDB中derivative函数的语法、参数、详情及示例，用于计算一元函数在指定位置的导数。",
      "keywords": [
        "derivative",
        "导数计算",
        "DolphinDB函数",
        "数值计算",
        "一元函数"
      ],
      "hypothetical_question": "如何在DolphinDB中计算一元函数在指定位置的导数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/dictUpdate_.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/dictUpdate_.md",
      "start_line": 1,
      "end_line": 56,
      "summary": "介绍DolphinDB中的dictUpdate!函数，用于更新字典中特定键的值。",
      "keywords": [
        "dictUpdate!",
        "字典",
        "更新",
        "函数",
        "键"
      ],
      "hypothetical_question": "如何在DolphinDB中更新字典中特定键的值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/differentialevolution.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/differentialevolution.md",
      "start_line": 1,
      "end_line": 83,
      "summary": "介绍DolphinDB中的differentialEvolution函数，用于通过差分进化算法求解多元函数的全局最小值。",
      "keywords": [
        "差分进化算法",
        "全局最小值",
        "优化",
        "DolphinDB",
        "参数优化"
      ],
      "hypothetical_question": "如何在DolphinDB中使用差分进化算法求解多元函数的全局最小值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/difference.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/difference.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "DolphinDB的difference函数用于计算向量最后一个元素与第一个元素的差值，若输入为标量则返回0。",
      "keywords": [
        "difference",
        "向量差值",
        "DolphinDB函数",
        "标量处理"
      ],
      "hypothetical_question": "DolphinDB中如何计算向量首尾元素的差值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/dict.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/dict.md",
      "start_line": 1,
      "end_line": 90,
      "summary": "DolphinDB中的dict函数用于创建无序或有序字典，支持多种数据类型，并提供键值对的存储和访问功能。",
      "keywords": [
        "dict",
        "字典",
        "有序字典",
        "键值对",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中创建一个有序字典并指定键值对的数据类型？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/digitize.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/digitize.md",
      "start_line": 1,
      "end_line": 77,
      "summary": "介绍DolphinDB中的digitize函数，用于返回输入值在指定区间向量中的索引位置。",
      "keywords": [
        "digitize",
        "bins",
        "索引",
        "分桶"
      ],
      "hypothetical_question": "如何在DolphinDB中使用digitize函数来确定数值在自定义区间中的位置？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/disableActivePartition.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/disableActivePartition.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "介绍DolphinDB函数disableActivePartition的语法、参数、功能和示例，用于断开与历史数据库的连接。",
      "keywords": [
        "disableActivePartition",
        "历史数据库",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中断开与历史数据库的连接？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/disableTablePersistence.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/disableTablePersistence.md",
      "start_line": 1,
      "end_line": 32,
      "summary": "disableTablePersistence函数用于停止将表持久化到磁盘，后续更新内容不再保存。",
      "keywords": [
        "disableTablePersistence",
        "持久化",
        "表对象"
      ],
      "hypothetical_question": "如何停止将DolphinDB中的表持久化到磁盘？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/disableQueryMonitor.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/disableQueryMonitor.md",
      "start_line": 1,
      "end_line": 18,
      "summary": "disableQueryMonitor函数用于关闭监控查询任务状态的功能，以减少内存开销，但会阻止用户获取查询任务状态。",
      "keywords": [
        "disableQueryMonitor",
        "查询任务",
        "内存开销",
        "getQueryStatus"
      ],
      "hypothetical_question": "如何关闭DolphinDB中的查询任务状态监控功能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/distance.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/distance.md",
      "start_line": 1,
      "end_line": 46,
      "summary": "介绍DolphinDB中的distance函数，用于计算两个POINT类型对象之间的距离（单位为米）。",
      "keywords": [
        "distance",
        "POINT",
        "计算距离",
        "经纬度",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中计算两个经纬度坐标之间的距离？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/disableTSDBAsyncSorting.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/disableTSDBAsyncSorting.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "该命令用于关闭TSDB引擎中异步进行数据排序的功能，只能由管理员在数据节点上执行。",
      "keywords": [
        "disableTSDBAsyncSorting",
        "TSDB",
        "异步排序",
        "Cache Engine",
        "管理员"
      ],
      "hypothetical_question": "如何在DolphinDB中关闭TSDB引擎的异步数据排序功能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/disableresourcetracking.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/disableresourcetracking.md",
      "start_line": 1,
      "end_line": 20,
      "summary": "disableResourceTracking函数用于在线关闭资源跟踪，仅当resourceSamplingInterval设置为正整数时由管理员在数据节点上调用。",
      "keywords": [
        "disableResourceTracking",
        "资源跟踪",
        "管理员",
        "数据节点",
        "resourceSamplingInterval"
      ],
      "hypothetical_question": "如何在DolphinDB中关闭资源跟踪？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/distinct.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/distinct.md",
      "start_line": 1,
      "end_line": 82,
      "summary": "DolphinDB中的distinct函数用于返回向量或数组向量中的唯一元素，不保证顺序，可与group by配合使用。",
      "keywords": [
        "distinct",
        "唯一元素",
        "向量",
        "数组向量",
        "group by"
      ],
      "hypothetical_question": "DolphinDB中如何使用distinct函数获取向量中的唯一元素？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/div.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/div.md",
      "start_line": 1,
      "end_line": 95,
      "summary": "DolphinDB中的div函数用于执行元素级别的除法操作，支持标量、数据对、向量和矩阵，并详细说明了整数和浮点数除法的不同行为。",
      "keywords": [
        "div",
        "除法",
        "整数除法",
        "矩阵运算",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中如何使用div函数进行整数除法？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/dividedDifference.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/dividedDifference.md",
      "start_line": 1,
      "end_line": 44,
      "summary": "dividedDifference函数根据指定的采样规则对时间向量X进行重采样，并对数值向量Y进行均差插值。",
      "keywords": [
        "dividedDifference",
        "均差插值",
        "重采样"
      ],
      "hypothetical_question": "如何在DolphinDB中使用dividedDifference函数对时间序列数据进行重采样和均差插值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/double.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/double.md",
      "start_line": 1,
      "end_line": 50,
      "summary": "double函数用于将输入的数据类型转换为DOUBLE类型。",
      "keywords": [
        "double",
        "数据类型转换",
        "DOUBLE"
      ],
      "hypothetical_question": "如何将数据转换为DOUBLE类型？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/dot.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/dot.md",
      "start_line": 1,
      "end_line": 96,
      "summary": "介绍DolphinDB中的dot函数（或**运算符），用于计算矩阵乘法或向量的内积。",
      "keywords": [
        "dot",
        "矩阵乘法",
        "内积",
        "向量",
        "DolphinDB"
      ],
      "hypothetical_question": "在DolphinDB中如何计算两个向量或矩阵的点积或矩阵乘法？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/dropCatalog.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/dropCatalog.md",
      "start_line": 1,
      "end_line": 20,
      "summary": "该文本片段介绍了如何使用 `dropCatalog` 函数删除指定的 catalog。",
      "keywords": [
        "dropCatalog",
        "catalog",
        "删除",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在 DolphinDB 中删除一个 catalog？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/dropAggregator.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/dropAggregator.md",
      "start_line": 1,
      "end_line": 7,
      "summary": "dropAggregator是dropStreamEngine的别名。",
      "keywords": [
        "dropAggregator",
        "dropStreamEngine",
        "别名"
      ],
      "hypothetical_question": "dropAggregator在DolphinDB中是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/drop.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/drop.md",
      "start_line": 1,
      "end_line": 76,
      "summary": "介绍DolphinDB中的drop函数，用于从向量、矩阵或表中删除指定数量的元素、列或行。",
      "keywords": [
        "drop",
        "向量",
        "矩阵",
        "表",
        "删除"
      ],
      "hypothetical_question": "DolphinDB中如何使用drop函数删除向量、矩阵或表中的元素？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/dropColumns_.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/dropColumns_.md",
      "start_line": 1,
      "end_line": 51,
      "summary": "介绍 DolphinDB 中的 dropColumns! 函数，用于从内存表或分布式表中删除指定列。",
      "keywords": [
        "dropColumns!",
        "删除列",
        "内存表",
        "分布式表",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在 DolphinDB 中删除表中的指定列？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/dropDatabase.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/dropDatabase.md",
      "start_line": 1,
      "end_line": 52,
      "summary": "介绍如何使用dropDatabase函数删除DolphinDB中的数据库及其物理文件。",
      "keywords": [
        "dropDatabase",
        "数据库删除",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中删除一个数据库及其所有物理文件？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/dropPartition.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/dropPartition.md",
      "start_line": 1,
      "end_line": 193,
      "summary": "介绍如何使用dropPartition函数删除分布式数据库中指定分区的数据，包括参数说明和多种使用示例。",
      "keywords": [
        "dropPartition",
        "分布式数据库",
        "分区删除",
        "DolphinDB",
        "数据管理"
      ],
      "hypothetical_question": "如何在DolphinDB中删除分布式数据库的指定分区数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/dropStreamGraph.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/dropStreamGraph.md",
      "start_line": 1,
      "end_line": 28,
      "summary": "介绍如何使用dropStreamGraph函数销毁指定流图及其相关权限要求。",
      "keywords": [
        "dropStreamGraph",
        "流图",
        "销毁",
        "权限"
      ],
      "hypothetical_question": "如何在DolphinDB中销毁一个流图？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/dropFunctionView.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/dropFunctionView.md",
      "start_line": 1,
      "end_line": 36,
      "summary": "介绍如何使用 dropFunctionView 函数删除用户自定义函数或命名空间下的所有函数。",
      "keywords": [
        "dropFunctionView",
        "函数删除",
        "命名空间",
        "VIEW_OWNER权限"
      ],
      "hypothetical_question": "如何在 DolphinDB 中删除用户自定义函数或命名空间下的所有函数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/dropIPCInMemoryTable.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/dropIPCInMemoryTable.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "介绍如何使用 `dropIPCInMemoryTable` 函数删除跨进程共享内存表，仅适用于 Linux 系统。",
      "keywords": [
        "dropIPCInMemoryTable",
        "跨进程共享内存表",
        "Linux"
      ],
      "hypothetical_question": "如何在 Linux 系统中删除跨进程共享内存表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/dropStreamEngine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/dropStreamEngine.md",
      "start_line": 1,
      "end_line": 46,
      "summary": "该文档详细介绍了如何使用dropStreamEngine函数释放指定的流数据引擎定义。",
      "keywords": [
        "dropStreamEngine",
        "流数据引擎",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中释放一个流数据引擎的定义？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/dropSchema.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/dropSchema.md",
      "start_line": 1,
      "end_line": 22,
      "summary": "该文档描述了如何使用 `dropSchema` 函数删除指定 catalog 中的指定 schema。",
      "keywords": [
        "dropSchema",
        "catalog",
        "schema",
        "删除",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在 DolphinDB 中删除一个指定的 schema？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/dropDistributedInMemoryTable.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/dropDistributedInMemoryTable.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "该文档介绍了如何使用dropDistributedInMemoryTable函数删除指定的分布式共享内存表。",
      "keywords": [
        "dropDistributedInMemoryTable",
        "分布式共享内存表",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中删除一个分布式共享内存表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/dropTable.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/dropTable.md",
      "start_line": 1,
      "end_line": 34,
      "summary": "介绍如何使用dropTable函数删除DolphinDB中的指定表。",
      "keywords": [
        "dropTable",
        "数据库",
        "删除表",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中删除一个指定的表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/dropStreamTable.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/dropStreamTable.md",
      "start_line": 1,
      "end_line": 64,
      "summary": "介绍如何使用dropStreamTable函数删除流数据表，包括普通流数据表、未加载到内存的持久化流数据表以及高可用流数据表。",
      "keywords": [
        "dropStreamTable",
        "流数据表",
        "持久化",
        "高可用"
      ],
      "hypothetical_question": "如何在DolphinDB中删除流数据表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/dropna.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/dropna.md",
      "start_line": 1,
      "end_line": 84,
      "summary": "DolphinDB函数dropna用于删除向量或矩阵中的NULL值，支持按行或列删除，并可设置非NULL元素的最小数量阈值。",
      "keywords": [
        "dropna",
        "NULL值处理",
        "矩阵操作",
        "向量处理",
        "数据清洗"
      ],
      "hypothetical_question": "如何在DolphinDB中删除向量或矩阵中的NULL值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/dumpheapsample.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/dumpheapsample.md",
      "start_line": 1,
      "end_line": 36,
      "summary": "介绍DolphinDB函数dumpHeapSample的语法、参数、功能及使用示例，用于生成堆内存快照以分析内存使用情况。",
      "keywords": [
        "dumpHeapSample",
        "堆内存快照",
        "内存分析"
      ],
      "hypothetical_question": "如何在DolphinDB中生成堆内存快照以分析内存使用情况？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/duration.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/duration.md",
      "start_line": 1,
      "end_line": 80,
      "summary": "介绍DolphinDB中的duration函数，用于将字符串转换为DURATION类型，表示时间区间，并说明其参数、注意事项及使用示例。",
      "keywords": [
        "duration",
        "DURATION类型",
        "时间区间",
        "交易日历",
        "bar函数"
      ],
      "hypothetical_question": "如何在DolphinDB中将字符串转换为DURATION类型并用于时间分组？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/e/elasticNet.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/e/elasticNet.md",
      "start_line": 1,
      "end_line": 68,
      "summary": "该文档详细介绍了DolphinDB中的elasticNet函数，用于执行弹性网络回归分析，包括语法、参数说明和示例。",
      "keywords": [
        "elasticNet",
        "回归分析",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用elasticNet函数进行弹性网络回归分析？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/dynamicGroupCumsum.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/dynamicGroupCumsum.md",
      "start_line": 1,
      "end_line": 113,
      "summary": "dynamicGroupCumsum函数用于在时间序列中动态统计事件指标在不同类别下的累计值，适用于事件类别动态变化的场景。",
      "keywords": [
        "dynamicGroupCumsum",
        "累计值",
        "时间序列",
        "动态统计"
      ],
      "hypothetical_question": "如何在DolphinDB中动态统计不同类别下的事件指标累计值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/d/dynamicGroupCumcount.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/d/dynamicGroupCumcount.md",
      "start_line": 1,
      "end_line": 55,
      "summary": "介绍如何使用dynamicGroupCumcount函数在DolphinDB中对历史数据和实时数据进行累计计数并根据阈值打标签。",
      "keywords": [
        "dynamicGroupCumcount",
        "累计计数",
        "流数据引擎",
        "DolphinDB",
        "SQL"
      ],
      "hypothetical_question": "如何在DolphinDB中使用dynamicGroupCumcount函数对数据进行累计计数和分组标签？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/e/elasticNetBasic.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/e/elasticNetBasic.md",
      "start_line": 1,
      "end_line": 86,
      "summary": "该文档详细介绍了DolphinDB中的elasticNetBasic函数，用于进行弹性网络回归计算，包括语法、参数说明和输出结果的解释。",
      "keywords": [
        "弹性网络回归",
        "DolphinDB",
        "回归分析"
      ],
      "hypothetical_question": "如何在DolphinDB中使用elasticNetBasic函数进行弹性网络回归分析？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/e/eig.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/e/eig.md",
      "start_line": 1,
      "end_line": 40,
      "summary": "eig函数用于计算实对称矩阵或Hermitian矩阵的特征值和特征向量，返回结果与numpy.linalg.eigh一致。",
      "keywords": [
        "eig",
        "特征值",
        "特征向量",
        "实对称矩阵",
        "Hermitian矩阵"
      ],
      "hypothetical_question": "DolphinDB中如何计算实对称矩阵的特征值和特征向量？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/e/elasticNetCV.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/e/elasticNetCV.md",
      "start_line": 1,
      "end_line": 54,
      "summary": "该文档详细介绍了DolphinDB中的elasticNetCV函数，用于通过五折交叉验证进行弹性网络回归并输出最优参数模型。",
      "keywords": [
        "elasticNetCV",
        "交叉验证",
        "弹性网络回归",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用elasticNetCV函数进行弹性网络回归并获取最优参数模型？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/e/ema.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/e/ema.md",
      "start_line": 1,
      "end_line": 58,
      "summary": "介绍DolphinDB中的ema函数，用于计算给定滑动窗口内的指数移动平均，并详细说明其参数、计算公式及示例。",
      "keywords": [
        "ema",
        "指数移动平均",
        "TA-lib",
        "滑动窗口",
        "warmup"
      ],
      "hypothetical_question": "如何在DolphinDB中使用ema函数计算指数移动平均？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/e/enableActivePartition.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/e/enableActivePartition.md",
      "start_line": 1,
      "end_line": 28,
      "summary": "介绍如何使用enableActivePartition函数创建活动数据库和历史数据库之间的连接。",
      "keywords": [
        "enableActivePartition",
        "历史数据库",
        "活动数据库",
        "连接"
      ],
      "hypothetical_question": "如何在DolphinDB中创建活动数据库和历史数据库之间的连接？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/e/enableTSDBAsyncSorting.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/e/enableTSDBAsyncSorting.md",
      "start_line": 1,
      "end_line": 21,
      "summary": "该命令用于开启TSDB引擎中数据异步排序功能，以提高写入性能。",
      "keywords": [
        "TSDB",
        "异步排序",
        "写入性能",
        "Cache Engine",
        "sortColumns"
      ],
      "hypothetical_question": "如何提高TSDB引擎的数据写入性能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/e/enableQueryMonitor.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/e/enableQueryMonitor.md",
      "start_line": 1,
      "end_line": 16,
      "summary": "介绍enableQueryMonitor函数的语法、参数和功能，用于启用查询任务状态监控。",
      "keywords": [
        "enableQueryMonitor",
        "查询监控",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中启用查询任务状态的监控功能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/e/enableresourcetracking.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/e/enableresourcetracking.md",
      "start_line": 1,
      "end_line": 58,
      "summary": "enableResourceTracking函数用于在线开启资源跟踪，记录CPU、内存、数据使用量及查询分布式表的信息，并将数据写入日志文件。",
      "keywords": [
        "资源跟踪",
        "日志文件",
        "分布式表",
        "CPU使用量",
        "内存使用量"
      ],
      "hypothetical_question": "如何在DolphinDB中开启资源跟踪并记录系统资源使用情况？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/e/enableTableShareAndPersistence.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/e/enableTableShareAndPersistence.md",
      "start_line": 1,
      "end_line": 169,
      "summary": "介绍了DolphinDB中enableTableShareAndPersistence函数的语法、参数、功能及使用示例，该函数用于共享流数据表并持久化到磁盘。",
      "keywords": [
        "流数据表",
        "持久化",
        "异步写入",
        "内存清理",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中共享并持久化流数据表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/e/enableTablePersistence.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/e/enableTablePersistence.md",
      "start_line": 1,
      "end_line": 165,
      "summary": "enableTablePersistence函数用于将流数据表持久化到磁盘，支持异步写入、压缩、内存清理等配置。",
      "keywords": [
        "enableTablePersistence",
        "流数据表",
        "持久化",
        "异步写入",
        "内存清理"
      ],
      "hypothetical_question": "如何在DolphinDB中配置流数据表的持久化和内存清理？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/e/enabletdekey.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/e/enabletdekey.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "介绍如何使用 enableTDEKey 函数启用数据静态加密并初始化 TDE 密钥。",
      "keywords": [
        "enableTDEKey",
        "TDE 密钥",
        "数据静态加密"
      ],
      "hypothetical_question": "如何在 DolphinDB 中启用数据静态加密？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/e/enabletablecachepurge.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/e/enabletablecachepurge.md",
      "start_line": 1,
      "end_line": 82,
      "summary": "介绍如何使用enableTableCachePurge函数为非持久化流表开启自动清理缓存，包括参数配置和清理方式。",
      "keywords": [
        "enableTableCachePurge",
        "流数据表",
        "缓存清理"
      ],
      "hypothetical_question": "如何在DolphinDB中为非持久化流表开启自动清理缓存？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/e/enabletableshareandcachepurge.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/e/enabletableshareandcachepurge.md",
      "start_line": 1,
      "end_line": 83,
      "summary": "介绍如何使用enableTableShareAndCachePurge函数共享流数据表并设置定时清理内存数据的机制。",
      "keywords": [
        "流数据表",
        "内存清理",
        "共享表"
      ],
      "hypothetical_question": "如何在DolphinDB中共享流数据表并设置定时清理内存数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/e/encodeShortGenomeSeq.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/e/encodeShortGenomeSeq.md",
      "start_line": 1,
      "end_line": 74,
      "summary": "encodeShortGenomeSeq函数用于对DNA序列进行编码，以减少存储空间并提高计算效率。",
      "keywords": [
        "DNA序列",
        "编码",
        "存储优化",
        "计算效率"
      ],
      "hypothetical_question": "如何使用DolphinDB的encodeShortGenomeSeq函数对DNA序列进行编码？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/e/endsWith.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/e/endsWith.md",
      "start_line": 1,
      "end_line": 28,
      "summary": "介绍DolphinDB函数endsWith的语法、参数、功能和示例，用于检查字符串是否以指定子字符串结尾。",
      "keywords": [
        "endsWith",
        "字符串函数",
        "DolphinDB",
        "字符串匹配",
        "结尾检查"
      ],
      "hypothetical_question": "如何在DolphinDB中检查一个字符串是否以特定子字符串结尾？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/e/enlist.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/e/enlist.md",
      "start_line": 1,
      "end_line": 42,
      "summary": "enlist函数用于将任意数据形式X转换为向量或元组。",
      "keywords": [
        "enlist",
        "向量",
        "元组",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中的enlist函数有什么作用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/e/eqFloat.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/e/eqFloat.md",
      "start_line": 1,
      "end_line": 33,
      "summary": "介绍DolphinDB中的eqFloat函数，用于以指定精度比较两个数值是否相等。",
      "keywords": [
        "eqFloat",
        "数值比较",
        "精度",
        "DolphinDB",
        "浮点数"
      ],
      "hypothetical_question": "如何在DolphinDB中以指定精度比较两个数值是否相等？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/e/eqpercent.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/e/eqpercent.md",
      "start_line": 1,
      "end_line": 61,
      "summary": "eqPercent函数用于判断两个输入参数的每个对应位置上的元素是否在自定义误差范围内相等。",
      "keywords": [
        "eqPercent",
        "误差范围",
        "相等判断",
        "NULL处理"
      ],
      "hypothetical_question": "如何在DolphinDB中判断两个数值在自定义误差范围内是否相等？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/e/esd.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/e/esd.md",
      "start_line": 1,
      "end_line": 45,
      "summary": "介绍DolphinDB中的esd函数，用于使用ESD算法进行时间序列异常检测。",
      "keywords": [
        "ESD算法",
        "异常检测",
        "时间序列"
      ],
      "hypothetical_question": "如何在DolphinDB中使用ESD算法检测时间序列中的异常值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/e/eq.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/e/eq.md",
      "start_line": 1,
      "end_line": 83,
      "summary": "介绍DolphinDB中的eq函数或==操作符，用于比较标量、数据对、向量、矩阵或集合的相等性。",
      "keywords": [
        "eq",
        "比较操作",
        "DolphinDB",
        "集合",
        "矩阵"
      ],
      "hypothetical_question": "在DolphinDB中如何使用eq函数或==操作符比较不同数据类型的相等性？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/e/erase_.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/e/erase_.md",
      "start_line": 1,
      "end_line": 84,
      "summary": "erase! 函数用于从集合、字典或表中删除指定的元素、键值或行。",
      "keywords": [
        "erase!",
        "集合",
        "字典",
        "表",
        "删除"
      ],
      "hypothetical_question": "如何在 DolphinDB 中使用 erase! 函数从集合、字典或表中删除元素？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/e/eqObj.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/e/eqObj.md",
      "start_line": 1,
      "end_line": 56,
      "summary": "`eqObj`函数用于检验两个对象的类型和值是否相同，支持标量、数据对、向量或矩阵，并可指定浮点数比较的精度。",
      "keywords": [
        "eqObj",
        "比较函数",
        "类型检查",
        "值比较",
        "精度"
      ],
      "hypothetical_question": "DolphinDB中如何比较两个对象的类型和值是否完全相同？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/e/eval.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/e/eval.md",
      "start_line": 1,
      "end_line": 39,
      "summary": "eval函数用于解析和执行给定的元代码表达式。",
      "keywords": [
        "eval",
        "元代码",
        "解析",
        "表达式"
      ],
      "hypothetical_question": "DolphinDB中eval函数的作用是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/e/euclidean.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/e/euclidean.md",
      "start_line": 1,
      "end_line": 55,
      "summary": "该文档详细介绍了DolphinDB中的euclidean函数，用于计算标量、向量或矩阵之间的欧氏距离，并提供了多个使用示例。",
      "keywords": [
        "欧氏距离",
        "矩阵计算",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中计算两个矩阵之间的欧氏距离？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/e/evalTimer.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/e/evalTimer.md",
      "start_line": 1,
      "end_line": 46,
      "summary": "evalTimer函数用于测量执行一个或多个无参数函数所耗费的时间，单位为毫秒，并可指定执行次数。",
      "keywords": [
        "evalTimer",
        "函数执行时间",
        "性能测量",
        "毫秒"
      ],
      "hypothetical_question": "如何在DolphinDB中测量一个或多个函数的执行时间？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/e/ewmCorr.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/e/ewmCorr.md",
      "start_line": 1,
      "end_line": 72,
      "summary": "介绍DolphinDB中ewmCorr函数的语法、参数、详情及使用示例，用于计算指数加权移动相关系数。",
      "keywords": [
        "ewmCorr",
        "指数加权移动相关系数",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中使用ewmCorr函数计算指数加权移动相关系数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/e/existsDatabase.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/e/existsDatabase.md",
      "start_line": 1,
      "end_line": 41,
      "summary": "existsDatabase函数用于检查指定路径的数据库是否存在。",
      "keywords": [
        "existsDatabase",
        "数据库检查",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中检查某个数据库是否存在？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/e/existsCatalog.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/e/existsCatalog.md",
      "start_line": 1,
      "end_line": 14,
      "summary": "existsCatalog函数用于检查指定的catalog是否存在，返回布尔值表示结果。",
      "keywords": [
        "existsCatalog",
        "catalog",
        "检查存在"
      ],
      "hypothetical_question": "如何在DolphinDB中检查一个catalog是否存在？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/e/ewmMean.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/e/ewmMean.md",
      "start_line": 1,
      "end_line": 116,
      "summary": "DolphinDB中的ewmMean函数用于计算数值型向量、矩阵或表的指数加权移动平均值，支持多种参数配置和调整选项。",
      "keywords": [
        "ewmMean",
        "指数加权移动平均",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中计算指数加权移动平均值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/e/ewmCov.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/e/ewmCov.md",
      "start_line": 1,
      "end_line": 72,
      "summary": "介绍了DolphinDB中的ewmCov函数，用于计算指数加权移动协方差，包括其语法、参数、详情和示例。",
      "keywords": [
        "ewmCov",
        "指数加权移动协方差",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中使用ewmCov函数计算指数加权移动协方差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/e/ewmStd.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/e/ewmStd.md",
      "start_line": 1,
      "end_line": 67,
      "summary": "该文档详细介绍了DolphinDB中的ewmStd函数，用于计算数值型向量、矩阵或表的指数加权移动标准差，并提供了参数说明和示例。",
      "keywords": [
        "ewmStd",
        "指数加权移动标准差",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中计算指数加权移动标准差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/e/ewmVar.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/e/ewmVar.md",
      "start_line": 1,
      "end_line": 67,
      "summary": "该文档详细介绍了DolphinDB中的`ewmVar`函数，用于计算指数加权移动方差，包括其语法、参数、详情和示例。",
      "keywords": [
        "ewmVar",
        "指数加权移动方差",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中使用`ewmVar`函数计算指数加权移动方差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/e/exists.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/e/exists.md",
      "start_line": 1,
      "end_line": 54,
      "summary": "DolphinDB的exists函数用于检查服务器端文件或文件夹是否存在，支持分布式文件系统。",
      "keywords": [
        "exists",
        "文件检查",
        "分布式文件系统",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中检查文件或文件夹是否存在？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/e/existsStreamTable.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/e/existsStreamTable.md",
      "start_line": 1,
      "end_line": 40,
      "summary": "该函数用于检查指定的流数据表是否存在，返回布尔值表示结果。",
      "keywords": [
        "existsStreamTable",
        "流数据表",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中检查一个流数据表是否存在？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/e/existsPartition.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/e/existsPartition.md",
      "start_line": 1,
      "end_line": 70,
      "summary": "介绍DolphinDB中existsPartition函数的语法、参数、用法及示例，用于检查指定分区是否存在。",
      "keywords": [
        "existsPartition",
        "分区检查",
        "DolphinDB",
        "分布式文件系统"
      ],
      "hypothetical_question": "如何在DolphinDB中检查指定分区是否存在？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/e/existsSubscriptionTopic.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/e/existsSubscriptionTopic.md",
      "start_line": 1,
      "end_line": 33,
      "summary": "介绍如何使用existsSubscriptionTopic函数查询共享流数据表的订阅主题是否存在。",
      "keywords": [
        "existsSubscriptionTopic",
        "流数据表",
        "订阅主题"
      ],
      "hypothetical_question": "如何检查DolphinDB中共享流数据表的订阅主题是否存在？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/e/eye.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/e/eye.md",
      "start_line": 1,
      "end_line": 36,
      "summary": "DolphinDB中的eye函数用于生成指定维度的单位矩阵。",
      "keywords": [
        "eye",
        "单位矩阵",
        "DolphinDB",
        "矩阵函数"
      ],
      "hypothetical_question": "如何在DolphinDB中生成一个单位矩阵？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/e/existsTable.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/e/existsTable.md",
      "start_line": 1,
      "end_line": 41,
      "summary": "介绍DolphinDB函数existsTable的语法、参数及用法，用于检查指定表是否存在于指定数据库中。",
      "keywords": [
        "existsTable",
        "数据库",
        "表",
        "检查",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中检查一个表是否存在于指定的数据库中？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/e/exp.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/e/exp.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "exp函数用于计算e的X次方，其中X可以是标量、数据对、向量、矩阵或表。",
      "keywords": [
        "exp",
        "e的次方",
        "数学函数"
      ],
      "hypothetical_question": "DolphinDB中如何计算e的X次方？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/e/expr.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/e/expr.md",
      "start_line": 1,
      "end_line": 51,
      "summary": "expr函数用于从对象、运算符或元代码生成元代码。",
      "keywords": [
        "expr",
        "元代码",
        "运算符",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中的expr函数有什么作用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/e/exp2.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/e/exp2.md",
      "start_line": 1,
      "end_line": 33,
      "summary": "exp2函数用于计算2的X次方，支持多种数据类型输入并返回DOUBLE类型结果。",
      "keywords": [
        "exp2",
        "DOUBLE",
        "函数",
        "数学运算",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中计算2的X次方？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/e/expm1.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/e/expm1.md",
      "start_line": 1,
      "end_line": 33,
      "summary": "DolphinDB函数expm1用于计算exp(X)-1，支持标量、数据对、向量、矩阵或表作为输入。",
      "keywords": [
        "expm1",
        "DolphinDB",
        "数学函数",
        "指数函数"
      ],
      "hypothetical_question": "DolphinDB中如何计算exp(X)-1的值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/e/extractTextSchema.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/e/extractTextSchema.md",
      "start_line": 1,
      "end_line": 47,
      "summary": "extractTextSchema函数用于生成CSV文件的结构，包括列名和数据类型。",
      "keywords": [
        "extractTextSchema",
        "CSV",
        "数据类型",
        "文件结构"
      ],
      "hypothetical_question": "如何在DolphinDB中获取CSV文件的结构信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/f/fTest.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/f/fTest.md",
      "start_line": 1,
      "end_line": 48,
      "summary": "该文档详细介绍了DolphinDB中的fTest函数，用于执行F检验以比较两个样本的方差，包括语法、参数、返回结果和示例。",
      "keywords": [
        "F检验",
        "方差比较",
        "统计检验",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中使用fTest函数比较两个样本的方差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/f/ffill.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/f/ffill.md",
      "start_line": 1,
      "end_line": 116,
      "summary": "DolphinDB的ffill函数用于向前填充向量、数组向量、矩阵或表中的空值，支持限制连续填充的最大空值个数。",
      "keywords": [
        "ffill",
        "空值填充",
        "DolphinDB函数",
        "向量处理",
        "表处理"
      ],
      "hypothetical_question": "如何在DolphinDB中使用ffill函数填充向量或表中的空值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/f/file.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/f/file.md",
      "start_line": 1,
      "end_line": 49,
      "summary": "DolphinDB的file函数用于以不同模式打开文件，支持读写操作，并允许指定大小端模式。",
      "keywords": [
        "file",
        "文件操作",
        "读写模式",
        "大小端模式",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中如何使用file函数以不同模式打开文件？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/f/fflush.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/f/fflush.md",
      "start_line": 1,
      "end_line": 43,
      "summary": "fflush函数用于将缓冲区中的数据写入操作系统的文件系统，需要用户登录后执行，但不保证数据刷入磁盘。",
      "keywords": [
        "fflush",
        "文件句柄",
        "缓冲区",
        "数据写入"
      ],
      "hypothetical_question": "如何在DolphinDB中将缓冲区中的数据写入文件系统？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/f/ffill_.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/f/ffill_.md",
      "start_line": 1,
      "end_line": 68,
      "summary": "ffill!函数用于向前填充向量、矩阵或表中的NULL值，并可指定填充的NULL值数量。",
      "keywords": [
        "ffill!",
        "NULL填充",
        "向量",
        "矩阵",
        "表"
      ],
      "hypothetical_question": "如何在DolphinDB中使用ffill!函数填充向量或表中的NULL值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/f/find.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/f/find.md",
      "start_line": 1,
      "end_line": 91,
      "summary": "DolphinDB的find函数用于在不同数据结构中查找元素的位置或对应的值。",
      "keywords": [
        "find函数",
        "数据结构",
        "查找",
        "位置",
        "字典"
      ],
      "hypothetical_question": "DolphinDB中如何使用find函数在不同数据结构中查找元素？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/f/files.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/f/files.md",
      "start_line": 1,
      "end_line": 49,
      "summary": "DolphinDB的files函数用于列出指定目录下的文件和子目录信息，支持通过模式匹配筛选文件。",
      "keywords": [
        "files函数",
        "目录操作",
        "文件搜索",
        "模式匹配",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中列出并筛选指定目录下的文件和子目录？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/f/fill_.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/f/fill_.md",
      "start_line": 1,
      "end_line": 137,
      "summary": "介绍了DolphinDB中fill!函数的语法、参数、功能及使用示例，用于修改向量、元组、矩阵、字典或表中指定位置的值。",
      "keywords": [
        "fill!函数",
        "DolphinDB",
        "数据修改",
        "向量",
        "矩阵"
      ],
      "hypothetical_question": "如何在DolphinDB中使用fill!函数修改向量、矩阵或表中的特定位置的值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/f/firstHit.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/f/firstHit.md",
      "start_line": 1,
      "end_line": 43,
      "summary": "firstHit函数用于返回向量、矩阵或表中第一个满足指定条件的元素，若无满足条件的元素则返回空值。",
      "keywords": [
        "firstHit",
        "关系运算符",
        "条件查找"
      ],
      "hypothetical_question": "如何在DolphinDB中查找第一个满足特定条件的元素？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/f/first.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/f/first.md",
      "start_line": 1,
      "end_line": 55,
      "summary": "介绍DolphinDB中的first函数，用于返回向量、矩阵或表的第一个元素或第一行，并说明其参数和用法。",
      "keywords": [
        "first",
        "DolphinDB",
        "函数",
        "向量",
        "矩阵"
      ],
      "hypothetical_question": "DolphinDB中的first函数有什么作用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/f/flatten.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/f/flatten.md",
      "start_line": 1,
      "end_line": 95,
      "summary": "flatten函数用于将矩阵、元组或一系列向量转换成一维向量，支持嵌套结构和逐步转换。",
      "keywords": [
        "flatten",
        "向量转换",
        "嵌套元组",
        "矩阵转换",
        "reduce"
      ],
      "hypothetical_question": "如何在DolphinDB中将一个嵌套元组或矩阵转换成一维向量？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/f/flip.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/f/flip.md",
      "start_line": 1,
      "end_line": 7,
      "summary": "flip是transpose的别名。",
      "keywords": [
        "flip",
        "transpose",
        "别名"
      ],
      "hypothetical_question": "flip在DolphinDB中是什么函数的别名？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/f/firstNot.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/f/firstNot.md",
      "start_line": 1,
      "end_line": 84,
      "summary": "DolphinDB函数firstNot用于返回向量、矩阵或表中第一个不为NULL或指定值的元素。",
      "keywords": [
        "firstNot",
        "NULL",
        "向量",
        "矩阵",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中如何找到向量中第一个不为NULL或指定值的元素？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/f/fixedLengthArrayVector.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/f/fixedLengthArrayVector.md",
      "start_line": 1,
      "end_line": 138,
      "summary": "fixedLengthArrayVector函数用于将多个向量、矩阵或表拼接为一个数组向量，支持相同数据类型的元素拼接，并提供了多个应用示例。",
      "keywords": [
        "fixedLengthArrayVector",
        "数组向量",
        "拼接",
        "DolphinDB",
        "数据存储"
      ],
      "hypothetical_question": "如何在DolphinDB中将多个向量或表拼接为一个数组向量？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/f/floatingratebonddirtyprice.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/f/floatingratebonddirtyprice.md",
      "start_line": 1,
      "end_line": 81,
      "summary": "该文档详细介绍了DolphinDB中用于计算浮动利率债券含息价格的函数floatingRateBondDirtyPrice的语法、参数和使用示例。",
      "keywords": [
        "浮动利率债券",
        "含息价格",
        "DolphinDB函数",
        "金融计算",
        "债券定价"
      ],
      "hypothetical_question": "如何在DolphinDB中计算浮动利率债券的含息价格？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/f/flushOLAPCache.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/f/flushOLAPCache.md",
      "start_line": 1,
      "end_line": 15,
      "summary": "flushOLAPCache函数用于强制将OLAP引擎缓冲区中已完成的事务写入数据库，使用前需配置OLAPCacheEngineSize和dataSync=1。",
      "keywords": [
        "flushOLAPCache",
        "OLAP引擎",
        "缓冲区",
        "事务",
        "数据库"
      ],
      "hypothetical_question": "如何强制将OLAP引擎缓冲区中的已完成事务写入数据库？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/f/floor.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/f/floor.md",
      "start_line": 1,
      "end_line": 67,
      "summary": "floor函数用于将实数向下取整到小于等于它的最大整数，并提供了相关示例和与其他取整函数的比较。",
      "keywords": [
        "floor",
        "取整",
        "DolphinDB",
        "数学函数",
        "向下取整"
      ],
      "hypothetical_question": "DolphinDB中的floor函数有什么作用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/f/flushTSDBCache.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/f/flushTSDBCache.md",
      "start_line": 1,
      "end_line": 14,
      "summary": "flushTSDBCache函数用于强制将TSDB引擎缓冲区中已完成的事务写入数据库，使用前需配置TSDBCacheEngineSize。",
      "keywords": [
        "flushTSDBCache",
        "TSDB",
        "缓冲区",
        "事务",
        "TSDBCacheEngineSize"
      ],
      "hypothetical_question": "如何强制将TSDB引擎缓冲区中已完成的事务写入数据库？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/f/flushcomputenodememcache.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/f/flushcomputenodememcache.md",
      "start_line": 1,
      "end_line": 16,
      "summary": "flushComputeNodeMemCache函数用于将计算节点的内存缓存内容写入磁盘缓存，适用于计算节点升级重启时避免重新获取远程数据。",
      "keywords": [
        "flushComputeNodeMemCache",
        "计算节点",
        "内存缓存",
        "磁盘缓存",
        "优雅重启"
      ],
      "hypothetical_question": "在DolphinDB中，如何优雅重启计算节点以避免重新获取远程数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/f/flushpkeycache.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/f/flushpkeycache.md",
      "start_line": 1,
      "end_line": 21,
      "summary": "flushPKEYCache函数用于将PKEY引擎CacheEngine中的数据强制写入磁盘。",
      "keywords": [
        "flushPKEYCache",
        "PKEY引擎",
        "CacheEngine",
        "数据写入磁盘"
      ],
      "hypothetical_question": "如何使用flushPKEYCache函数将PKEY引擎CacheEngine中的数据强制写入磁盘？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/f/fmin.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/f/fmin.md",
      "start_line": 1,
      "end_line": 58,
      "summary": "介绍DolphinDB中的fmin函数，使用Nelder-Mead单纯形算法找到目标函数的最小值。",
      "keywords": [
        "fmin",
        "Nelder-Mead",
        "优化算法",
        "最小值"
      ],
      "hypothetical_question": "如何在DolphinDB中使用fmin函数找到目标函数的最小值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/f/form.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/f/form.md",
      "start_line": 1,
      "end_line": 45,
      "summary": "DolphinDB的form函数用于生成变量或常数的数据形式标识符。",
      "keywords": [
        "form函数",
        "数据形式标识符",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中如何获取变量或常数的数据形式标识符？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/f/fminbfgs.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/f/fminbfgs.md",
      "start_line": 1,
      "end_line": 90,
      "summary": "fminBFGS函数使用BFGS算法寻找目标函数的最小值，支持多种参数配置并返回优化结果的详细信息。",
      "keywords": [
        "BFGS算法",
        "优化",
        "梯度下降",
        "数值微分",
        "目标函数"
      ],
      "hypothetical_question": "如何使用DolphinDB的fminBFGS函数通过BFGS算法找到目标函数的最小值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/f/fminncg.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/f/fminncg.md",
      "start_line": 1,
      "end_line": 113,
      "summary": "fminNCG函数使用牛顿共轭梯度法对目标函数进行无约束最小化，适用于大型非线性优化问题。",
      "keywords": [
        "牛顿共轭梯度法",
        "无约束最小化",
        "非线性优化"
      ],
      "hypothetical_question": "如何使用DolphinDB的fminNCG函数进行无约束最小化优化？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/f/fminlbfgsb.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/f/fminlbfgsb.md",
      "start_line": 1,
      "end_line": 89,
      "summary": "介绍DolphinDB中的fminLBFGSB函数，该函数使用L-BFGS-B算法寻找目标函数的最小值。",
      "keywords": [
        "fminLBFGSB",
        "L-BFGS-B算法",
        "优化",
        "梯度",
        "约束条件"
      ],
      "hypothetical_question": "如何在DolphinDB中使用fminLBFGSB函数找到目标函数的最小值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/f/fromStdJson.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/f/fromStdJson.md",
      "start_line": 1,
      "end_line": 57,
      "summary": "fromStdJson函数用于将标准JSON格式的字符串转换为DolphinDB规范的数据类型。",
      "keywords": [
        "fromStdJson",
        "JSON转换",
        "DolphinDB数据类型"
      ],
      "hypothetical_question": "如何在DolphinDB中将标准JSON字符串转换为DolphinDB规范的数据类型？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/f/fminslsqp.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/f/fminslsqp.md",
      "start_line": 1,
      "end_line": 119,
      "summary": "fminSLSQP函数使用顺序最小二乘编程方法（SLSQP）找到目标函数的最小值，支持约束条件和边界设置。",
      "keywords": [
        "fminSLSQP",
        "SLSQP",
        "优化算法",
        "约束优化",
        "数值微分"
      ],
      "hypothetical_question": "如何在DolphinDB中使用SLSQP算法进行带约束的优化？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/f/format.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/f/format.md",
      "start_line": 1,
      "end_line": 87,
      "summary": "DolphinDB的format函数用于将指定格式应用到标量或向量对象，支持数字和时间数据的格式化。",
      "keywords": [
        "format函数",
        "数字格式化",
        "时间格式化",
        "DolphinDB",
        "字符串转换"
      ],
      "hypothetical_question": "如何在DolphinDB中使用format函数对数字和时间数据进行格式化？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/f/fromUTF8.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/f/fromUTF8.md",
      "start_line": 1,
      "end_line": 35,
      "summary": "fromUTF8函数用于将UTF8编码的字符串转换为其他指定编码，支持不同操作系统下的编码转换。",
      "keywords": [
        "fromUTF8",
        "UTF8编码",
        "字符串转换",
        "编码转换",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中将UTF8编码的字符串转换为其他编码？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/f/fromJson.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/f/fromJson.md",
      "start_line": 1,
      "end_line": 35,
      "summary": "fromJson函数用于将符合DolphinDB规范的JSON字符串转换为DolphinDB对象。",
      "keywords": [
        "fromJson",
        "JSON",
        "DolphinDB",
        "数据转换"
      ],
      "hypothetical_question": "如何将符合DolphinDB规范的JSON字符串转换为DolphinDB对象？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/f/funcByName.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/f/funcByName.md",
      "start_line": 1,
      "end_line": 46,
      "summary": "funcByName函数用于动态执行指定的运算符或函数，支持内置和自定义函数，主要用于元编程。",
      "keywords": [
        "funcByName",
        "动态执行",
        "元编程",
        "内置函数",
        "自定义函数"
      ],
      "hypothetical_question": "如何在DolphinDB中动态执行一个指定的函数或运算符？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/f/fy5253Quarter.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/f/fy5253Quarter.md",
      "start_line": 1,
      "end_line": 67,
      "summary": "该文档详细介绍了DolphinDB中的fy5253Quarter函数，用于根据52-53周财年计算指定日期的财政季度起始日期。",
      "keywords": [
        "fy5253Quarter",
        "财政季度",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中使用fy5253Quarter函数计算财政季度的起始日期？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/f/fy5253.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/f/fy5253.md",
      "start_line": 1,
      "end_line": 68,
      "summary": "该文档详细介绍了DolphinDB中的fy5253函数，用于计算基于52-53周财年的财政年度起始日期，并提供了参数说明、使用详情和示例。",
      "keywords": [
        "fy5253",
        "财政年度",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用fy5253函数计算财政年度的起始日期？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/garch.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/garch.md",
      "start_line": 1,
      "end_line": 75,
      "summary": "介绍DolphinDB中garch函数的语法、参数、返回值及使用示例，用于分析单变量时间序列的GARCH模型。",
      "keywords": [
        "GARCH模型",
        "时间序列分析",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中使用garch函数进行单变量时间序列分析？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/gaussianNB.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/gaussianNB.md",
      "start_line": 1,
      "end_line": 43,
      "summary": "介绍 DolphinDB 中的 gaussianNB 函数，用于使用高斯朴素贝叶斯算法进行数据分类训练。",
      "keywords": [
        "gaussianNB",
        "高斯朴素贝叶斯",
        "分类训练",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在 DolphinDB 中使用 gaussianNB 函数进行高斯朴素贝叶斯分类训练？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/gaussiankde.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/gaussiankde.md",
      "start_line": 1,
      "end_line": 85,
      "summary": "介绍DolphinDB中的gaussianKde函数，用于通过高斯核密度估计方法估计随机变量的概率密度，并生成可用于预测的模型。",
      "keywords": [
        "gaussianKde",
        "核密度估计",
        "概率密度",
        "DolphinDB",
        "预测模型"
      ],
      "hypothetical_question": "如何在DolphinDB中使用gaussianKde函数进行核密度估计？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/gema.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/gema.md",
      "start_line": 1,
      "end_line": 48,
      "summary": "介绍DolphinDB中的gema函数，用于计算给定滑动窗口内数据的指数移动平均，并允许自定义计算系数alpha。",
      "keywords": [
        "gema",
        "指数移动平均",
        "滑动窗口",
        "alpha",
        "TA-lib"
      ],
      "hypothetical_question": "DolphinDB中的gema函数是如何计算指数移动平均的？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/gaussiankdepredict.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/gaussiankdepredict.md",
      "start_line": 1,
      "end_line": 39,
      "summary": "gaussianKdePredict函数用于根据gaussianKde生成的模型对数据进行预测，返回每个数据点的预测结果。",
      "keywords": [
        "gaussianKdePredict",
        "预测函数",
        "高斯核估计",
        "概率密度"
      ],
      "hypothetical_question": "如何使用gaussianKdePredict函数对数据进行预测？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/genShortGenomeSeq.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/genShortGenomeSeq.md",
      "start_line": 1,
      "end_line": 57,
      "summary": "genShortGenomeSeq函数用于对DNA序列进行滑动窗口编码，返回整型向量。",
      "keywords": [
        "genShortGenomeSeq",
        "DNA序列",
        "滑动窗口编码",
        "整型向量"
      ],
      "hypothetical_question": "如何使用genShortGenomeSeq函数对DNA序列进行滑动窗口编码？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/ge.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/ge.md",
      "start_line": 1,
      "end_line": 98,
      "summary": "ge函数用于比较两个元素或集合，返回逐个元素比较X>=Y的结果或检查Y是否为X的子集。",
      "keywords": [
        "ge",
        "比较函数",
        "集合操作",
        "子集检查"
      ],
      "hypothetical_question": "在DolphinDB中如何使用ge函数进行元素比较和集合子集检查？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/generateuserticket.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/generateuserticket.md",
      "start_line": 1,
      "end_line": 29,
      "summary": "该函数允许管理员为指定用户生成具有过期时间的动态登录口令，用于免密登录。",
      "keywords": [
        "generateUserTicket",
        "动态登录口令",
        "免密登录",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中生成一个具有过期时间的动态登录口令？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getAggregatorStat.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getAggregatorStat.md",
      "start_line": 1,
      "end_line": 8,
      "summary": "getAggregatorStat是getStreamEngineStat的别名。",
      "keywords": [
        "getAggregatorStat",
        "getStreamEngineStat",
        "别名"
      ],
      "hypothetical_question": "getAggregatorStat是什么函数的别名？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getActiveMaster.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getActiveMaster.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "getActiveMaster函数用于返回普通集群的控制节点别名或包含多个控制节点的集群的Leader控制节点别名，且只能在控制节点上执行。",
      "keywords": [
        "getActiveMaster",
        "控制节点",
        "Leader控制节点",
        "DolphinDB"
      ],
      "hypothetical_question": "在DolphinDB中，如何获取当前活动的控制节点别名？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getAggregator.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getAggregator.md",
      "start_line": 1,
      "end_line": 7,
      "summary": "getAggregator 是 getStreamEngine 的别名。",
      "keywords": [
        "getAggregator",
        "getStreamEngine",
        "别名"
      ],
      "hypothetical_question": "getAggregator 和 getStreamEngine 之间有什么关系？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/genericTStateIterate.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/genericTStateIterate.md",
      "start_line": 1,
      "end_line": 111,
      "summary": "genericTStateIterate函数是基于时间窗口进行迭代计算的DolphinDB函数，支持自定义无状态函数和初始化窗口设置。",
      "keywords": [
        "genericTStateIterate",
        "时间窗口",
        "迭代计算",
        "DolphinDB函数",
        "自定义函数"
      ],
      "hypothetical_question": "如何在DolphinDB中使用genericTStateIterate函数进行基于时间窗口的迭代计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/genoutputcolumnsforobsnapshotengine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/genoutputcolumnsforobsnapshotengine.md",
      "start_line": 1,
      "end_line": 90,
      "summary": "该函数用于简化订单簿引擎的创建过程，生成输出字段和表结构。",
      "keywords": [
        "订单簿引擎",
        "输出字段",
        "表结构",
        "genOutputColumnsForOBSnapshotEngine"
      ],
      "hypothetical_question": "如何使用genOutputColumnsForOBSnapshotEngine函数简化订单簿引擎的创建过程？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/geowithin.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/geowithin.md",
      "start_line": 1,
      "end_line": 32,
      "summary": "geoWithin函数用于判断一个或多个点是否位于指定多边形内，并可选择是否包含边界上的点。",
      "keywords": [
        "geoWithin",
        "多边形",
        "点",
        "边界"
      ],
      "hypothetical_question": "如何使用DolphinDB的geoWithin函数判断点是否在多边形内？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getAllClusters.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getAllClusters.md",
      "start_line": 1,
      "end_line": 33,
      "summary": "getAllClusters函数用于获取所有集群名称及其类型和状态，仅限管理员在管理集群上执行。",
      "keywords": [
        "getAllClusters",
        "集群管理",
        "MoM"
      ],
      "hypothetical_question": "如何在DolphinDB中获取所有集群的名称、类型和状态？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/genericStateIterate.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/genericStateIterate.md",
      "start_line": 1,
      "end_line": 81,
      "summary": "介绍DolphinDB中的genericStateIterate函数，用于基于窗口进行迭代计算，并支持用户自定义函数。",
      "keywords": [
        "genericStateIterate",
        "窗口计算",
        "迭代函数",
        "DolphinDB",
        "自定义函数"
      ],
      "hypothetical_question": "如何在DolphinDB中使用genericStateIterate函数进行基于窗口的迭代计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getAuthenticatedUsers.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getAuthenticatedUsers.md",
      "start_line": 1,
      "end_line": 22,
      "summary": "该函数用于获取所有节点上已登录用户的名称列表。",
      "keywords": [
        "getAuthenticatedUsers",
        "登录用户",
        "用户信息"
      ],
      "hypothetical_question": "如何在DolphinDB中获取所有已登录用户的名称？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getAllCatalogs.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getAllCatalogs.md",
      "start_line": 1,
      "end_line": 21,
      "summary": "getAllCatalogs函数用于检索当前所有可用的catalog名称。",
      "keywords": [
        "getAllCatalogs",
        "catalog",
        "检索"
      ],
      "hypothetical_question": "如何获取DolphinDB中所有可用的catalog名称？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getAllDBGranularity.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getAllDBGranularity.md",
      "start_line": 1,
      "end_line": 28,
      "summary": "该函数用于列出数据节点上所有数据库的分区粒度，返回一个字典，其中键为数据库名称，值为分区粒度（TABLE或DATABASE）。",
      "keywords": [
        "getAllDBGranularity",
        "分区粒度",
        "数据库",
        "数据节点"
      ],
      "hypothetical_question": "如何在DolphinDB中获取所有数据库的分区粒度信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getBackupList.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getBackupList.md",
      "start_line": 1,
      "end_line": 49,
      "summary": "介绍DolphinDB中getBackupList函数的语法、参数、功能及使用示例，用于获取指定分布式表的备份信息。",
      "keywords": [
        "getBackupList",
        "备份信息",
        "分布式表",
        "DolphinDB"
      ],
      "hypothetical_question": "如何使用DolphinDB的getBackupList函数获取分布式表的备份信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getAllDBs.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getAllDBs.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "getAllDBs函数用于获取当前节点上的分布式数据库信息，返回数据库名称和表名及其状态，并根据用户权限返回不同的结果。",
      "keywords": [
        "getAllDBs",
        "分布式数据库",
        "权限管理"
      ],
      "hypothetical_question": "如何使用getAllDBs函数获取当前节点上的分布式数据库信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getBackupMeta.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getBackupMeta.md",
      "start_line": 1,
      "end_line": 53,
      "summary": "介绍DolphinDB函数getBackupMeta的语法、参数、详情及示例，用于获取分布式数据表特定分区的备份信息。",
      "keywords": [
        "getBackupMeta",
        "备份信息",
        "分布式数据库",
        "分区"
      ],
      "hypothetical_question": "如何使用getBackupMeta函数获取DolphinDB中分布式数据表特定分区的备份信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getCachedSymbolBaseMemSize.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getCachedSymbolBaseMemSize.md",
      "start_line": 1,
      "end_line": 14,
      "summary": "该函数用于获取DolphinDB引擎中SYMBOL类型字典编码的缓存大小，单位为字节。",
      "keywords": [
        "getCachedSymbolBaseMemSize",
        "SYMBOL",
        "字典编码",
        "缓存大小",
        "字节"
      ],
      "hypothetical_question": "如何获取DolphinDB中SYMBOL类型的字典编码缓存大小？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getCacheEngineMemSize.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getCacheEngineMemSize.md",
      "start_line": 1,
      "end_line": 35,
      "summary": "该文档描述了DolphinDB中getCacheEngineMemSize函数的语法、参数、返回详情及示例，用于查看OLAP引擎Cache Engine的内存使用情况。",
      "keywords": [
        "getCacheEngineMemSize",
        "OLAP引擎",
        "Cache Engine",
        "内存使用"
      ],
      "hypothetical_question": "如何在DolphinDB中查看OLAP引擎Cache Engine的内存使用情况？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getCatalogsByCluster.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getCatalogsByCluster.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "该函数用于查询指定集群中的所有数据目录（catalog），仅可由管理员在MoM集群上执行。",
      "keywords": [
        "getCatalogsByCluster",
        "数据目录",
        "MoM集群"
      ],
      "hypothetical_question": "如何在DolphinDB中查询指定集群的所有数据目录？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getBackupStatus.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getBackupStatus.md",
      "start_line": 1,
      "end_line": 51,
      "summary": "该文档描述了DolphinDB中getBackupStatus函数的语法、参数、返回详情和使用示例，用于查看指定用户的备份/恢复任务状态。",
      "keywords": [
        "getBackupStatus",
        "backup",
        "restore",
        "DolphinDB",
        "task status"
      ],
      "hypothetical_question": "如何使用DolphinDB的getBackupStatus函数查看备份或恢复任务的状态？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getCacheEngineStat.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getCacheEngineStat.md",
      "start_line": 1,
      "end_line": 35,
      "summary": "该文档描述了DolphinDB函数getCacheEngineStat的语法、参数、详情和示例，用于获取当前节点下OLAP引擎Cache Engine的状态信息。",
      "keywords": [
        "getCacheEngineStat",
        "OLAP引擎",
        "Cache Engine状态"
      ],
      "hypothetical_question": "如何在DolphinDB中获取OLAP引擎Cache Engine的状态信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getChunkPath.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getChunkPath.md",
      "start_line": 1,
      "end_line": 32,
      "summary": "介绍DolphinDB函数getChunkPath的语法、参数、功能及使用示例，该函数用于返回指定数据源代表数据块的路径。",
      "keywords": [
        "getChunkPath",
        "数据源",
        "路径",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中获取数据源代表数据块的路径？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getChunksMeta.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getChunksMeta.md",
      "start_line": 1,
      "end_line": 71,
      "summary": "getChunksMeta函数用于获取本地节点上指定数据库chunk的元数据，包括路径、类型、状态等信息。",
      "keywords": [
        "getChunksMeta",
        "chunk元数据",
        "DFS路径"
      ],
      "hypothetical_question": "如何获取DolphinDB数据库中chunk的元数据信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getClusterDFSTables.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getClusterDFSTables.md",
      "start_line": 1,
      "end_line": 35,
      "summary": "该函数用于返回集群中的分布式表，并详细说明了不同权限用户可返回的表类型。",
      "keywords": [
        "getClusterDFSTables",
        "分布式表",
        "权限"
      ],
      "hypothetical_question": "如何使用getClusterDFSTables函数获取集群中的分布式表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getClusterDFSDatabases.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getClusterDFSDatabases.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "该函数用于获取当前集群中用户有权限访问的所有分布式数据库列表。",
      "keywords": [
        "getClusterDFSDatabases",
        "分布式数据库",
        "权限管理"
      ],
      "hypothetical_question": "如何获取DolphinDB集群中我有权限访问的所有分布式数据库列表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getClusterStatus.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getClusterStatus.md",
      "start_line": 1,
      "end_line": 32,
      "summary": "该文档详细介绍了DolphinDB中的getClusterStatus函数，用于查询指定集群的当前状态，包括参数、返回值和示例。",
      "keywords": [
        "getClusterStatus",
        "集群状态",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中查询指定集群的当前状态？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getCompletedQueries.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getCompletedQueries.md",
      "start_line": 1,
      "end_line": 75,
      "summary": "getCompletedQueries函数用于返回本地节点上最近完成的查询分布式数据库的SQL语句的描述信息表，包含用户ID、会话ID、任务ID等字段。",
      "keywords": [
        "getCompletedQueries",
        "SQL查询",
        "性能监控"
      ],
      "hypothetical_question": "如何获取DolphinDB中最近完成的SQL查询的描述信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getClusterChunksStatus.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getClusterChunksStatus.md",
      "start_line": 1,
      "end_line": 52,
      "summary": "该文档详细介绍了DolphinDB中getClusterChunksStatus函数的语法、返回信息及其用途，包括chunk的元数据、状态、副本分布等。",
      "keywords": [
        "getClusterChunksStatus",
        "chunk元数据",
        "副本分布"
      ],
      "hypothetical_question": "如何在DolphinDB中查看集群中所有chunk的元数据信息及其分布状态？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getComputeNodeCacheDetails.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getComputeNodeCacheDetails.md",
      "start_line": 1,
      "end_line": 61,
      "summary": "介绍DolphinDB函数getComputeNodeCacheDetails的语法、参数、详情及返回值，用于查询计算节点上的缓存信息。",
      "keywords": [
        "getComputeNodeCacheDetails",
        "缓存信息",
        "存算分离"
      ],
      "hypothetical_question": "如何查询DolphinDB计算节点上的缓存详细信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getConfigure.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getConfigure.md",
      "start_line": 1,
      "end_line": 7,
      "summary": "getConfigure是getConfig的别名。",
      "keywords": [
        "getConfigure",
        "getConfig",
        "别名"
      ],
      "hypothetical_question": "getConfigure和getConfig之间有什么关系？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getClusterPerf.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getClusterPerf.md",
      "start_line": 1,
      "end_line": 104,
      "summary": "getClusterPerf函数用于获取DolphinDB集群中每个节点的配置和性能监控度量值。",
      "keywords": [
        "getClusterPerf",
        "DolphinDB",
        "性能监控",
        "集群管理"
      ],
      "hypothetical_question": "如何使用getClusterPerf函数获取DolphinDB集群中每个节点的性能监控数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getConfig.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getConfig.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "getConfig函数用于获取系统配置信息，可以指定参数名获取具体配置或返回所有配置的字典。",
      "keywords": [
        "getConfig",
        "配置参数",
        "系统配置"
      ],
      "hypothetical_question": "如何使用DolphinDB的getConfig函数获取系统配置信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getControllerAlias.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getControllerAlias.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "该函数用于获取控制节点的别名，该别名定义在配置文件中。",
      "keywords": [
        "getControllerAlias",
        "控制节点",
        "别名",
        "配置参数"
      ],
      "hypothetical_question": "如何获取DolphinDB中控制节点的别名？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getConsoleJobs.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getConsoleJobs.md",
      "start_line": 1,
      "end_line": 46,
      "summary": "介绍DolphinDB函数getConsoleJobs，用于返回本地节点上正在执行的交互式任务的详细信息。",
      "keywords": [
        "getConsoleJobs",
        "交互式任务",
        "DolphinDB"
      ],
      "hypothetical_question": "如何使用DolphinDB获取本地节点上正在执行的交互式任务信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getControllerElectionTick.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getControllerElectionTick.md",
      "start_line": 1,
      "end_line": 17,
      "summary": "该函数用于获取控制节点组成的raft组的election tick设置值。",
      "keywords": [
        "getControllerElectionTick",
        "raft",
        "election tick",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中获取控制节点raft组的election tick设置值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getDBAccess.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getDBAccess.md",
      "start_line": 1,
      "end_line": 45,
      "summary": "getDBAccess函数用于查看分布式数据库中用户和组的权限状态。",
      "keywords": [
        "getDBAccess",
        "权限管理",
        "分布式数据库",
        "用户权限"
      ],
      "hypothetical_question": "如何查看分布式数据库中用户和组的权限状态？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getCurrentCatalog.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getCurrentCatalog.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "getCurrentCatalog函数用于查看当前session所在的catalog。",
      "keywords": [
        "getCurrentCatalog",
        "catalog",
        "session",
        "DolphinDB",
        "函数"
      ],
      "hypothetical_question": "如何在DolphinDB中查看当前session所在的catalog？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getConnections.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getConnections.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "getConnections函数用于获取当前节点的所有网络连接信息，包括服务器、客户端IP和端口以及连接建立时间。",
      "keywords": [
        "getConnections",
        "网络连接",
        "IP和端口",
        "连接建立时间"
      ],
      "hypothetical_question": "如何获取DolphinDB当前节点的所有网络连接信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getDFSTablesByDatabase.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getDFSTablesByDatabase.md",
      "start_line": 1,
      "end_line": 33,
      "summary": "该函数用于返回分布式数据库中的表，并根据用户权限进行过滤。",
      "keywords": [
        "getDFSTablesByDatabase",
        "分布式数据库",
        "权限管理"
      ],
      "hypothetical_question": "如何使用getDFSTablesByDatabase函数获取分布式数据库中的表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getDatabasesByCluster.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getDatabasesByCluster.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "该函数用于获取指定集群下的所有数据库，仅限管理员在管理集群上执行。",
      "keywords": [
        "getDatabasesByCluster",
        "集群数据库",
        "管理员函数"
      ],
      "hypothetical_question": "如何在DolphinDB中获取指定集群下的所有数据库？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getDFSDatabases.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getDFSDatabases.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "getDFSDatabases函数用于返回当前节点上的分布式数据库，根据用户权限不同返回结果有所区别。",
      "keywords": [
        "getDFSDatabases",
        "分布式数据库",
        "权限"
      ],
      "hypothetical_question": "如何使用getDFSDatabases函数获取当前节点上的分布式数据库？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getCurrentSessionAndUser.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getCurrentSessionAndUser.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "介绍DolphinDB函数getCurrentSessionAndUser的语法、参数、功能及使用示例，该函数用于获取当前会话的ID、用户名、远程IP和端口号。",
      "keywords": [
        "getCurrentSessionAndUser",
        "session ID",
        "remote IP",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中获取当前会话的ID、用户名和远程IP地址？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getDatabaseClusterReplicationStatus.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getDatabaseClusterReplicationStatus.md",
      "start_line": 1,
      "end_line": 22,
      "summary": "该函数用于检查所有数据库是否启用了集群间的异步复制，并返回包含数据库路径、启用状态和执行集ID的表。",
      "keywords": [
        "getDatabaseClusterReplicationStatus",
        "异步复制",
        "数据库集群"
      ],
      "hypothetical_question": "如何查看DolphinDB中所有数据库是否启用了集群间的异步复制？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getDfsRebalanceConcurrency.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getDfsRebalanceConcurrency.md",
      "start_line": 1,
      "end_line": 22,
      "summary": "该函数用于获取控制节点上允许的再平衡任务的最大并发数，仅限管理员在控制节点调用。",
      "keywords": [
        "getDfsRebalanceConcurrency",
        "再平衡任务",
        "并发数",
        "控制节点",
        "管理员"
      ],
      "hypothetical_question": "如何获取DolphinDB控制节点上允许的再平衡任务的最大并发数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getEnv.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getEnv.md",
      "start_line": 1,
      "end_line": 37,
      "summary": "getEnv函数用于获取指定环境变量的值，如果变量不存在则返回默认值。",
      "keywords": [
        "getEnv",
        "环境变量",
        "默认值",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中获取环境变量的值并设置默认值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getDfsRecoveryConcurrency.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getDfsRecoveryConcurrency.md",
      "start_line": 1,
      "end_line": 22,
      "summary": "该函数用于获取控制节点上允许的分区恢复任务的最大并发数，仅限管理员在控制节点调用。",
      "keywords": [
        "getDfsRecoveryConcurrency",
        "分区恢复",
        "并发数",
        "控制节点",
        "管理员"
      ],
      "hypothetical_question": "如何在DolphinDB中获取控制节点上分区恢复任务的最大并发数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getFunctionViews.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getFunctionViews.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "该文档描述了DolphinDB中的getFunctionViews函数，用于获取函数视图的信息，包括函数名和函数体。",
      "keywords": [
        "getFunctionViews",
        "函数视图",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中获取所有函数视图的信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getDatanodeRestartInterval.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getDatanodeRestartInterval.md",
      "start_line": 1,
      "end_line": 16,
      "summary": "该文档描述了getDatanodeRestartInterval函数的语法、参数和使用详情，用于在线获取内存中DatanodeRestartInterval的值，仅限管理员在控制节点上调用。",
      "keywords": [
        "getDatanodeRestartInterval",
        "DatanodeRestartInterval",
        "管理员",
        "控制节点"
      ],
      "hypothetical_question": "如何在DolphinDB中获取内存中DatanodeRestartInterval的值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getGroupAccess.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getGroupAccess.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "getGroupAccess函数用于返回指定组的权限，仅限管理员使用，支持获取计算节点组和catalog的访问权限。",
      "keywords": [
        "getGroupAccess",
        "权限管理",
        "管理员",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中获取特定组的访问权限？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getDiskIOStat.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getDiskIOStat.md",
      "start_line": 1,
      "end_line": 28,
      "summary": "介绍DolphinDB函数getDiskIOStat的语法、参数、返回详情及示例，该函数用于获取磁盘IO队列深度和并发级别。",
      "keywords": [
        "getDiskIOStat",
        "diskIOQueueDepths",
        "diskIOConcurrencyLevel",
        "DolphinDB",
        "IO队列"
      ],
      "hypothetical_question": "DolphinDB中如何获取磁盘IO队列的深度和并发级别？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getGroupList.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getGroupList.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "getGroupList函数用于返回所有组，仅限管理员在控制节点、数据节点和计算节点运行。",
      "keywords": [
        "getGroupList",
        "组管理",
        "管理员"
      ],
      "hypothetical_question": "如何在DolphinDB中获取所有组的列表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getGroupsByUserId.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getGroupsByUserId.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "getGroupsByUserId函数用于返回指定用户所在的组，仅限管理员在特定节点上运行。",
      "keywords": [
        "getGroupsByUserId",
        "用户组",
        "管理员",
        "DolphinDB"
      ],
      "hypothetical_question": "如何获取DolphinDB中指定用户所在的组？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getGroupAccessByCluster.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getGroupAccessByCluster.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "该文档描述了DolphinDB中getGroupAccessByCluster函数的语法、参数、用途及返回值，用于查询指定用户组在特定集群中的权限。",
      "keywords": [
        "getGroupAccessByCluster",
        "用户组权限",
        "DolphinDB函数",
        "集群管理"
      ],
      "hypothetical_question": "如何在DolphinDB中查询特定用户组在某个集群中的权限？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getGroupListOfAllClusters.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getGroupListOfAllClusters.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "该函数用于查询多集群系统中所有集群的用户组信息，仅限管理员在MoM上执行。",
      "keywords": [
        "getGroupListOfAllClusters",
        "多集群系统",
        "用户组信息",
        "管理员",
        "MoM"
      ],
      "hypothetical_question": "如何在DolphinDB中查询所有集群的用户组信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getHomeDir.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getHomeDir.md",
      "start_line": 1,
      "end_line": 23,
      "summary": "getHomeDir函数用于返回本地节点的主目录，该目录由dolphindb.cfg配置文件定义。",
      "keywords": [
        "getHomeDir",
        "主目录",
        "dolphindb.cfg"
      ],
      "hypothetical_question": "如何获取DolphinDB本地节点的主目录？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getJobMessage.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getJobMessage.md",
      "start_line": 1,
      "end_line": 52,
      "summary": "介绍如何使用getJobMessage函数获取批处理任务的中间信息。",
      "keywords": [
        "getJobMessage",
        "批处理任务",
        "jobId",
        "中间信息"
      ],
      "hypothetical_question": "如何在DolphinDB中获取批处理任务的中间信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getJobReturn.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getJobReturn.md",
      "start_line": 1,
      "end_line": 57,
      "summary": "getJobReturn函数用于获取批处理作业的返回结果，支持阻塞和非阻塞模式。",
      "keywords": [
        "getJobReturn",
        "批处理作业",
        "阻塞模式",
        "作业ID"
      ],
      "hypothetical_question": "如何在DolphinDB中获取批处理作业的返回结果？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getJobStatus.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getJobStatus.md",
      "start_line": 1,
      "end_line": 66,
      "summary": "介绍DolphinDB中的getJobStatus函数，用于获取批处理作业的状态信息。",
      "keywords": [
        "getJobStatus",
        "批处理作业",
        "作业状态"
      ],
      "hypothetical_question": "如何在DolphinDB中获取批处理作业的状态信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getJobStat.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getJobStat.md",
      "start_line": 1,
      "end_line": 38,
      "summary": "getJobStat函数用于监控DolphinDB中正在执行或队列中的作业和任务数量，返回包含不同状态任务数的字典。",
      "keywords": [
        "getJobStat",
        "作业监控",
        "任务数量",
        "DolphinDB"
      ],
      "hypothetical_question": "如何使用getJobStat函数监控DolphinDB中的作业和任务状态？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getLeftStream.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getLeftStream.md",
      "start_line": 1,
      "end_line": 67,
      "summary": "getLeftStream函数用于返回连接引擎左表的表结构对象，实现引擎间的级联。",
      "keywords": [
        "getLeftStream",
        "连接引擎",
        "表结构",
        "级联",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中获取连接引擎的左表结构对象以实现引擎级联？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getLicenseExpiration.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getLicenseExpiration.md",
      "start_line": 1,
      "end_line": 22,
      "summary": "该函数用于查看当前节点的 license 过期时间，验证新 license 是否生效。",
      "keywords": [
        "getLicenseExpiration",
        "license",
        "过期时间"
      ],
      "hypothetical_question": "如何查看 DolphinDB 当前节点的 license 过期时间？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getLevelFileIndexCacheStats.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getLevelFileIndexCacheStats.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "该文档描述了 `getLevelFileIndexCacheStatus` 函数的语法、参数、详情及示例，用于获取 level file 索引内存占用情况。",
      "keywords": [
        "getLevelFileIndexCacheStatus",
        "level file",
        "索引内存",
        "内存占用"
      ],
      "hypothetical_question": "如何获取 DolphinDB 中 level file 索引的内存占用情况？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getLocalIOTDBStaticTable.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getLocalIOTDBStaticTable.md",
      "start_line": 1,
      "end_line": 39,
      "summary": "介绍DolphinDB函数getLocalIOTDBStaticTable的语法、参数、详情及示例，用于获取当前节点上点位管理引擎的静态表信息。",
      "keywords": [
        "getLocalIOTDBStaticTable",
        "静态表",
        "DolphinDB",
        "数据库权限",
        "测点管理"
      ],
      "hypothetical_question": "如何在DolphinDB中获取当前节点上点位管理引擎的静态表信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getMasterReplicationStatus.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getMasterReplicationStatus.md",
      "start_line": 1,
      "end_line": 51,
      "summary": "该文档描述了DolphinDB中`getMasterReplicationStatus`函数的语法、参数、详情及示例，用于获取主集群的异步复制状态。",
      "keywords": [
        "getMasterReplicationStatus",
        "异步复制",
        "主集群",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中获取主集群的异步复制状态？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getMemLimitOfTaskGroupResult.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getMemLimitOfTaskGroupResult.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "获取当前节点发送的批量子查询占用的内存上限（单位为字节）。",
      "keywords": [
        "getMemLimitOfTaskGroupResult",
        "内存上限",
        "批量子查询"
      ],
      "hypothetical_question": "如何获取当前节点发送的批量子查询占用的内存上限？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getMarketCalendar.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getMarketCalendar.md",
      "start_line": 1,
      "end_line": 33,
      "summary": "DolphinDB的getMarketCalendar函数用于获取指定交易所和时间范围内的交易日历信息。",
      "keywords": [
        "交易日历",
        "DolphinDB",
        "交易所",
        "市场假期"
      ],
      "hypothetical_question": "如何在DolphinDB中获取特定交易所的交易日历？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getMachineFingerprint.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getMachineFingerprint.md",
      "start_line": 1,
      "end_line": 22,
      "summary": "该文档介绍了DolphinDB的getMachineFingerprint函数，用于生成机器指纹以进行license验证，并说明了其语法、参数和使用条件。",
      "keywords": [
        "getMachineFingerprint",
        "license验证",
        "机器指纹",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中生成用于license验证的机器指纹？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getMemLimitOfQueryResult.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getMemLimitOfQueryResult.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "该文本片段介绍了DolphinDB中获取单次查询结果内存上限的函数getMemLimitOfQueryResult的语法、参数、详情及示例。",
      "keywords": [
        "getMemLimitOfQueryResult",
        "内存上限",
        "查询结果",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中获取单次查询结果的内存上限？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getNodePort.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getNodePort.md",
      "start_line": 1,
      "end_line": 23,
      "summary": "getNodePort函数用于获取节点使用的端口号，该端口号由配置参数localSite中的port定义。",
      "keywords": [
        "getNodePort",
        "端口号",
        "localSite",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中获取节点使用的端口号？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getNodeAlias.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getNodeAlias.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "getNodeAlias函数用于获取本地节点的别名，该别名由配置参数localSite中的alias定义。",
      "keywords": [
        "getNodeAlias",
        "localSite",
        "alias",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中获取本地节点的别名？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getMemoryStat.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getMemoryStat.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "介绍DolphinDB函数getMemoryStat的语法、参数、返回详情及示例，用于获取当前节点的内存使用情况。",
      "keywords": [
        "getMemoryStat",
        "内存统计",
        "DolphinDB函数",
        "内存使用"
      ],
      "hypothetical_question": "如何在DolphinDB中获取当前节点的内存使用情况？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getNodeType.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getNodeType.md",
      "start_line": 1,
      "end_line": 23,
      "summary": "getNodeType函数用于返回DolphinDB节点的类型，包括数据节点、代理节点、控制器节点、单节点模式和计算节点。",
      "keywords": [
        "getNodeType",
        "节点类型",
        "DolphinDB"
      ],
      "hypothetical_question": "如何判断DolphinDB中当前节点的类型？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getOLAPCachedSymbolBaseMemSize.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getOLAPCachedSymbolBaseMemSize.md",
      "start_line": 1,
      "end_line": 14,
      "summary": "该函数用于获取OLAP引擎中SYMBOL类型字典编码的缓存大小（以字节为单位）。",
      "keywords": [
        "OLAP",
        "SYMBOL",
        "缓存大小",
        "字典编码"
      ],
      "hypothetical_question": "如何获取OLAP引擎中SYMBOL类型的字典编码缓存大小？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getOS.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getOS.md",
      "start_line": 1,
      "end_line": 23,
      "summary": "介绍DolphinDB函数getOS()，用于返回服务器所在操作系统的类型。",
      "keywords": [
        "getOS",
        "操作系统",
        "DolphinDB",
        "服务器"
      ],
      "hypothetical_question": "如何使用DolphinDB获取服务器操作系统的类型？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getOLAPCacheEngineSize.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getOLAPCacheEngineSize.md",
      "start_line": 1,
      "end_line": 37,
      "summary": "该函数用于查看当前节点下OLAP引擎的Cache Engine内存使用情况，返回一个包含四个元素的向量，分别表示不同内存使用量和上限。",
      "keywords": [
        "OLAP",
        "Cache Engine",
        "内存管理",
        "getOLAPCacheEngineSize"
      ],
      "hypothetical_question": "如何查看DolphinDB中OLAP引擎的Cache Engine内存使用情况？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getOSBit.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getOSBit.md",
      "start_line": 1,
      "end_line": 23,
      "summary": "getOSBit函数用于返回DolphinDB server所在操作系统的位数。",
      "keywords": [
        "getOSBit",
        "操作系统",
        "位数",
        "DolphinDB"
      ],
      "hypothetical_question": "如何获取DolphinDB server所在操作系统的位数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getNodeHost.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getNodeHost.md",
      "start_line": 1,
      "end_line": 23,
      "summary": "该文本片段介绍了DolphinDB函数getNodeHost的语法、参数、详情和示例，用于获取本地节点的主机名。",
      "keywords": [
        "getNodeHost",
        "DolphinDB",
        "主机名",
        "localSite"
      ],
      "hypothetical_question": "如何在DolphinDB中获取本地节点的主机名？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getOLAPCacheEngineStat.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getOLAPCacheEngineStat.md",
      "start_line": 1,
      "end_line": 40,
      "summary": "该文档描述了DolphinDB中用于获取OLAP引擎Cache Engine状态信息的函数getOLAPCacheEngineStat的语法、参数、返回详情及示例。",
      "keywords": [
        "OLAP",
        "Cache Engine",
        "DolphinDB",
        "状态信息"
      ],
      "hypothetical_question": "如何在DolphinDB中获取OLAP引擎Cache Engine的状态信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getOrcaCheckpointConfig.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getOrcaCheckpointConfig.md",
      "start_line": 1,
      "end_line": 37,
      "summary": "该文档描述了如何使用getOrcaCheckpointConfig函数查看指定流图的Checkpoint配置及其返回的字段详情。",
      "keywords": [
        "getOrcaCheckpointConfig",
        "Checkpoint配置",
        "流图"
      ],
      "hypothetical_question": "如何查看DolphinDB中指定流图的Checkpoint配置？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getOrcaCheckpointJobInfo.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getOrcaCheckpointJobInfo.md",
      "start_line": 1,
      "end_line": 40,
      "summary": "该函数用于查看指定流图的Checkpoint运行情况，包括任务状态、创建和完成时间等信息。",
      "keywords": [
        "getOrcaCheckpointJobInfo",
        "Checkpoint",
        "流图",
        "状态"
      ],
      "hypothetical_question": "如何查看DolphinDB中指定流图的Checkpoint运行情况？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getOrcaStateMachineEventTaskStatus.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getOrcaStateMachineEventTaskStatus.md",
      "start_line": 1,
      "end_line": 38,
      "summary": "该函数用于获取StreamMaster状态机中任务的状态，返回包含事件id、类型、状态等信息的表。",
      "keywords": [
        "getOrcaStateMachineEventTaskStatus",
        "StreamMaster",
        "状态机",
        "任务状态"
      ],
      "hypothetical_question": "如何获取StreamMaster状态机中任务的状态信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getOrcaCheckpointSubjobInfo.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getOrcaCheckpointSubjobInfo.md",
      "start_line": 1,
      "end_line": 47,
      "summary": "该文档描述了如何使用 `getOrcaCheckpointSubjobInfo` 函数查看指定流图 Checkpoint 子任务的运行情况，包括参数、返回字段和示例。",
      "keywords": [
        "getOrcaCheckpointSubjobInfo",
        "Checkpoint",
        "流图",
        "子任务",
        "DolphinDB"
      ],
      "hypothetical_question": "如何使用 DolphinDB 的 `getOrcaCheckpointSubjobInfo` 函数查看流图 Checkpoint 子任务的运行情况？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getOrcaStreamTableMeta.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getOrcaStreamTableMeta.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "介绍如何使用getOrcaStreamTableMeta函数获取Orca中指定流表的元信息。",
      "keywords": [
        "getOrcaStreamTableMeta",
        "流表元信息",
        "Orca"
      ],
      "hypothetical_question": "如何获取Orca中流表的元信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getOrcaStreamTaskSubscriptionMeta.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getOrcaStreamTaskSubscriptionMeta.md",
      "start_line": 1,
      "end_line": 29,
      "summary": "该文档描述了如何使用 `getOrcaStreamTaskSubscriptionMeta` 函数获取指定流图中所有流任务的订阅信息。",
      "keywords": [
        "getOrcaStreamTaskSubscriptionMeta",
        "流图",
        "订阅信息",
        "流任务"
      ],
      "hypothetical_question": "如何获取 DolphinDB 中指定流图的流任务订阅信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getPerf.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getPerf.md",
      "start_line": 1,
      "end_line": 75,
      "summary": "getPerf函数用于返回本地节点的多个性能监控度量值，包括CPU、内存、磁盘、网络等指标。",
      "keywords": [
        "性能监控",
        "度量值",
        "节点状态",
        "DolphinDB"
      ],
      "hypothetical_question": "如何使用getPerf函数获取DolphinDB本地节点的性能监控数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getOrcaStreamEngineMeta.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getOrcaStreamEngineMeta.md",
      "start_line": 1,
      "end_line": 31,
      "summary": "该函数用于获取指定流图中所有流引擎的元信息，包括任务ID、引擎名称、类型、输出表字段类型和全限定名。",
      "keywords": [
        "getOrcaStreamEngineMeta",
        "流图",
        "元信息",
        "流引擎",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中获取指定流图中所有流引擎的元信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getQueryStatus.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getQueryStatus.md",
      "start_line": 1,
      "end_line": 38,
      "summary": "该文档描述了DolphinDB中的getQueryStatus函数，用于获取当前节点发起且正在执行的查询任务状态。",
      "keywords": [
        "getQueryStatus",
        "查询任务状态",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中获取当前节点正在执行的查询任务状态？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getRecentJobs.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getRecentJobs.md",
      "start_line": 1,
      "end_line": 56,
      "summary": "DolphinDB函数getRecentJobs用于获取本地节点上最近n个批处理作业的状态，返回包含作业详细信息的表。",
      "keywords": [
        "getRecentJobs",
        "批处理作业",
        "作业状态",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中查看最近提交的批处理作业状态？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getPersistenceMeta.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getPersistenceMeta.md",
      "start_line": 1,
      "end_line": 62,
      "summary": "该文档详细介绍了DolphinDB中`getPersistenceMeta`函数的语法、参数、返回的元数据详情以及使用示例。",
      "keywords": [
        "getPersistenceMeta",
        "持久化",
        "流数据表"
      ],
      "hypothetical_question": "如何在DolphinDB中获取共享流数据表的持久化元数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getRaftElectionTick.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getRaftElectionTick.md",
      "start_line": 1,
      "end_line": 17,
      "summary": "获取指定 raft 组当前有效的 election tick 值。",
      "keywords": [
        "getRaftElectionTick",
        "raft 组",
        "election tick",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在 DolphinDB 中获取 raft 组的 election tick 值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getRecoveryTaskStatus.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getRecoveryTaskStatus.md",
      "start_line": 1,
      "end_line": 42,
      "summary": "该文档详细介绍了DolphinDB中getRecoveryTaskStatus函数的语法、参数、返回详情及示例，用于查询副本恢复任务的状态。",
      "keywords": [
        "getRecoveryTaskStatus",
        "副本恢复",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中查询副本恢复任务的状态？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getRecentSlaveReplicationInfo.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getRecentSlaveReplicationInfo.md",
      "start_line": 1,
      "end_line": 33,
      "summary": "该文档描述了DolphinDB中getRecentSlaveReplicationInfo函数的语法、参数、详情和示例，用于查看跨集群异步复制进程中从集群最近一次的任务状态。",
      "keywords": [
        "getRecentSlaveReplicationInfo",
        "跨集群异步复制",
        "任务状态",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中查看跨集群异步复制进程中从集群最近一次的任务状态？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getRecoveryWorkerNum.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getRecoveryWorkerNum.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "该文档描述了DolphinDB中用于获取当前节点用于chunk恢复的工作线程数的函数getRecoveryWorkerNum。",
      "keywords": [
        "getRecoveryWorkerNum",
        "chunk恢复",
        "工作线程数",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中获取当前节点用于chunk恢复的工作线程数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getRightStream.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getRightStream.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "getRightStream函数用于返回连接引擎右表的表结构对象，并支持将数据注入到连接引擎中实现引擎级联。",
      "keywords": [
        "getRightStream",
        "连接引擎",
        "表结构对象",
        "引擎级联"
      ],
      "hypothetical_question": "在DolphinDB中，如何获取连接引擎右表的表结构对象并实现引擎级联？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getRedoLogGCStat.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getRedoLogGCStat.md",
      "start_line": 1,
      "end_line": 32,
      "summary": "该文档介绍了DolphinDB中的getRedoLogGCStat函数，用于获取redo log垃圾回收的状态，并返回包含相关事务信息的表。",
      "keywords": [
        "getRedoLogGCStat",
        "redo log",
        "垃圾回收",
        "事务状态"
      ],
      "hypothetical_question": "如何使用DolphinDB获取redo log垃圾回收的状态？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getSchemaByCatalog.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getSchemaByCatalog.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "getSchemaByCatalog函数用于检索指定catalog中的所有schema，并返回包含schema名称和路径的表。",
      "keywords": [
        "getSchemaByCatalog",
        "catalog",
        "schema",
        "dbUrl",
        "DolphinDB"
      ],
      "hypothetical_question": "如何使用getSchemaByCatalog函数检索catalog中的所有schema？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getScheduledJobs.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getScheduledJobs.md",
      "start_line": 1,
      "end_line": 39,
      "summary": "该文档详细介绍了DolphinDB中用于获取定时任务信息的函数getScheduledJobs的语法、参数、返回字段及示例。",
      "keywords": [
        "getScheduledJobs",
        "定时任务",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中查看所有定时任务的信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getRunningQueries.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getRunningQueries.md",
      "start_line": 1,
      "end_line": 45,
      "summary": "该文档详细介绍了DolphinDB中的`getRunningQueries`函数，用于获取本地节点上正在执行的查询任务的描述信息，包括参数、返回字段和使用前提。",
      "keywords": [
        "getRunningQueries",
        "查询任务",
        "性能监控"
      ],
      "hypothetical_question": "如何在DolphinDB中获取当前正在执行的查询任务的信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getSchemasByCluster.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getSchemasByCluster.md",
      "start_line": 1,
      "end_line": 39,
      "summary": "该文档描述了DolphinDB函数getSchemasByCluster的语法、参数、详情及使用示例，用于查询集群下指定catalog的所有schema。",
      "keywords": [
        "getSchemasByCluster",
        "DolphinDB",
        "schema",
        "catalog",
        "cluster"
      ],
      "hypothetical_question": "如何在DolphinDB中查询集群下指定catalog的所有schema？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getSessionMemoryStat.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getSessionMemoryStat.md",
      "start_line": 1,
      "end_line": 67,
      "summary": "该文档描述了DolphinDB中getSessionMemoryStat函数的用法，用于获取当前节点所有连接会话的内存占用状态。",
      "keywords": [
        "getSessionMemoryStat",
        "内存占用",
        "会话状态",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中查看所有连接会话的内存占用状态？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getSlaveReplicationStatus.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getSlaveReplicationStatus.md",
      "start_line": 1,
      "end_line": 57,
      "summary": "该文档描述了DolphinDB中`getSlaveReplicationStatus`函数的语法、参数、详细功能及返回值，用于获取从集群的异步复制状态。",
      "keywords": [
        "getSlaveReplicationStatus",
        "异步复制",
        "从集群",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中获取从集群的异步复制状态？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getStreamEngine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getStreamEngine.md",
      "start_line": 1,
      "end_line": 33,
      "summary": "该文档介绍了DolphinDB中`getStreamEngine`函数的语法、参数、用途及示例，用于获取流数据引擎的句柄。",
      "keywords": [
        "getStreamEngine",
        "流数据引擎",
        "subscribeTable"
      ],
      "hypothetical_question": "如何在DolphinDB中获取流数据引擎的句柄？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getSnapshotMsgId.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getSnapshotMsgId.md",
      "start_line": 1,
      "end_line": 17,
      "summary": "getSnapshotMsgId函数用于获取流数据引擎的最近一个快照的msgId，以便在重新订阅时从正确的位置继续。",
      "keywords": [
        "getSnapshotMsgId",
        "流数据引擎",
        "快照",
        "重新订阅"
      ],
      "hypothetical_question": "如何在DolphinDB中获取流数据引擎的最近一个快照的msgId以便重新订阅？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getStreamingLeader.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getStreamingLeader.md",
      "start_line": 1,
      "end_line": 23,
      "summary": "介绍如何使用 `getStreamingLeader` 函数获取流数据 Raft 组中的 Leader。",
      "keywords": [
        "getStreamingLeader",
        "流数据",
        "Raft组",
        "Leader"
      ],
      "hypothetical_question": "如何获取流数据 Raft 组中的 Leader？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getStreamEngineStat.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getStreamEngineStat.md",
      "start_line": 1,
      "end_line": 341,
      "summary": "该文档详细介绍了`getStreamEngineStat`函数，用于返回流数据引擎的状态，包括时间序列引擎、横截面聚合引擎、异常检测引擎等多种引擎的状态信息。",
      "keywords": [
        "流数据引擎",
        "状态监控",
        "时间序列引擎",
        "横截面聚合引擎",
        "异常检测引擎"
      ],
      "hypothetical_question": "如何获取流数据引擎的状态信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getStreamTableFilterColumn.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getStreamTableFilterColumn.md",
      "start_line": 1,
      "end_line": 37,
      "summary": "该函数用于获取由setStreamTableFilterColumn指定的流数据表中的过滤列名称。",
      "keywords": [
        "getStreamTableFilterColumn",
        "流数据表",
        "过滤列"
      ],
      "hypothetical_question": "如何获取流数据表中由setStreamTableFilterColumn函数指定的过滤列名？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getSystemCpuUsage.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getSystemCpuUsage.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "该函数用于获取当前节点上 DolphinDB 进程实时占用 CPU 的百分比。",
      "keywords": [
        "getSystemCpuUsage",
        "CPU 占用率",
        "DolphinDB 进程"
      ],
      "hypothetical_question": "如何获取 DolphinDB 进程实时占用的 CPU 百分比？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getSupportBundle.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getSupportBundle.md",
      "start_line": 1,
      "end_line": 42,
      "summary": "该文档详细介绍了DolphinDB中的getSupportBundle函数，用于生成包含系统配置信息的文件，并返回文件路径。",
      "keywords": [
        "getSupportBundle",
        "DolphinDB",
        "配置文件",
        "系统信息",
        "集群管理"
      ],
      "hypothetical_question": "如何在DolphinDB中生成包含系统配置信息的文件？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getStreamingRaftGroups.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getStreamingRaftGroups.md",
      "start_line": 1,
      "end_line": 32,
      "summary": "该文档描述了如何使用getStreamingRaftGroups函数获取当前节点所在的流数据Raft组的信息。",
      "keywords": [
        "getStreamingRaftGroups",
        "Raft组",
        "流数据",
        "数据节点",
        "计算节点"
      ],
      "hypothetical_question": "如何获取当前节点所在的流数据Raft组的信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getSystemLoadAvg.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getSystemLoadAvg.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "该函数返回实时系统平均负载，使用前需在配置文件中启动性能监控。",
      "keywords": [
        "getSystemLoadAvg",
        "系统平均负载",
        "性能监控"
      ],
      "hypothetical_question": "如何在DolphinDB中获取实时系统平均负载？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getSubscriptionTopic.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getSubscriptionTopic.md",
      "start_line": 1,
      "end_line": 37,
      "summary": "该文本片段描述了DolphinDB中`getSubscriptionTopic`函数的语法、参数、功能及使用示例，用于获取订阅主题名称和流数据表的列名。",
      "keywords": [
        "getSubscriptionTopic",
        "流数据表",
        "订阅主题"
      ],
      "hypothetical_question": "如何在DolphinDB中获取订阅主题的名称和流数据表的列名？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getStreamingStat.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getStreamingStat.md",
      "start_line": 1,
      "end_line": 97,
      "summary": "getStreamingStat函数用于监控流计算的状态，返回包含多个表的字典，分别展示发布节点、订阅节点、流数据表、持久化工作线程和UDP组播发布的状态信息。",
      "keywords": [
        "getStreamingStat",
        "流计算",
        "监控",
        "发布节点",
        "订阅节点"
      ],
      "hypothetical_question": "如何使用getStreamingStat函数监控DolphinDB中的流计算状态？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getTSDBCachedSymbolBaseMemSize.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getTSDBCachedSymbolBaseMemSize.md",
      "start_line": 1,
      "end_line": 14,
      "summary": "该函数用于获取TSDB引擎中SYMBOL类型字典编码的缓存大小，单位为字节。",
      "keywords": [
        "TSDB",
        "SYMBOL",
        "字典编码",
        "缓存大小"
      ],
      "hypothetical_question": "如何获取TSDB引擎中SYMBOL类型的字典编码缓存大小？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getTSDBCacheEngineSize.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getTSDBCacheEngineSize.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "该函数用于获取TSDB引擎Cache Engine允许使用的内存上限（单位为字节）。",
      "keywords": [
        "TSDB",
        "Cache Engine",
        "内存上限",
        "getTSDBCacheEngineSize"
      ],
      "hypothetical_question": "如何获取TSDB引擎Cache Engine的内存上限？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getTables.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getTables.md",
      "start_line": 1,
      "end_line": 35,
      "summary": "getTables函数用于返回指定数据库中的所有表。",
      "keywords": [
        "getTables",
        "数据库",
        "表"
      ],
      "hypothetical_question": "如何使用getTables函数获取数据库中的所有表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getTSDBMetaData.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getTSDBMetaData.md",
      "start_line": 1,
      "end_line": 35,
      "summary": "getTSDBMetaData函数用于获取TSDB引擎下所有chunk的元数据，包括chunkId、chunkPath、level、table和files等信息。",
      "keywords": [
        "getTSDBMetaData",
        "TSDB引擎",
        "chunk元数据"
      ],
      "hypothetical_question": "如何获取DolphinDB中TSDB引擎下所有chunk的元数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getTSDBCompactionTaskStatus.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getTSDBCompactionTaskStatus.md",
      "start_line": 1,
      "end_line": 47,
      "summary": "该文档介绍了DolphinDB中`getTSDBCompactionTaskStatus`函数的语法、参数、详情及示例，用于获取TSDB引擎level file合并操作任务的状态。",
      "keywords": [
        "getTSDBCompactionTaskStatus",
        "TSDB",
        "level file",
        "合并任务",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中查看TSDB引擎level file合并任务的状态？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getTableAccessByCluster.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getTableAccessByCluster.md",
      "start_line": 1,
      "end_line": 28,
      "summary": "该函数用于获取指定表的所有用户权限，只能由管理员在管理集群上执行。",
      "keywords": [
        "getTableAccessByCluster",
        "用户权限",
        "管理员",
        "MoM"
      ],
      "hypothetical_question": "如何在DolphinDB中获取指定表的所有用户权限？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getTSDBSortKeyEntry.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getTSDBSortKeyEntry.md",
      "start_line": 1,
      "end_line": 78,
      "summary": "介绍DolphinDB函数getTSDBSortKeyEntry的语法、参数、功能及使用示例，该函数用于获取TSDB引擎中已写入磁盘的每个chunk分区的sort key信息。",
      "keywords": [
        "getTSDBSortKeyEntry",
        "TSDB引擎",
        "sort key",
        "chunk分区",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何使用DolphinDB的getTSDBSortKeyEntry函数获取TSDB引擎中chunk分区的sort key信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getTableSchemaByCluster.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getTableSchemaByCluster.md",
      "start_line": 1,
      "end_line": 40,
      "summary": "该文档描述了DolphinDB中getTableSchemaByCluster函数的语法、参数、详情和示例，用于获取指定集群中表的schema。",
      "keywords": [
        "getTableSchemaByCluster",
        "schema",
        "DolphinDB",
        "MoM",
        "database"
      ],
      "hypothetical_question": "如何在DolphinDB中获取指定集群中表的schema？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getTablesByCluster.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getTablesByCluster.md",
      "start_line": 1,
      "end_line": 35,
      "summary": "getTablesByCluster函数用于获取指定集群数据库中所有表的名称，仅限管理员在MoM集群上执行。",
      "keywords": [
        "getTablesByCluster",
        "MoM",
        "数据库表",
        "集群管理"
      ],
      "hypothetical_question": "如何在DolphinDB中获取指定集群数据库中的所有表名？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getTablet.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getTablet.md",
      "start_line": 1,
      "end_line": 66,
      "summary": "getTablet函数用于返回内存分区表中指定分区的子表。",
      "keywords": [
        "getTablet",
        "内存分区表",
        "子表",
        "分区"
      ],
      "hypothetical_question": "如何在DolphinDB中获取内存分区表的指定分区子表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getTablesOfAllClusters.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getTablesOfAllClusters.md",
      "start_line": 1,
      "end_line": 23,
      "summary": "getTablesOfAllClusters函数用于获取当前用户在多个集群中拥有访问权限的所有表，并返回一个字符串向量。",
      "keywords": [
        "getTablesOfAllClusters",
        "多集群访问",
        "表权限",
        "字符串向量",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中获取当前用户在多个集群中拥有访问权限的所有表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getTopicProcessedOffset.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getTopicProcessedOffset.md",
      "start_line": 1,
      "end_line": 48,
      "summary": "getTopicProcessedOffset函数用于获取订阅主题中最新一条已处理数据的偏移量。",
      "keywords": [
        "getTopicProcessedOffset",
        "subscribeTable",
        "偏移量",
        "DolphinDB"
      ],
      "hypothetical_question": "如何获取DolphinDB中订阅主题的最新处理偏移量？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getTransactionStatus.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getTransactionStatus.md",
      "start_line": 1,
      "end_line": 34,
      "summary": "介绍DolphinDB函数getTransactionStatus的语法、参数、返回详情及示例，用于获取事务状态信息。",
      "keywords": [
        "getTransactionStatus",
        "事务状态",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中获取事务的状态信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getUnresolvedTxn.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getUnresolvedTxn.md",
      "start_line": 1,
      "end_line": 21,
      "summary": "getUnresolvedTxn函数用于获取两阶段提交协议中处于决议状态的节点及其事务信息。",
      "keywords": [
        "getUnresolvedTxn",
        "两阶段提交协议",
        "事务决议"
      ],
      "hypothetical_question": "如何获取两阶段提交协议中处于决议状态的节点及其事务信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getTabletsMeta.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getTabletsMeta.md",
      "start_line": 1,
      "end_line": 62,
      "summary": "介绍DolphinDB函数getTabletsMeta的语法、参数、详情及示例，用于获取指定数据表chunk的元数据信息。",
      "keywords": [
        "getTabletsMeta",
        "元数据",
        "chunk",
        "DolphinDB",
        "数据表"
      ],
      "hypothetical_question": "如何使用getTabletsMeta函数获取DolphinDB中指定数据表的chunk元数据信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getUserAccess.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getUserAccess.md",
      "start_line": 1,
      "end_line": 110,
      "summary": "该文档详细介绍了DolphinDB的getUserAccess函数，包括其语法、参数、返回值的详细说明以及权限管理的相关字段。",
      "keywords": [
        "getUserAccess",
        "权限管理",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中如何使用getUserAccess函数获取用户权限信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getUserList.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getUserList.md",
      "start_line": 1,
      "end_line": 21,
      "summary": "getUserList函数用于返回除管理员之外的所有用户名称的向量，且只能由管理员在特定节点上运行。",
      "keywords": [
        "getUserList",
        "用户名称",
        "管理员",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中获取除管理员之外的所有用户列表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getUserAccessByCluster.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getUserAccessByCluster.md",
      "start_line": 1,
      "end_line": 32,
      "summary": "该文档描述了DolphinDB中getUserAccessByCluster函数的语法、参数、用途及示例，用于查询指定用户在多集群系统中的权限信息。",
      "keywords": [
        "getUserAccessByCluster",
        "权限查询",
        "多集群系统",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中查询指定用户在多集群系统中的权限信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getUserHardwareUsage.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getUserHardwareUsage.md",
      "start_line": 1,
      "end_line": 52,
      "summary": "介绍DolphinDB函数getUserHardwareUsage的语法、参数、功能及使用示例，用于查询特定时间段内用户的硬件资源使用情况。",
      "keywords": [
        "getUserHardwareUsage",
        "硬件资源",
        "资源使用日志"
      ],
      "hypothetical_question": "如何在DolphinDB中查询用户的硬件资源使用情况？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getUsersByGroupId.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getUsersByGroupId.md",
      "start_line": 1,
      "end_line": 16,
      "summary": "getUsersByGroupId函数用于返回属于指定组的用户，仅限管理员在特定节点上运行。",
      "keywords": [
        "getUsersByGroupId",
        "用户管理",
        "管理员权限"
      ],
      "hypothetical_question": "如何使用getUsersByGroupId函数获取指定组的用户列表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getUserPasswordStatus.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getUserPasswordStatus.md",
      "start_line": 1,
      "end_line": 31,
      "summary": "该文档描述了DolphinDB函数getUserPasswordStatus的语法、参数、详情和示例，用于获取用户密码状态信息。",
      "keywords": [
        "getUserPasswordStatus",
        "密码状态",
        "DolphinDB",
        "用户管理",
        "SHA256"
      ],
      "hypothetical_question": "如何在DolphinDB中获取用户的密码状态信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getUserListOfAllClusters.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getUserListOfAllClusters.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "该函数用于查询多集群管理系统中所有集群的用户信息，仅管理员可在管理集群上执行。",
      "keywords": [
        "getUserListOfAllClusters",
        "多集群管理",
        "用户信息",
        "管理员"
      ],
      "hypothetical_question": "如何在DolphinDB中查询所有集群的用户信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getUserLockedStatus.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getUserLockedStatus.md",
      "start_line": 1,
      "end_line": 28,
      "summary": "该文档详细介绍了DolphinDB中`getUserLockedStatus`函数的语法、功能和使用限制，用于查看系统中用户的锁定状态。",
      "keywords": [
        "getUserLockedStatus",
        "用户锁定状态",
        "DolphinDB函数",
        "管理员权限",
        "enhancedSecurityVerification"
      ],
      "hypothetical_question": "如何在DolphinDB中查看系统中用户的锁定状态？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getUserTableAccessRecords.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getUserTableAccessRecords.md",
      "start_line": 1,
      "end_line": 46,
      "summary": "介绍DolphinDB函数getUserTableAccessRecords的语法、参数、详情及使用示例，该函数用于提取指定时间段内的分布式表查询日志。",
      "keywords": [
        "getUserTableAccessRecords",
        "分布式表查询日志",
        "SQL查询任务",
        "管理员权限",
        "时间范围查询"
      ],
      "hypothetical_question": "如何在DolphinDB中查询指定时间范围内的分布式表访问记录？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getaclauditlog.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getaclauditlog.md",
      "start_line": 1,
      "end_line": 99,
      "summary": "该文档详细介绍了DolphinDB中的getAclAuditLog函数，用于查询用户在特定时间内的ACL操作记录，包括操作类型、细节、客户端IP和端口等信息。",
      "keywords": [
        "getAclAuditLog",
        "ACL操作记录",
        "用户权限管理",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中查询用户的ACL操作记录？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getauthenticateduserticket.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getauthenticateduserticket.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "该函数用于生成当前已登录用户的动态登录口令，并可设置过期时间，支持免密登录。",
      "keywords": [
        "getAuthenticatedUserTicket",
        "动态登录口令",
        "免密登录"
      ],
      "hypothetical_question": "如何在DolphinDB中生成一个带过期时间的动态登录口令？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getauditlog.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getauditlog.md",
      "start_line": 1,
      "end_line": 97,
      "summary": "getAuditLog函数用于查询用户在指定时间范围内完成的DDL操作记录，并返回包含操作详细信息的表。",
      "keywords": [
        "getAuditLog",
        "DDL操作记录",
        "用户操作审计"
      ],
      "hypothetical_question": "如何查询用户在特定时间范围内的DDL操作记录？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getclustertdekeys.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getclustertdekeys.md",
      "start_line": 1,
      "end_line": 35,
      "summary": "该函数用于获取集群中开启静态加密表的加密信息，包括表名、加密方式和主密钥版本，仅Linux系统支持。",
      "keywords": [
        "getClusterTDEKeys",
        "静态加密表",
        "加密信息",
        "Linux"
      ],
      "hypothetical_question": "如何在DolphinDB中获取集群中静态加密表的加密信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getcomputenodecachewarmupjobstatus.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getcomputenodecachewarmupjobstatus.md",
      "start_line": 1,
      "end_line": 29,
      "summary": "该文档描述了如何使用 `getComputeNodeCacheWarmupJobStatus` 函数查询数据预热任务的状态。",
      "keywords": [
        "getComputeNodeCacheWarmupJobStatus",
        "数据预热",
        "任务状态",
        "jobId"
      ],
      "hypothetical_question": "如何查询 DolphinDB 中数据预热任务的状态？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getcomputenodecachestat.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getcomputenodecachestat.md",
      "start_line": 1,
      "end_line": 31,
      "summary": "该文档描述了`getComputeNodeCacheStat`函数的语法、参数、返回值详情及示例，用于获取计算节点的二级缓存信息。",
      "keywords": [
        "getComputeNodeCacheStat",
        "计算节点",
        "二级缓存",
        "内存缓存",
        "磁盘缓存"
      ],
      "hypothetical_question": "如何使用`getComputeNodeCacheStat`函数获取计算节点的二级缓存信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getcomputenodecachingdelay.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getcomputenodecachingdelay.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "该函数用于获取当前节点下配置项computeNodeCachingDelay的生效值，单位为秒。",
      "keywords": [
        "getComputeNodeCachingDelay",
        "computeNodeCachingDelay",
        "配置项",
        "秒"
      ],
      "hypothetical_question": "如何获取当前节点下computeNodeCachingDelay配置项的生效值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getcurrenttdekeyversion.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getcurrenttdekeyversion.md",
      "start_line": 1,
      "end_line": 23,
      "summary": "该函数用于获取当前应用的TDE密钥版本，仅支持Linux系统，返回LONG类型标量。",
      "keywords": [
        "getCurrentTDEKeyVersion",
        "TDE",
        "Linux",
        "密钥版本",
        "LONG类型"
      ],
      "hypothetical_question": "如何在DolphinDB中获取当前应用的TDE密钥版本？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getcomputegroupchunksstatus.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getcomputegroupchunksstatus.md",
      "start_line": 1,
      "end_line": 48,
      "summary": "该文档描述了DolphinDB中getComputeGroupChunksStatus函数的语法、参数、返回值及示例，用于获取计算组中缓存chunk的元数据信息。",
      "keywords": [
        "DolphinDB",
        "getComputeGroupChunksStatus",
        "chunk元数据",
        "计算组",
        "缓存"
      ],
      "hypothetical_question": "如何在DolphinDB中获取计算组中缓存chunk的元数据信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getdfsdatabasebyowner.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getdfsdatabasebyowner.md",
      "start_line": 1,
      "end_line": 21,
      "summary": "该函数用于管理员查询指定用户在集群中创建的所有数据库。",
      "keywords": [
        "getDFSDatabasesByOwner",
        "数据库查询",
        "管理员功能"
      ],
      "hypothetical_question": "如何查询某个用户在DolphinDB集群中创建的所有数据库？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getdynamicconfig.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getdynamicconfig.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "`getDynamicConfig`函数返回所有可通过`setDynamicConfig`在线修改的配置项名。",
      "keywords": [
        "getDynamicConfig",
        "setDynamicConfig",
        "配置项",
        "动态配置"
      ],
      "hypothetical_question": "如何获取所有可以通过`setDynamicConfig`在线修改的配置项名？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getipwhitelist.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getipwhitelist.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "该文档介绍了DolphinDB中getIPWhiteList函数的语法、参数、功能及使用示例，用于查看当前集群的IP白名单。",
      "keywords": [
        "getIPWhiteList",
        "IP白名单",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中查看当前集群的IP白名单？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getipblacklist.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getipblacklist.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "该文档介绍了DolphinDB中用于查看当前集群IP黑名单的函数getIPBlackList的语法、参数、详情及使用示例。",
      "keywords": [
        "getIPBlackList",
        "IP黑名单",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中查看当前集群的IP黑名单？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getloadedplugins.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getloadedplugins.md",
      "start_line": 1,
      "end_line": 41,
      "summary": "该文档描述了DolphinDB的getLoadedPlugins函数，用于获取当前节点已加载的插件列表及其相关信息。",
      "keywords": [
        "getLoadedPlugins",
        "插件列表",
        "DolphinDB",
        "函数"
      ],
      "hypothetical_question": "如何在DolphinDB中查看当前节点已加载的插件列表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getenablenullsafejoin.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getenablenullsafejoin.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "介绍DolphinDB函数getEnableNullSafeJoin的语法、参数、详情及示例，用于获取当前enableNullSafeJoin的配置值。",
      "keywords": [
        "getEnableNullSafeJoin",
        "enableNullSafeJoin",
        "DolphinDB",
        "配置"
      ],
      "hypothetical_question": "如何在DolphinDB中获取当前enableNullSafeJoin的配置值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getmemlimitofalltempresults.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getmemlimitofalltempresults.md",
      "start_line": 1,
      "end_line": 23,
      "summary": "该函数用于获取分布式查询操作产生的临时表可以占用的内存上限。",
      "keywords": [
        "getMemLimitOfAllTempResults",
        "分布式查询",
        "内存上限"
      ],
      "hypothetical_question": "如何获取分布式查询操作产生的临时表的内存占用上限？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getpkeycompactiontaskstatus.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getpkeycompactiontaskstatus.md",
      "start_line": 1,
      "end_line": 44,
      "summary": "该文档详细介绍了DolphinDB中`getPKEYCompactionTaskStatus`函数的语法、参数、功能及返回结果，用于查询PKEY引擎level file合并任务的状态。",
      "keywords": [
        "getPKEYCompactionTaskStatus",
        "PKEY引擎",
        "合并任务状态"
      ],
      "hypothetical_question": "如何在DolphinDB中查询PKEY引擎level file合并任务的状态？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getpkeymetadata.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getpkeymetadata.md",
      "start_line": 1,
      "end_line": 41,
      "summary": "getPKEYMetaData函数用于获取PKEY引擎下所有chunk的元数据，返回包含chunkId、chunkPath、level、table和files等信息的表。",
      "keywords": [
        "getPKEYMetaData",
        "PKEY引擎",
        "chunk元数据",
        "数据表"
      ],
      "hypothetical_question": "如何使用getPKEYMetaData函数获取PKEY引擎下所有chunk的元数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getrules.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getrules.md",
      "start_line": 1,
      "end_line": 73,
      "summary": "介绍DolphinDB中getRules函数的语法、参数、详情和使用示例，用于查询规则引擎的规则信息。",
      "keywords": [
        "getRules",
        "规则引擎",
        "规则集"
      ],
      "hypothetical_question": "如何在DolphinDB中查询规则引擎的规则信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getreactivemetrics.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getreactivemetrics.md",
      "start_line": 1,
      "end_line": 32,
      "summary": "该文档介绍了如何使用getReactiveMetrics函数获取指定narrowReactiveStateEngine的计算指标列。",
      "keywords": [
        "getReactiveMetrics",
        "narrowReactiveStateEngine",
        "计算指标"
      ],
      "hypothetical_question": "如何获取narrowReactiveStateEngine的计算指标列？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getprefetchcomputenodedata.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getprefetchcomputenodedata.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "介绍函数 getPrefetchComputeNodeData 的语法、参数、返回值及示例，用于获取当前节点下配置项 enableComputeNodePrefetchData 的生效值。",
      "keywords": [
        "getPrefetchComputeNodeData",
        "enableComputeNodePrefetchData",
        "布尔标量"
      ],
      "hypothetical_question": "如何获取当前节点下配置项 enableComputeNodePrefetchData 的生效值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getslavereplicationexecutionstatus.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getslavereplicationexecutionstatus.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "该文档描述了如何使用 `getSlaveReplicationExecutionStatus` 函数获取从集群数据节点上各线程执行队列的状态。",
      "keywords": [
        "getSlaveReplicationExecutionStatus",
        "从集群",
        "线程执行队列",
        "状态"
      ],
      "hypothetical_question": "如何获取 DolphinDB 从集群数据节点上线程执行队列的状态？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getsessionexpiredtime.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getsessionexpiredtime.md",
      "start_line": 1,
      "end_line": 20,
      "summary": "getSessionExpiredTime函数用于在启用严格安全策略时查看会话的过期时间。",
      "keywords": [
        "getSessionExpiredTime",
        "strictSecurityPolicy",
        "会话过期时间"
      ],
      "hypothetical_question": "如何在DolphinDB中查看会话的过期时间？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getslavereplicationqueuestatus.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getslavereplicationqueuestatus.md",
      "start_line": 1,
      "end_line": 42,
      "summary": "该文档描述了`getSlaveReplicationQueueStatus`函数的语法、参数、详情及示例，用于获取从集群每个执行队列的任务执行状态。",
      "keywords": [
        "getSlaveReplicationQueueStatus",
        "从集群",
        "执行队列",
        "任务状态"
      ],
      "hypothetical_question": "如何获取DolphinDB从集群中每个执行队列的任务执行状态？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getstreamtables.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getstreamtables.md",
      "start_line": 1,
      "end_line": 50,
      "summary": "介绍DolphinDB函数getStreamTables的语法、参数、返回信息及使用示例，用于获取流数据表的详细信息。",
      "keywords": [
        "getStreamTables",
        "流数据表",
        "持久化表"
      ],
      "hypothetical_question": "如何在DolphinDB中获取流数据表的详细信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getstreamenginelist.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getstreamenginelist.md",
      "start_line": 1,
      "end_line": 35,
      "summary": "该文档描述了如何使用 `getStreamEngineList` 函数获取当前节点上所有流计算引擎的信息。",
      "keywords": [
        "getStreamEngineList",
        "流计算引擎",
        "DolphinDB",
        "引擎信息",
        "用户"
      ],
      "hypothetical_question": "如何获取当前节点上所有流计算引擎的信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/gmtime.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/gmtime.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "gmtime函数用于将本地时间转换为格林尼治时间（GMT）。",
      "keywords": [
        "gmtime",
        "格林尼治时间",
        "时区转换"
      ],
      "hypothetical_question": "如何将本地时间转换为格林尼治时间（GMT）？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/getstreamtablecacheoffset.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/getstreamtablecacheoffset.md",
      "start_line": 1,
      "end_line": 38,
      "summary": "介绍如何使用 `getStreamTableCacheOffset` 函数查看自动清理的非持久化流表内存中最旧记录相对于总记录数的偏移量。",
      "keywords": [
        "getStreamTableCacheOffset",
        "流表",
        "偏移量",
        "内存记录",
        "DolphinDB"
      ],
      "hypothetical_question": "如何查看 DolphinDB 中自动清理的非持久化流表内存中最旧记录的偏移量？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/gettableaccess.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/gettableaccess.md",
      "start_line": 1,
      "end_line": 47,
      "summary": "getTableAccess函数用于查看哪些用户和组具有与分布式数据表相关的权限（包括ALLOW和DENY状态），仅限admin或具有DB_OWNER/DB_MANAGE权限的用户调用。",
      "keywords": [
        "getTableAccess",
        "权限管理",
        "分布式数据库"
      ],
      "hypothetical_question": "如何查看分布式数据库中特定表的用户和组权限？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/gettsdbtableindexcachestatus.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/gettsdbtableindexcachestatus.md",
      "start_line": 1,
      "end_line": 53,
      "summary": "该函数用于获取TSDB引擎中已加载数据库表的Level File索引所占用的内存情况。",
      "keywords": [
        "TSDB",
        "索引内存",
        "Level File",
        "getTSDBTableIndexCacheStatus"
      ],
      "hypothetical_question": "如何查看TSDB引擎中Level File索引占用的内存情况？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/gettradingcalendartype.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/gettradingcalendartype.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "该函数用于获取指定交易所对应的交易日历类型，返回值为\"holidayDate\"或\"tradingDate\"。",
      "keywords": [
        "交易日历",
        "交易所",
        "holidayDate",
        "tradingDate",
        "市场标识"
      ],
      "hypothetical_question": "如何获取指定交易所的交易日历类型？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/glm.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/glm.md",
      "start_line": 1,
      "end_line": 96,
      "summary": "DolphinDB中的glm函数用于训练广义线性模型，支持多种分布类型和链接函数，并返回模型参数和统计信息。",
      "keywords": [
        "glm",
        "广义线性模型",
        "DolphinDB",
        "统计建模"
      ],
      "hypothetical_question": "如何在DolphinDB中使用glm函数训练广义线性模型？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/gmd5.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/gmd5.md",
      "start_line": 1,
      "end_line": 41,
      "summary": "gmd5函数用于根据MD5算法对输入数据进行哈希计算，支持多种数据类型并返回INT128类型的哈希值。",
      "keywords": [
        "gmd5",
        "MD5",
        "哈希",
        "INT128",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用gmd5函数计算不同数据类型的MD5哈希值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/gettsdbdatastat.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/gettsdbdatastat.md",
      "start_line": 1,
      "end_line": 87,
      "summary": "介绍DolphinDB中getTSDBDataStat函数的语法、参数、功能及使用示例，用于获取TSDB引擎存储表的Level File和sortKeyEntry数量。",
      "keywords": [
        "getTSDBDataStat",
        "Level File",
        "sortKeyEntry",
        "TSDB引擎",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中获取TSDB引擎存储表的Level File和sortKeyEntry数量？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/gmm.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/gmm.md",
      "start_line": 1,
      "end_line": 72,
      "summary": "DolphinDB中的gmm函数用于训练高斯混合模型（GMM），支持一元和多元数据，并返回模型参数如先验概率、均值和方差/协方差矩阵。",
      "keywords": [
        "高斯混合模型",
        "GMM",
        "DolphinDB",
        "EM算法",
        "参数估计"
      ],
      "hypothetical_question": "如何在DolphinDB中使用gmm函数训练高斯混合模型？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/gppredict.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/gppredict.md",
      "start_line": 1,
      "end_line": 36,
      "summary": "gpPredict函数用于根据训练得到的公式进行预测，支持分组和多卡设备。",
      "keywords": [
        "gpPredict",
        "预测",
        "分组",
        "公式",
        "多卡"
      ],
      "hypothetical_question": "如何使用gpPredict函数进行预测并支持分组和多卡设备？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/gpfit.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/gpfit.md",
      "start_line": 1,
      "end_line": 34,
      "summary": "gpFit函数用于查看训练生成的公式，返回包含公式、适应度及可选相关性的表。",
      "keywords": [
        "gpFit",
        "GPLearn",
        "公式训练",
        "适应度",
        "相关性"
      ],
      "hypothetical_question": "如何使用gpFit函数查看训练生成的公式及其适应度？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/gramSchmidt.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/gramSchmidt.md",
      "start_line": 1,
      "end_line": 47,
      "summary": "gramSchmidt函数用于将列满秩矩阵转换为列向量正交的矩阵，并可选择输出标准正交矩阵。",
      "keywords": [
        "gramSchmidt",
        "正交矩阵",
        "列满秩矩阵",
        "标准正交矩阵",
        "线性无关"
      ],
      "hypothetical_question": "如何使用gramSchmidt函数将矩阵转换为正交矩阵？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/gram.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/gram.md",
      "start_line": 1,
      "end_line": 36,
      "summary": "gram函数用于计算数据源中对应列数据的格拉姆矩阵。",
      "keywords": [
        "gram",
        "格拉姆矩阵",
        "数据源",
        "sqlDS"
      ],
      "hypothetical_question": "如何在DolphinDB中使用gram函数计算格拉姆矩阵？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/grant.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/grant.md",
      "start_line": 1,
      "end_line": 151,
      "summary": "DolphinDB的grant函数用于授予用户或用户组特定权限或内存限制，并支持对权限应用对象进行约束。",
      "keywords": [
        "grant",
        "权限管理",
        "用户组",
        "内存限制",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中授予用户或用户组特定权限或内存限制？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/gt.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/gt.md",
      "start_line": 1,
      "end_line": 3,
      "summary": "说明x不是x的真子集。",
      "keywords": [
        "真子集",
        "集合",
        "关系"
      ],
      "hypothetical_question": "x是否是x的真子集？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/g/groups.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/g/groups.md",
      "start_line": 1,
      "end_line": 60,
      "summary": "DolphinDB的`groups`函数用于对向量中的每个独特值列出其在向量中对应的所有下标，支持多种返回格式。",
      "keywords": [
        "groups",
        "独特值",
        "下标",
        "返回格式"
      ],
      "hypothetical_question": "DolphinDB中如何列出向量中每个独特值对应的所有下标？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/h/haStreamTable.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/h/haStreamTable.md",
      "start_line": 1,
      "end_line": 71,
      "summary": "介绍如何使用haStreamTable函数创建高可用流数据表，包括其语法、参数、详细说明和示例。",
      "keywords": [
        "haStreamTable",
        "高可用流数据表",
        "Raft组",
        "订阅",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中创建和使用高可用流数据表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/h/hasNull.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/h/hasNull.md",
      "start_line": 1,
      "end_line": 58,
      "summary": "介绍DolphinDB函数hasNull的语法、参数、功能及示例，用于检测数据中是否存在NULL值。",
      "keywords": [
        "hasNull",
        "NULL检测",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中检测数据是否包含NULL值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/h/hashBucket.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/h/hashBucket.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "介绍DolphinDB中的hashBucket函数，用于计算输入值的哈希值并进行分区。",
      "keywords": [
        "hashBucket",
        "哈希值",
        "分区"
      ],
      "hypothetical_question": "DolphinDB中的hashBucket函数有什么作用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/h/head.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/h/head.md",
      "start_line": 1,
      "end_line": 75,
      "summary": "DolphinDB的head函数用于返回向量、矩阵或表的前n个元素、列或行。",
      "keywords": [
        "head",
        "DolphinDB",
        "向量",
        "矩阵",
        "表"
      ],
      "hypothetical_question": "DolphinDB中如何获取向量、矩阵或表的前n个元素、列或行？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/h/hex.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/h/hex.md",
      "start_line": 1,
      "end_line": 42,
      "summary": "hex函数用于将整型、浮点型、复合型和二进制数据转换为十六进制字符串表示，并可选择是否反转高低位。",
      "keywords": [
        "hex",
        "十六进制",
        "数据类型转换",
        "reverse"
      ],
      "hypothetical_question": "如何在DolphinDB中将数据转换为十六进制字符串并控制高低位顺序？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/h/highDouble.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/h/highDouble.md",
      "start_line": 1,
      "end_line": 34,
      "summary": "highDouble函数用于返回16字节数据类型的高位8字节数据，结果为DOUBLE类型。",
      "keywords": [
        "highDouble",
        "DOUBLE类型",
        "16字节数据",
        "复数虚部"
      ],
      "hypothetical_question": "如何获取16字节数据类型的高位8字节数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/h/highlong.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/h/highlong.md",
      "start_line": 1,
      "end_line": 33,
      "summary": "highLong函数用于返回16字节数据类型（如UUID、IPADDR等）的高位8字节数据，结果为LONG类型。",
      "keywords": [
        "highLong",
        "LONG类型",
        "16字节数据类型",
        "高位8字节",
        "DolphinDB函数"
      ],
      "hypothetical_question": "在DolphinDB中，如何获取16字节数据类型的高位8字节数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/h/hour.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/h/hour.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "介绍DolphinDB中的hour函数，用于返回时间数据的小时数。",
      "keywords": [
        "hour",
        "时间函数",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中获取时间数据的小时数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/h/hmac.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/h/hmac.md",
      "start_line": 1,
      "end_line": 33,
      "summary": "DolphinDB的hmac函数用于基于密钥和消息生成哈希消息认证码，支持多种哈希算法。",
      "keywords": [
        "hmac",
        "哈希算法",
        "消息认证码",
        "加密",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用hmac函数生成基于哈希的消息认证码？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/h/hourOfDay.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/h/hourOfDay.md",
      "start_line": 1,
      "end_line": 29,
      "summary": "hourOfDay函数用于提取时间或日期时间类型数据中的小时部分。",
      "keywords": [
        "hourOfDay",
        "时间函数",
        "小时提取",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中提取时间或日期时间数据中的小时部分？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/ho_funcs/aggrTopN.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/ho_funcs/aggrTopN.md",
      "start_line": 1,
      "end_line": 84,
      "summary": "aggrTopN函数用于对排序后的前top个元素进行聚合计算。",
      "keywords": [
        "aggrTopN",
        "聚合函数",
        "排序",
        "TopN"
      ],
      "hypothetical_question": "如何在DolphinDB中对排序后的前top个元素进行聚合计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/ho_funcs/any.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/ho_funcs/any.md",
      "start_line": 1,
      "end_line": 122,
      "summary": "any高阶函数用于检查函数应用到参数的每个元素时是否至少有一个返回true，支持向量、矩阵和表的不同数据形式。",
      "keywords": [
        "any",
        "高阶函数",
        "向量",
        "矩阵",
        "表"
      ],
      "hypothetical_question": "DolphinDB中如何使用any高阶函数检查向量、矩阵或表中是否存在满足条件的元素？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/ho_funcs/accumulate.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/ho_funcs/accumulate.md",
      "start_line": 1,
      "end_line": 222,
      "summary": "DolphinDB 的 accumulate 高阶函数用于迭代计算并返回所有中间结果，支持一元、二元和三元函数，并提供多种结果合并规则。",
      "keywords": [
        "accumulate",
        "高阶函数",
        "迭代计算",
        "DolphinDB",
        "结果合并规则"
      ],
      "hypothetical_question": "DolphinDB 中的 accumulate 函数如何使用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/h/histogram2d.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/h/histogram2d.md",
      "start_line": 1,
      "end_line": 89,
      "summary": "介绍了DolphinDB中histogram2d函数的语法、参数、返回值及示例，用于计算两组数据样本的二维直方图。",
      "keywords": [
        "histogram2d",
        "二维直方图",
        "数据样本",
        "分箱",
        "概率密度"
      ],
      "hypothetical_question": "如何在DolphinDB中使用histogram2d函数计算两组数据样本的二维直方图？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/ho_funcs/all.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/ho_funcs/all.md",
      "start_line": 1,
      "end_line": 123,
      "summary": "DolphinDB的'all'高阶函数用于对向量、矩阵或表的元素应用指定函数，并在所有应用结果均为true时返回true，否则返回false。",
      "keywords": [
        "all",
        "高阶函数",
        "向量",
        "矩阵",
        "表"
      ],
      "hypothetical_question": "DolphinDB中的'all'高阶函数有什么作用，如何使用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/ho_funcs/byColumn.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/ho_funcs/byColumn.md",
      "start_line": 1,
      "end_line": 254,
      "summary": "byColumn函数用于对矩阵、表、元组等数据结构的每一列应用指定的单目或双目函数，支持向量函数和聚合函数，并详细说明了其计算规则和返回值。",
      "keywords": [
        "byColumn",
        "矩阵运算",
        "聚合函数",
        "向量函数"
      ],
      "hypothetical_question": "如何在DolphinDB中对矩阵的每一列应用自定义函数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/ho_funcs/byRow.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/ho_funcs/byRow.md",
      "start_line": 1,
      "end_line": 186,
      "summary": "byRow函数用于对矩阵、表、元组、数组向量或列式元组的每一行应用指定函数，支持单目和双目函数操作，并返回相应的结果。",
      "keywords": [
        "byRow",
        "行计算",
        "矩阵操作",
        "聚合函数"
      ],
      "hypothetical_question": "如何在DolphinDB中对矩阵的每一行应用一个函数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/ho_funcs/composition.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/ho_funcs/composition.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "复合函数是由两个函数组合而成的新函数，DolphinDB中通过compose函数实现，可提高代码可读性和简化逻辑表达。",
      "keywords": [
        "复合函数",
        "compose",
        "DolphinDB",
        "函数组合",
        "代码简化"
      ],
      "hypothetical_question": "如何在DolphinDB中创建复合函数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/ho_funcs/call.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/ho_funcs/call.md",
      "start_line": 1,
      "end_line": 37,
      "summary": "介绍DolphinDB中的call函数，用于以指定参数调用函数，并常与each/peach或loop/ploop结合使用。",
      "keywords": [
        "call",
        "函数调用",
        "each",
        "peach",
        "部分应用"
      ],
      "hypothetical_question": "在DolphinDB中如何使用call函数调用函数并与其他高阶函数结合使用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/ho_funcs/contextby.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/ho_funcs/contextby.md",
      "start_line": 1,
      "end_line": 150,
      "summary": "contextby 是 DolphinDB 中的一个高阶函数，用于根据分组列进行分组并在组内进行指定计算，返回与输入参数长度相同的向量。",
      "keywords": [
        "contextby",
        "分组计算",
        "高阶函数",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在 DolphinDB 中使用 contextby 函数进行分组计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/ho_funcs/eachLeft.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/ho_funcs/eachLeft.md",
      "start_line": 1,
      "end_line": 140,
      "summary": "eachLeft函数用于将二元函数应用到第一个参数的每个元素上，支持多种数据类型和结果合并规则。",
      "keywords": [
        "eachLeft",
        "高阶函数",
        "DolphinDB",
        "向量操作",
        "结果合并"
      ],
      "hypothetical_question": "DolphinDB中的eachLeft函数如何使用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/ho_funcs/each.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/ho_funcs/each.md",
      "start_line": 1,
      "end_line": 291,
      "summary": "DolphinDB的each高阶函数用于将指定函数或运算符应用到输入对象的每个元素，支持多种数据类型和并行计算。",
      "keywords": [
        "each",
        "高阶函数",
        "并行计算",
        "DolphinDB",
        "向量化操作"
      ],
      "hypothetical_question": "如何在DolphinDB中使用each函数对向量、矩阵或字典中的每个元素应用指定函数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/ho_funcs/eachPost.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/ho_funcs/eachPost.md",
      "start_line": 1,
      "end_line": 110,
      "summary": "介绍了DolphinDB中的高阶函数eachPost的语法、参数、详情及示例，用于将给定函数或运算符应用到所有相邻的数据对上。",
      "keywords": [
        "eachPost",
        "高阶函数",
        "DolphinDB",
        "参数",
        "示例"
      ],
      "hypothetical_question": "DolphinDB中的eachPost函数如何使用及其参数有哪些？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/ho_funcs/cross.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/ho_funcs/cross.md",
      "start_line": 1,
      "end_line": 170,
      "summary": "介绍了DolphinDB中的cross高阶函数，用于对两个数据对象（如向量或矩阵）的元素进行两两组合的函数调用，并返回结果矩阵或元组。",
      "keywords": [
        "cross",
        "高阶函数",
        "矩阵运算",
        "向量运算"
      ],
      "hypothetical_question": "在DolphinDB中如何使用cross函数对两个向量或矩阵进行元素间的两两运算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/ho_funcs/eachPre.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/ho_funcs/eachPre.md",
      "start_line": 1,
      "end_line": 159,
      "summary": "DolphinDB高阶函数eachPre的语法、参数、详情及示例，用于将函数/运算符应用于相邻数据对。",
      "keywords": [
        "eachPre",
        "高阶函数",
        "DolphinDB",
        "assembleRule",
        "相邻数据对"
      ],
      "hypothetical_question": "DolphinDB中eachPre函数的用途和参数有哪些？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/ho_funcs/eachRight.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/ho_funcs/eachRight.md",
      "start_line": 1,
      "end_line": 136,
      "summary": "eachRight函数用于将二元函数应用到第二个参数的每个元素上，支持多种数据类型和结果合并规则。",
      "keywords": [
        "eachRight",
        "高阶函数",
        "DolphinDB",
        "向量操作",
        "结果合并"
      ],
      "hypothetical_question": "如何在DolphinDB中使用eachRight函数对第二个参数的每个元素应用二元函数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/ho_funcs/ho_funcs.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/ho_funcs/ho_funcs.md",
      "start_line": 1,
      "end_line": 117,
      "summary": "DolphinDB高阶函数介绍及其语法、应用场景和分解组装规则。",
      "keywords": [
        "高阶函数",
        "DolphinDB",
        "语法"
      ],
      "hypothetical_question": "DolphinDB中的高阶函数有哪些应用场景和语法规则？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/ho_funcs/loop.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/ho_funcs/loop.md",
      "start_line": 1,
      "end_line": 66,
      "summary": "loop高阶函数与each类似，但总是返回Tuple，适用于处理不同数据类型的子任务结果。",
      "keywords": [
        "loop",
        "高阶函数",
        "Tuple",
        "each",
        "ploop"
      ],
      "hypothetical_question": "DolphinDB中loop高阶函数与each有什么区别？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/ho_funcs/groupby.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/ho_funcs/groupby.md",
      "start_line": 1,
      "end_line": 80,
      "summary": "DolphinDB中的groupby函数用于对数据进行分组并在每个分组中应用指定函数进行计算。",
      "keywords": [
        "groupby",
        "分组计算",
        "DolphinDB函数",
        "数据聚合"
      ],
      "hypothetical_question": "如何在DolphinDB中使用groupby函数对数据进行分组计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/ho_funcs/pcross.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/ho_funcs/pcross.md",
      "start_line": 1,
      "end_line": 18,
      "summary": "pcross是DolphinDB中并行计算版本的cross高阶函数。",
      "keywords": [
        "pcross",
        "并行计算",
        "cross",
        "高阶函数",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中的pcross函数是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/ho_funcs/moving.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/ho_funcs/moving.md",
      "start_line": 1,
      "end_line": 168,
      "summary": "DolphinDB中的moving高阶函数用于对给定对象的滚动窗口应用聚合函数，支持多种参数类型和窗口长度设置。",
      "keywords": [
        "moving",
        "高阶函数",
        "滑动窗口",
        "聚合函数",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用moving高阶函数对数据进行滑动窗口计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/ho_funcs/nullCompare.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/ho_funcs/nullCompare.md",
      "start_line": 1,
      "end_line": 60,
      "summary": "nullCompare函数用于比较涉及NULL值的表达式，不受nullAsMinValueForComparison配置影响，返回布尔值或NULL。",
      "keywords": [
        "nullCompare",
        "NULL值比较",
        "DolphinDB函数"
      ],
      "hypothetical_question": "在DolphinDB中如何比较涉及NULL值的表达式而不受nullAsMinValueForComparison配置影响？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/ho_funcs/pcall.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/ho_funcs/pcall.md",
      "start_line": 1,
      "end_line": 35,
      "summary": "pcall函数用于将输入参数分成部分并行计算并合并结果，适用于大规模数据计算。",
      "keywords": [
        "pcall",
        "并行计算",
        "函数",
        "参数",
        "性能优化"
      ],
      "hypothetical_question": "如何在DolphinDB中使用pcall函数进行并行计算以提高性能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/ho_funcs/peach.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/ho_funcs/peach.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "peach是DolphinDB中并行计算版本的each高阶函数，适用于执行时间较长的任务以提高效率。",
      "keywords": [
        "peach",
        "并行计算",
        "高阶函数",
        "DolphinDB"
      ],
      "hypothetical_question": "在DolphinDB中，peach函数与each函数相比有什么优势？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/ho_funcs/ploop.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/ho_funcs/ploop.md",
      "start_line": 1,
      "end_line": 11,
      "summary": "ploop是loop函数的并行版本，用于并行执行函数。",
      "keywords": [
        "ploop",
        "并行",
        "loop",
        "函数",
        "语法"
      ],
      "hypothetical_question": "ploop是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/ho_funcs/pivot.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/ho_funcs/pivot.md",
      "start_line": 1,
      "end_line": 134,
      "summary": "DolphinDB的pivot函数用于在指定的二维维度上重组数据，结果为一个矩阵，支持对数据进行分组和聚合操作。",
      "keywords": [
        "pivot",
        "矩阵重组",
        "数据分组",
        "聚合函数"
      ],
      "hypothetical_question": "如何在DolphinDB中使用pivot函数对数据进行二维重组和聚合计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/ho_funcs/rolling.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/ho_funcs/rolling.md",
      "start_line": 1,
      "end_line": 190,
      "summary": "rolling高阶函数用于在滑动窗口或滚动窗口上应用聚合函数或向量函数，支持自定义步长和窗口长度。",
      "keywords": [
        "rolling",
        "滑动窗口",
        "聚合函数",
        "向量函数",
        "步长"
      ],
      "hypothetical_question": "DolphinDB中如何使用rolling函数在滑动窗口上应用聚合函数或向量函数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/ho_funcs/reduce.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/ho_funcs/reduce.md",
      "start_line": 1,
      "end_line": 176,
      "summary": "DolphinDB中的reduce函数是一个高阶函数，用于对输入数据应用指定的函数并返回最后一个结果，支持不同的参数类型和结果合并规则。",
      "keywords": [
        "reduce",
        "高阶函数",
        "DolphinDB",
        "accumulate",
        "assembleRule"
      ],
      "hypothetical_question": "DolphinDB中的reduce函数如何使用，它支持哪些参数和结果合并规则？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/ho_funcs/rowgroupby.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/ho_funcs/rowgroupby.md",
      "start_line": 1,
      "end_line": 91,
      "summary": "rowGroupby函数用于对分组列进行分组并在每个分组内应用聚合函数，支持多种输出形式。",
      "keywords": [
        "rowGroupby",
        "分组聚合",
        "DolphinDB",
        "聚合函数",
        "分组列"
      ],
      "hypothetical_question": "如何在DolphinDB中使用rowGroupby函数对数据进行分组聚合并指定输出形式？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/ho_funcs/segmentby.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/ho_funcs/segmentby.md",
      "start_line": 1,
      "end_line": 51,
      "summary": "segmentby函数根据分组向量将参数分组并应用指定函数，返回与分组向量长度相同的结果。",
      "keywords": [
        "segmentby",
        "分组",
        "函数应用",
        "累计和",
        "止损回测"
      ],
      "hypothetical_question": "如何在DolphinDB中使用segmentby函数对数据进行分组并应用指定函数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/ho_funcs/talib.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/ho_funcs/talib.md",
      "start_line": 1,
      "end_line": 38,
      "summary": "talib函数在DolphinDB中用于模拟python TA-lib对NULL值的处理方式，与DolphinDB内置滑动窗口函数处理NULL值的方式不同。",
      "keywords": [
        "talib",
        "NULL值处理",
        "滑动窗口",
        "DolphinDB",
        "TA-lib"
      ],
      "hypothetical_question": "DolphinDB中talib函数与内置滑动窗口函数在NULL值处理上有何区别？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/ho_funcs/unifiedCall.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/ho_funcs/unifiedCall.md",
      "start_line": 1,
      "end_line": 52,
      "summary": "unifiedCall函数用于通过tuple参数调用指定函数，适用于批量函数调用场景。",
      "keywords": [
        "unifiedCall",
        "函数调用",
        "tuple参数",
        "批量处理"
      ],
      "hypothetical_question": "如何在DolphinDB中通过tuple参数统一调用函数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/ho_funcs/twindow.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/ho_funcs/twindow.md",
      "start_line": 1,
      "end_line": 167,
      "summary": "twindow函数用于在DolphinDB中应用聚合函数到滑动窗口，支持多种参数配置和边界处理规则。",
      "keywords": [
        "twindow",
        "滑动窗口",
        "聚合函数",
        "边界处理",
        "excludedPeriod"
      ],
      "hypothetical_question": "如何在DolphinDB中使用twindow函数进行滑动窗口计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/ho_funcs/tmoving.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/ho_funcs/tmoving.md",
      "start_line": 1,
      "end_line": 99,
      "summary": "tmoving 高阶函数用于在给定对象的滚动窗口上应用函数或运算符，返回与输入参数长度相同的向量。",
      "keywords": [
        "tmoving",
        "滚动窗口",
        "高阶函数"
      ],
      "hypothetical_question": "DolphinDB 中的 tmoving 函数有什么作用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/ho_funcs/window.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/ho_funcs/window.md",
      "start_line": 1,
      "end_line": 112,
      "summary": "DolphinDB的window函数用于在滑动窗口上应用聚合函数，支持灵活的窗口定义，包括整型和DURATION类型的范围参数。",
      "keywords": [
        "window函数",
        "滑动窗口",
        "聚合函数",
        "DURATION类型",
        "索引矩阵"
      ],
      "hypothetical_question": "DolphinDB中的window函数如何使用，它和moving函数有什么区别？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/ifNull.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/ifNull.md",
      "start_line": 1,
      "end_line": 48,
      "summary": "ifNull函数用于判断X是否为空，若为空则返回Y的值，否则返回X的值，支持标量、数据对、向量或矩阵类型。",
      "keywords": [
        "ifNull",
        "NULL值处理",
        "条件判断"
      ],
      "hypothetical_question": "DolphinDB中ifNull函数的作用是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/ifValid.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/ifValid.md",
      "start_line": 1,
      "end_line": 45,
      "summary": "ifValid函数用于检查X是否非空，若非空则返回X，否则返回Y，支持多种数据类型。",
      "keywords": [
        "ifValid",
        "NULL处理",
        "条件返回"
      ],
      "hypothetical_question": "DolphinDB中如何实现当X为空时返回Y的功能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/ho_funcs/withNullFill.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/ho_funcs/withNullFill.md",
      "start_line": 1,
      "end_line": 66,
      "summary": "DolphinDB的withNullFill函数用于在双目运算中用指定值填充NULL值进行计算。",
      "keywords": [
        "withNullFill",
        "DolphinDB",
        "NULL填充",
        "双目运算",
        "矩阵运算"
      ],
      "hypothetical_question": "在DolphinDB中如何用指定值填充NULL值进行双目运算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/ifirstNot.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/ifirstNot.md",
      "start_line": 1,
      "end_line": 63,
      "summary": "ifirstNot函数用于返回向量、元组、矩阵或表中第一个非空元素的下标。",
      "keywords": [
        "ifirstNot",
        "非空元素",
        "下标",
        "DolphinDB"
      ],
      "hypothetical_question": "在DolphinDB中，如何找到向量或矩阵中第一个非空元素的下标？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/iif.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/iif.md",
      "start_line": 1,
      "end_line": 102,
      "summary": "DolphinDB的iif函数是一个元素级条件运算符，根据条件返回trueResult或falseResult中的相应元素。",
      "keywords": [
        "iif",
        "条件运算符",
        "元素级操作",
        "布尔条件",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中的iif函数是如何根据条件选择返回值的？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/ifirstHit.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/ifirstHit.md",
      "start_line": 1,
      "end_line": 44,
      "summary": "ifirstHit函数用于返回向量、矩阵或表中第一个满足指定关系条件的元素的下标，若无满足条件则返回-1。",
      "keywords": [
        "ifirstHit",
        "关系运算符",
        "下标查找"
      ],
      "hypothetical_question": "如何在DolphinDB中查找第一个满足特定条件的元素的下标？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/ilike.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/ilike.md",
      "start_line": 1,
      "end_line": 39,
      "summary": "介绍DolphinDB中的ilike函数，用于不区分大小写的字符串模式匹配。",
      "keywords": [
        "ilike",
        "字符串匹配",
        "不区分大小写",
        "通配符"
      ],
      "hypothetical_question": "如何在DolphinDB中进行不区分大小写的字符串模式匹配？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/imax.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/imax.md",
      "start_line": 1,
      "end_line": 57,
      "summary": "imax函数用于返回向量、矩阵或表中最大值的位置，对于空向量返回-1。",
      "keywords": [
        "imax",
        "最大值位置",
        "向量",
        "矩阵",
        "表"
      ],
      "hypothetical_question": "如何在DolphinDB中获取向量或矩阵中最大值的位置？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/ilastNot.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/ilastNot.md",
      "start_line": 1,
      "end_line": 63,
      "summary": "ilastNot函数用于返回向量、元组、矩阵或表中最后一个非空元素的下标。",
      "keywords": [
        "ilastNot",
        "非空元素",
        "下标",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中查找最后一个非空元素的下标？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/imaxlast.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/imaxlast.md",
      "start_line": 1,
      "end_line": 40,
      "summary": "imaxLast函数用于返回向量、矩阵或表中最大值的位置，若有多个相同最大值则返回右起第一个的位置。",
      "keywords": [
        "imaxLast",
        "最大值位置",
        "向量",
        "矩阵",
        "表"
      ],
      "hypothetical_question": "如何在DolphinDB中获取向量中最大值的位置，如果有多个相同最大值时返回最右边的位置？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/imin.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/imin.md",
      "start_line": 1,
      "end_line": 51,
      "summary": "imin函数用于返回向量、矩阵或表中最小元素的位置，忽略NULL值。",
      "keywords": [
        "imin",
        "最小值",
        "位置",
        "聚合函数",
        "DolphinDB"
      ],
      "hypothetical_question": "在DolphinDB中，如何找到向量或矩阵中最小元素的位置？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/iminlast.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/iminlast.md",
      "start_line": 1,
      "end_line": 40,
      "summary": "iminLast函数用于返回向量、矩阵或表中最小元素的位置，若有多个相同最小值则返回右起第一个的位置。",
      "keywords": [
        "iminLast",
        "最小值位置",
        "聚合函数"
      ],
      "hypothetical_question": "在DolphinDB中，如何找到向量或矩阵中最小元素的位置，如果有多个相同最小值如何处理？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/imr.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/imr.md",
      "start_line": 1,
      "end_line": 70,
      "summary": "DolphinDB的`imr`函数是一个基于map-reduce方法的迭代计算函数，用于处理需要多次迭代更新的模型参数估计。",
      "keywords": [
        "imr",
        "map-reduce",
        "迭代计算",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中的`imr`函数是如何进行迭代计算的？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/imtForceGCRedolog.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/imtForceGCRedolog.md",
      "start_line": 1,
      "end_line": 20,
      "summary": "imtForceGCRedolog函数用于强制回收已完成事务的redo log，跳过未刷盘的事务，以便继续回收后续满足条件的事务。",
      "keywords": [
        "imtForceGCRedolog",
        "redo log",
        "事务回收",
        "刷盘"
      ],
      "hypothetical_question": "如何使用imtForceGCRedolog函数强制回收已完成事务的redo log？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/imtUpdateChunkVersionOnDataNode.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/imtUpdateChunkVersionOnDataNode.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "该文档介绍了函数imtUpdateChunkVersionOnDataNode的语法、参数及用途，用于修改数据节点上指定chunk的版本号以维护一致性。",
      "keywords": [
        "imtUpdateChunkVersionOnDataNode",
        "chunkId",
        "version"
      ],
      "hypothetical_question": "如何在DolphinDB中修改数据节点上指定chunk的版本号？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/int.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/int.md",
      "start_line": 1,
      "end_line": 49,
      "summary": "int函数用于将输入数据转换为INT类型，并说明了其参数、返回值及最大值限制。",
      "keywords": [
        "int",
        "数据类型转换",
        "最大值"
      ],
      "hypothetical_question": "如何将数据转换为INT类型，并了解其最大值限制？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/initcap.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/initcap.md",
      "start_line": 1,
      "end_line": 42,
      "summary": "initcap函数用于将字符串中由分隔符分隔的每个部分的第一个英文字符大写，其余小写。",
      "keywords": [
        "initcap",
        "字符串处理",
        "大小写转换"
      ],
      "hypothetical_question": "如何将字符串中每个单词的首字母大写，其余字母小写？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/int128.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/int128.md",
      "start_line": 1,
      "end_line": 28,
      "summary": "int128函数用于将字符串转换为INT128类型。",
      "keywords": [
        "int128",
        "字符串转换",
        "INT128类型"
      ],
      "hypothetical_question": "如何将字符串转换为INT128类型？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/indexedSeries.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/indexedSeries.md",
      "start_line": 1,
      "end_line": 95,
      "summary": "介绍了DolphinDB中的indexedSeries函数，用于创建有索引的序列，并支持与向量、矩阵等进行基于索引对齐的运算。",
      "keywords": [
        "indexedSeries",
        "索引序列",
        "面板数据对齐"
      ],
      "hypothetical_question": "如何在DolphinDB中创建和使用索引序列进行数据对齐运算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/indexedTable.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/indexedTable.md",
      "start_line": 1,
      "end_line": 267,
      "summary": "DolphinDB中的indexedTable函数用于创建具有主键索引的内存表，支持高效查询和更新操作。",
      "keywords": [
        "indexedTable",
        "主键索引",
        "内存表",
        "查询优化",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中创建和使用带有主键索引的内存表以提高查询性能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/in.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/in.md",
      "start_line": 1,
      "end_line": 100,
      "summary": "该文档详细介绍了DolphinDB中的`in`函数，包括其语法、参数、使用详情及多个示例。",
      "keywords": [
        "in函数",
        "DolphinDB",
        "数据查询",
        "条件筛选",
        "数据类型"
      ],
      "hypothetical_question": "DolphinDB中的`in`函数如何使用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/integral.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/integral.md",
      "start_line": 1,
      "end_line": 66,
      "summary": "DolphinDB的integral函数用于计算一元或二元函数在指定范围内的积分，支持标量和向量输入，并可处理无穷边界。",
      "keywords": [
        "integral",
        "DolphinDB",
        "数值积分",
        "函数计算",
        "无穷边界"
      ],
      "hypothetical_question": "如何在DolphinDB中计算一元或二元函数在指定范围内的积分？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/initimoltpcheckpointencryption.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/initimoltpcheckpointencryption.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "该函数用于初始化IMOLTP库表的数据静态加密，支持多种加密方式且仅适用于Linux系统。",
      "keywords": [
        "IMOLTP",
        "数据加密",
        "Linux"
      ],
      "hypothetical_question": "如何在DolphinDB中初始化IMOLTP库表的数据静态加密？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/installPlugin.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/installPlugin.md",
      "start_line": 1,
      "end_line": 47,
      "summary": "installPlugin函数用于下载并解压指定插件的二进制文件和描述文件到DolphinDB的插件目录，返回描述文件的完整路径以便后续加载插件。",
      "keywords": [
        "installPlugin",
        "插件",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中安装插件并获取插件描述文件的路径？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/invBeta.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/invBeta.md",
      "start_line": 1,
      "end_line": 28,
      "summary": "介绍DolphinDB中的invBeta函数，用于计算Beta分布累积密度函数的逆函数值。",
      "keywords": [
        "invBeta",
        "Beta分布",
        "逆函数",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中计算Beta分布累积密度函数的逆函数值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/invChiSquare.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/invChiSquare.md",
      "start_line": 1,
      "end_line": 29,
      "summary": "介绍DolphinDB中的invChiSquare函数，用于计算卡方分布的累计密度函数的逆函数值。",
      "keywords": [
        "invChiSquare",
        "卡方分布",
        "逆函数",
        "自由度"
      ],
      "hypothetical_question": "如何在DolphinDB中计算卡方分布的累计密度函数的逆函数值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/interpolate.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/interpolate.md",
      "start_line": 1,
      "end_line": 88,
      "summary": "介绍DolphinDB中的interpolate函数，用于填充数值型向量中的缺失值，支持多种插值方法和参数配置。",
      "keywords": [
        "interpolate",
        "缺失值填充",
        "线性插值",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用interpolate函数填充数值型向量中的缺失值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/invBinomial.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/invBinomial.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "介绍DolphinDB中的invBinomial函数，用于计算二项分布的累计密度函数的逆函数值。",
      "keywords": [
        "invBinomial",
        "二项分布",
        "累计密度函数",
        "逆函数"
      ],
      "hypothetical_question": "如何在DolphinDB中计算二项分布的累计密度函数的逆函数值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/intersection.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/intersection.md",
      "start_line": 1,
      "end_line": 31,
      "summary": "介绍了DolphinDB中intersection函数的语法、参数、功能及示例，包括集合交集和位运算AND操作。",
      "keywords": [
        "intersection",
        "集合",
        "位运算",
        "AND",
        "DolphinDB"
      ],
      "hypothetical_question": "在DolphinDB中，如何使用intersection函数计算两个集合的交集或进行位运算AND操作？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/invExp.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/invExp.md",
      "start_line": 1,
      "end_line": 28,
      "summary": "介绍DolphinDB中的invExp函数，用于计算指数分布的累计密度函数的逆函数值。",
      "keywords": [
        "invExp",
        "指数分布",
        "累计密度函数",
        "逆函数"
      ],
      "hypothetical_question": "如何在DolphinDB中计算指数分布的累计密度函数的逆函数值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/invF.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/invF.md",
      "start_line": 1,
      "end_line": 28,
      "summary": "介绍DolphinDB中invF函数的语法、参数、功能及使用示例，用于计算F分布累计密度函数的逆函数值。",
      "keywords": [
        "invF",
        "F分布",
        "逆函数",
        "自由度",
        "累计密度函数"
      ],
      "hypothetical_question": "如何在DolphinDB中计算F分布的累计密度函数的逆函数值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/invGamma.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/invGamma.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "介绍DolphinDB中的invGamma函数，用于计算Gamma分布累计密度函数的逆函数值。",
      "keywords": [
        "invGamma",
        "Gamma分布",
        "逆函数"
      ],
      "hypothetical_question": "如何在DolphinDB中计算Gamma分布累计密度函数的逆函数值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/invLogistic.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/invLogistic.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "介绍DolphinDB中的invLogistic函数，用于计算Logistic分布累积密度函数的逆函数值。",
      "keywords": [
        "invLogistic",
        "Logistic分布",
        "逆函数",
        "累积密度函数"
      ],
      "hypothetical_question": "如何在DolphinDB中计算Logistic分布累积密度函数的逆函数值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/invPoisson.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/invPoisson.md",
      "start_line": 1,
      "end_line": 28,
      "summary": "介绍DolphinDB中的invPoisson函数，用于计算泊松分布累计分布函数的逆函数值。",
      "keywords": [
        "invPoisson",
        "泊松分布",
        "逆函数",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中计算泊松分布的累计分布函数的逆函数值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/invNormal.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/invNormal.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "介绍DolphinDB中的invNormal函数，用于计算指定均值和标准差的正态分布的逆累积分布函数值。",
      "keywords": [
        "invNormal",
        "正态分布",
        "逆累积分布函数",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中计算正态分布的逆累积分布函数值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/inverse.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/inverse.md",
      "start_line": 1,
      "end_line": 35,
      "summary": "该文档描述了DolphinDB中inverse函数的语法、参数、功能及使用示例，用于计算矩阵的逆矩阵。",
      "keywords": [
        "inverse",
        "矩阵",
        "逆矩阵",
        "DolphinDB",
        "函数"
      ],
      "hypothetical_question": "如何在DolphinDB中计算矩阵的逆矩阵？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/invStudent.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/invStudent.md",
      "start_line": 1,
      "end_line": 28,
      "summary": "介绍DolphinDB中的invStudent函数，用于计算t分布的累计密度函数的逆函数值。",
      "keywords": [
        "invStudent",
        "t分布",
        "逆函数",
        "自由度"
      ],
      "hypothetical_question": "如何在DolphinDB中计算t分布的累计密度函数的逆函数值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/ipaddr.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/ipaddr.md",
      "start_line": 1,
      "end_line": 29,
      "summary": "ipaddr函数用于将字符串转换为IPv4或IPv6地址的IPADDR类型数据。",
      "keywords": [
        "ipaddr",
        "IPv4",
        "IPv6",
        "IPADDR类型",
        "字符串转换"
      ],
      "hypothetical_question": "如何将字符串转换为IPADDR类型的数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/invUniform.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/invUniform.md",
      "start_line": 1,
      "end_line": 28,
      "summary": "介绍DolphinDB中的invUniform函数，用于计算均匀分布的累计密度函数的逆函数值。",
      "keywords": [
        "invUniform",
        "均匀分布",
        "累计密度函数",
        "逆函数"
      ],
      "hypothetical_question": "如何在DolphinDB中计算均匀分布的累计密度函数的逆函数值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/isAlpha.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/isAlpha.md",
      "start_line": 1,
      "end_line": 35,
      "summary": "isAlpha函数用于判断字符或字符串是否仅包含字母，对于空字符串返回false。",
      "keywords": [
        "isAlpha",
        "字母判断",
        "字符串处理",
        "DolphinDB函数"
      ],
      "hypothetical_question": "DolphinDB中如何判断一个字符串是否仅包含字母？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/invWeibull.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/invWeibull.md",
      "start_line": 1,
      "end_line": 28,
      "summary": "介绍DolphinDB中的invWeibull函数，用于计算Weibull分布的累计密度函数的逆函数值。",
      "keywords": [
        "invWeibull",
        "Weibull分布",
        "累计密度函数",
        "逆函数"
      ],
      "hypothetical_question": "如何在DolphinDB中计算Weibull分布的累计密度函数的逆函数值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/isColumnarTuple.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/isColumnarTuple.md",
      "start_line": 1,
      "end_line": 47,
      "summary": "介绍DolphinDB中isColumnarTuple函数的语法、参数、功能及使用示例。",
      "keywords": [
        "isColumnarTuple",
        "columnar tuple",
        "DolphinDB",
        "元组",
        "函数"
      ],
      "hypothetical_question": "DolphinDB中如何判断一个元组是否是columnar tuple？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/isAlNum.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/isAlNum.md",
      "start_line": 1,
      "end_line": 35,
      "summary": "isAlNum函数用于判断字符或字符串是否仅包含字母或数字。",
      "keywords": [
        "isAlNum",
        "字母数字判断",
        "字符串处理"
      ],
      "hypothetical_question": "如何在DolphinDB中判断一个字符串是否仅包含字母或数字？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/irs.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/irs.md",
      "start_line": 1,
      "end_line": 113,
      "summary": "DolphinDB中的irs函数用于计算浮动利率支付方的利率互换估值，支持多种参数配置和金融日历选项。",
      "keywords": [
        "利率互换",
        "浮动利率",
        "金融估值",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中使用irs函数计算浮动利率支付方的利率互换估值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/isChunkNodeInit.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/isChunkNodeInit.md",
      "start_line": 1,
      "end_line": 8,
      "summary": "isChunkNodeInit是isDataNodeInitialized函数的别名。",
      "keywords": [
        "isChunkNodeInit",
        "isDataNodeInitialized",
        "别名"
      ],
      "hypothetical_question": "isChunkNodeInit函数在DolphinDB中有什么作用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/isDataNodeInitialized.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/isDataNodeInitialized.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "该函数用于检查当前数据节点或计算节点是否已启动完成。",
      "keywords": [
        "isDataNodeInitialized",
        "数据节点",
        "启动状态"
      ],
      "hypothetical_question": "如何检查DolphinDB中的数据节点是否已启动完成？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/isControllerInitialized.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/isControllerInitialized.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "该函数用于检查控制节点是否启动完成，返回布尔值。",
      "keywords": [
        "isControllerInitialized",
        "控制节点",
        "启动状态"
      ],
      "hypothetical_question": "如何检查DolphinDB控制节点是否启动完成？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/isDigit.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/isDigit.md",
      "start_line": 1,
      "end_line": 35,
      "summary": "介绍DolphinDB中的isDigit函数，用于判断字符或字符串是否仅包含数字。",
      "keywords": [
        "isDigit",
        "数字判断",
        "字符串处理",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中判断一个字符串是否仅包含数字？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/isDuplicated.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/isDuplicated.md",
      "start_line": 1,
      "end_line": 89,
      "summary": "介绍DolphinDB中的isDuplicated函数，用于判断向量或元组中是否包含重复值，并可通过keep参数控制处理重复值的方式。",
      "keywords": [
        "isDuplicated",
        "重复值",
        "向量",
        "元组",
        "keep参数"
      ],
      "hypothetical_question": "DolphinDB中如何判断向量或元组中是否包含重复值并控制处理方式？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/isIndexedMatrix.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/isIndexedMatrix.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "介绍DolphinDB函数isIndexedMatrix，用于判断矩阵是否有索引。",
      "keywords": [
        "isIndexedMatrix",
        "矩阵",
        "索引",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中判断一个矩阵是否有索引？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/isIndexedSeries.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/isIndexedSeries.md",
      "start_line": 1,
      "end_line": 29,
      "summary": "介绍DolphinDB函数isIndexedSeries的语法、参数、功能及使用示例。",
      "keywords": [
        "isIndexedSeries",
        "索引序列",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何判断一个单列矩阵是否为有索引的序列？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/isLoggedIn.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/isLoggedIn.md",
      "start_line": 1,
      "end_line": 22,
      "summary": "介绍DolphinDB函数isLoggedIn的语法、参数、功能及使用示例。",
      "keywords": [
        "isLoggedIn",
        "DolphinDB",
        "用户登录",
        "布尔值",
        "函数"
      ],
      "hypothetical_question": "DolphinDB中如何检查用户是否已登录？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/isLower.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/isLower.md",
      "start_line": 1,
      "end_line": 40,
      "summary": "isLower函数用于判断字符串中的字母是否全部为小写。",
      "keywords": [
        "isLower",
        "字符串",
        "小写",
        "判断"
      ],
      "hypothetical_question": "如何判断一个字符串中的所有字母是否都是小写？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/isLeapYear.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/isLeapYear.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "介绍DolphinDB中的isLeapYear函数，用于判断给定日期是否为闰年。",
      "keywords": [
        "isLeapYear",
        "闰年判断",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中判断一个日期是否为闰年？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/isMonotonic.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/isMonotonic.md",
      "start_line": 1,
      "end_line": 7,
      "summary": "isMonotonic是isMonotonicIncreasing函数的别名。",
      "keywords": [
        "isMonotonic",
        "isMonotonicIncreasing",
        "别名"
      ],
      "hypothetical_question": "isMonotonic函数在DolphinDB中有什么作用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/isOrderedDict.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/isOrderedDict.md",
      "start_line": 1,
      "end_line": 33,
      "summary": "该函数用于判断给定的字典对象是否是有序字典。",
      "keywords": [
        "isOrderedDict",
        "字典",
        "有序字典"
      ],
      "hypothetical_question": "如何判断一个字典是否是有序字典？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/isNanInf.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/isNanInf.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "介绍DolphinDB中的isNanInf函数，用于检测DOUBLE类型数据中的NaN或Inf值。",
      "keywords": [
        "isNanInf",
        "NaN",
        "Inf",
        "DOUBLE",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中检测数据中的NaN或Inf值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/isMonthEnd.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/isMonthEnd.md",
      "start_line": 1,
      "end_line": 29,
      "summary": "介绍DolphinDB函数isMonthEnd的语法、参数、功能及示例，用于判断给定日期是否为月末最后一天。",
      "keywords": [
        "isMonthEnd",
        "DolphinDB",
        "日期函数",
        "月末判断"
      ],
      "hypothetical_question": "如何在DolphinDB中判断一个日期是否为月末最后一天？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/isMonotonicDecreasing.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/isMonotonicDecreasing.md",
      "start_line": 1,
      "end_line": 35,
      "summary": "介绍DolphinDB函数isMonotonicDecreasing的语法、参数、功能及使用示例。",
      "keywords": [
        "isMonotonicDecreasing",
        "单调递减",
        "DolphinDB函数",
        "向量判断"
      ],
      "hypothetical_question": "如何在DolphinDB中判断一个向量是否单调递减？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/isNothing.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/isNothing.md",
      "start_line": 1,
      "end_line": 29,
      "summary": "isNothing函数用于检查函数的参数是否被传值，适用于标量或向量。",
      "keywords": [
        "isNothing",
        "VOID",
        "参数检查",
        "函数调用"
      ],
      "hypothetical_question": "在DolphinDB中，如何检查函数的参数是否被传值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/isMonotonicIncreasing.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/isMonotonicIncreasing.md",
      "start_line": 1,
      "end_line": 35,
      "summary": "介绍DolphinDB函数isMonotonicIncreasing的语法、参数、功能及使用示例。",
      "keywords": [
        "isMonotonicIncreasing",
        "单调递增",
        "DolphinDB函数",
        "向量判断"
      ],
      "hypothetical_question": "如何在DolphinDB中判断一个向量是否单调递增？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/isNumeric.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/isNumeric.md",
      "start_line": 1,
      "end_line": 35,
      "summary": "isNumeric函数用于判断字符或字符串是否仅包含数字。",
      "keywords": [
        "isNumeric",
        "数字判断",
        "字符串处理",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中判断一个字符串是否只包含数字？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/isMonthStart.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/isMonthStart.md",
      "start_line": 1,
      "end_line": 29,
      "summary": "该文档描述了DolphinDB中的isMonthStart函数，用于判断给定的日期或时间是否为月初第一天。",
      "keywords": [
        "isMonthStart",
        "DolphinDB",
        "日期函数",
        "月初判断"
      ],
      "hypothetical_question": "如何在DolphinDB中判断一个日期是否为月初第一天？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/isNull.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/isNull.md",
      "start_line": 1,
      "end_line": 63,
      "summary": "该文档介绍了DolphinDB中的isNull函数，用于检查各种数据类型中的NULL值，并返回相应的布尔结果。",
      "keywords": [
        "isNull",
        "NULL值检查",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中检查数据是否为NULL值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/isQuarterEnd.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/isQuarterEnd.md",
      "start_line": 1,
      "end_line": 29,
      "summary": "介绍DolphinDB函数isQuarterEnd的语法、参数、功能及使用示例，用于判断日期是否为季度最后一天。",
      "keywords": [
        "isQuarterEnd",
        "DolphinDB",
        "日期函数",
        "季度最后一天"
      ],
      "hypothetical_question": "如何在DolphinDB中判断一个日期是否为季度最后一天？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/isPeak.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/isPeak.md",
      "start_line": 1,
      "end_line": 69,
      "summary": "isPeak函数用于判断向量、矩阵或表中的元素是否为峰值点，支持严格和非严格模式。",
      "keywords": [
        "isPeak",
        "峰值点",
        "数值型向量",
        "矩阵",
        "表"
      ],
      "hypothetical_question": "如何使用DolphinDB的isPeak函数判断向量或矩阵中的峰值点？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/isTitle.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/isTitle.md",
      "start_line": 1,
      "end_line": 36,
      "summary": "isTitle函数用于判断字符串中每个单词的首字母是否大写且其余字母小写。",
      "keywords": [
        "isTitle",
        "字符串处理",
        "大小写判断"
      ],
      "hypothetical_question": "如何判断一个字符串中的每个单词是否首字母大写且其余字母小写？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/isQuarterStart.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/isQuarterStart.md",
      "start_line": 1,
      "end_line": 29,
      "summary": "介绍DolphinDB函数isQuarterStart的语法、参数、功能及示例，用于判断日期是否为季度第一天。",
      "keywords": [
        "isQuarterStart",
        "季度第一天",
        "DolphinDB函数",
        "日期判断"
      ],
      "hypothetical_question": "如何在DolphinDB中判断一个日期是否为季度第一天？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/isSpace.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/isSpace.md",
      "start_line": 1,
      "end_line": 31,
      "summary": "isSpace函数用于判断字符或字符串是否仅包含空格类字符（如空格、跳格符、回车符或换行符）。",
      "keywords": [
        "isSpace",
        "空格类字符",
        "字符串判断"
      ],
      "hypothetical_question": "如何判断一个字符串是否仅包含空格类字符？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/isUpper.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/isUpper.md",
      "start_line": 1,
      "end_line": 40,
      "summary": "isUpper函数用于判断字符串中的字母是否全部为大写，对于空字符串返回false。",
      "keywords": [
        "isUpper",
        "大写字母",
        "字符串判断",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中判断一个字符串是否全部由大写字母组成？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/isSorted.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/isSorted.md",
      "start_line": 1,
      "end_line": 34,
      "summary": "介绍DolphinDB中的isSorted函数，用于检查向量是否按指定顺序排序。",
      "keywords": [
        "isSorted",
        "排序检查",
        "向量",
        "升序",
        "降序"
      ],
      "hypothetical_question": "如何在DolphinDB中检查一个向量是否按升序或降序排序？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/isValid.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/isValid.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "isValid函数用于检查元素是否为有效数（非NULL值），并返回布尔值结果。",
      "keywords": [
        "isValid",
        "NULL值检查",
        "有效数"
      ],
      "hypothetical_question": "DolphinDB中如何检查一个值是否为有效数（非NULL值）？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/isVoid.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/isVoid.md",
      "start_line": 1,
      "end_line": 10,
      "summary": "比较了 isNull 和 isVoid 函数在处理 NULL 值时的不同输出结果。",
      "keywords": [
        "isNull",
        "isVoid",
        "NULL",
        "函数比较",
        "输出结果"
      ],
      "hypothetical_question": "isNull 和 isVoid 函数在处理 NULL 值时有什么区别？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/isYearEnd.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/isYearEnd.md",
      "start_line": 1,
      "end_line": 29,
      "summary": "该文档介绍了DolphinDB中的isYearEnd函数，用于判断给定日期是否为年末最后一天。",
      "keywords": [
        "isYearEnd",
        "DolphinDB",
        "日期函数",
        "年末判断"
      ],
      "hypothetical_question": "如何在DolphinDB中判断一个日期是否为年末最后一天？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/isValley.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/isValley.md",
      "start_line": 1,
      "end_line": 68,
      "summary": "介绍DolphinDB中的isValley函数，用于判断向量、矩阵或表中的元素是否为谷值点。",
      "keywords": [
        "isValley",
        "谷值点",
        "DolphinDB",
        "数值型向量",
        "矩阵"
      ],
      "hypothetical_question": "如何在DolphinDB中判断一个数值型向量中的谷值点？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/isYearStart.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/isYearStart.md",
      "start_line": 1,
      "end_line": 29,
      "summary": "介绍DolphinDB函数isYearStart的语法、参数、功能及使用示例，用于判断日期是否为年初第一天。",
      "keywords": [
        "isYearStart",
        "DolphinDB",
        "日期函数",
        "年初判断"
      ],
      "hypothetical_question": "如何在DolphinDB中判断一个日期是否为年初第一天？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/isclientauth.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/isclientauth.md",
      "start_line": 1,
      "end_line": 17,
      "summary": "isClientAuth函数用于返回配置项enableClientAuth的布尔值，确定访客用户是否需要登录才能执行脚本。",
      "keywords": [
        "isClientAuth",
        "enableClientAuth",
        "访问控制",
        "登录安全",
        "运维函数"
      ],
      "hypothetical_question": "如何判断DolphinDB中访客用户是否需要登录才能执行脚本？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/isortTop.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/isortTop.md",
      "start_line": 1,
      "end_line": 5,
      "summary": "该文本片段描述了如何基于x和y降序排序后取前3个元素的索引。",
      "keywords": [
        "排序",
        "索引",
        "降序",
        "元素"
      ],
      "hypothetical_question": "如何基于x和y降序排序后取前3个元素的索引？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/j/jsonextract.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/j/jsonextract.md",
      "start_line": 1,
      "end_line": 77,
      "summary": "介绍了DolphinDB中的jsonExtract函数，用于从JSON字符串中提取指定位置的数据并按指定类型返回结果。",
      "keywords": [
        "jsonExtract",
        "JSON",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中从JSON字符串中提取指定位置的数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/isort.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/isort.md",
      "start_line": 1,
      "end_line": 139,
      "summary": "isort函数返回排序后的元素在原始向量中的索引，支持单列或多列排序，并可指定升序或降序。",
      "keywords": [
        "isort",
        "排序",
        "索引",
        "升序",
        "降序"
      ],
      "hypothetical_question": "如何在DolphinDB中获取排序后的元素在原始向量中的索引？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/j/join.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/j/join.md",
      "start_line": 1,
      "end_line": 142,
      "summary": "介绍了DolphinDB中join函数的语法、参数、功能及多种数据类型的合并示例。",
      "keywords": [
        "join",
        "合并",
        "向量",
        "矩阵",
        "表"
      ],
      "hypothetical_question": "DolphinDB中如何使用join函数合并不同类型的数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/isort_.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/isort_.md",
      "start_line": 1,
      "end_line": 35,
      "summary": "介绍DolphinDB中的isort!函数，用于根据指定向量排序另一个向量。",
      "keywords": [
        "isort!",
        "排序",
        "向量",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用isort!函数根据一个向量排序另一个向量？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/i/iterate.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/i/iterate.md",
      "start_line": 1,
      "end_line": 54,
      "summary": "介绍DolphinDB中的iterate函数，用于生成迭代序列，支持不同参数组合和多种计算模式。",
      "keywords": [
        "iterate",
        "迭代序列",
        "DolphinDB",
        "向量计算",
        "斐波那契数列"
      ],
      "hypothetical_question": "DolphinDB中的iterate函数如何使用以及它支持哪些参数组合？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/k/kendall.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/k/kendall.md",
      "start_line": 1,
      "end_line": 70,
      "summary": "该文档详细介绍了DolphinDB中kendall函数的语法、参数、功能及使用示例，用于计算X和Y的Kendall相关性系数。",
      "keywords": [
        "Kendall相关性系数",
        "DolphinDB函数",
        "统计计算"
      ],
      "hypothetical_question": "如何在DolphinDB中计算两个变量之间的Kendall相关性系数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/k/kama.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/k/kama.md",
      "start_line": 1,
      "end_line": 40,
      "summary": "该文档介绍了DolphinDB中的kama函数，用于计算考夫曼自适应移动平均值（Kaufman Adaptive Moving Average）。",
      "keywords": [
        "kama",
        "考夫曼自适应移动平均值",
        "TA-lib",
        "滑动窗口",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中计算考夫曼自适应移动平均值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/k/kernelRidge.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/k/kernelRidge.md",
      "start_line": 1,
      "end_line": 108,
      "summary": "该文档详细介绍了DolphinDB中的kernelRidge函数，包括其语法、参数、功能描述和示例，用于基于核函数和岭回归的正则化技术进行非线性关系建模。",
      "keywords": [
        "kernelRidge",
        "核函数",
        "岭回归",
        "非线性建模"
      ],
      "hypothetical_question": "如何在DolphinDB中使用kernelRidge函数进行非线性关系建模？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/k/kmeans.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/k/kmeans.md",
      "start_line": 1,
      "end_line": 68,
      "summary": "介绍了DolphinDB中的kmeans函数，用于执行K-Means聚类，包括语法、参数、返回结果及示例。",
      "keywords": [
        "kmeans",
        "聚类",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用kmeans函数进行聚类分析？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/k/keys.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/k/keys.md",
      "start_line": 1,
      "end_line": 37,
      "summary": "keys函数用于返回字典的键、数据表的列名或集合的元素作为向量。",
      "keywords": [
        "keys",
        "字典",
        "数据表",
        "集合",
        "向量"
      ],
      "hypothetical_question": "在DolphinDB中如何获取字典的键、数据表的列名或集合的元素？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/k/keyedStreamTable.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/k/keyedStreamTable.md",
      "start_line": 1,
      "end_line": 125,
      "summary": "keyedStreamTable用于创建键值流数据表，支持主键唯一性检查，确保流数据的幂等性写入。",
      "keywords": [
        "keyedStreamTable",
        "主键",
        "流数据表",
        "幂等性"
      ],
      "hypothetical_question": "如何在DolphinDB中创建一个支持主键唯一性检查的流数据表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/k/knn.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/k/knn.md",
      "start_line": 1,
      "end_line": 39,
      "summary": "介绍 DolphinDB 中的 knn 函数，用于通过 K 邻近算法进行训练，支持分类和回归任务。",
      "keywords": [
        "knn",
        "K 邻近算法",
        "分类",
        "回归",
        "闵可夫斯基距离"
      ],
      "hypothetical_question": "DolphinDB 中的 knn 函数如何使用，支持哪些参数和任务类型？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/k/keyedTable.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/k/keyedTable.md",
      "start_line": 1,
      "end_line": 266,
      "summary": "DolphinDB的keyedTable函数用于创建具有主键的内存表，支持高效的单行查询和更新操作，适用于数据缓存和时间序列聚合引擎的输出表。",
      "keywords": [
        "keyedTable",
        "主键",
        "内存表",
        "查询优化",
        "数据缓存"
      ],
      "hypothetical_question": "如何在DolphinDB中创建一个具有主键的内存表并优化查询性能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/k/kroghinterpolate.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/k/kroghinterpolate.md",
      "start_line": 1,
      "end_line": 54,
      "summary": "kroghInterpolate函数用于对一组点集进行多项式插值，并返回指定导数阶数的多项式估值。",
      "keywords": [
        "多项式插值",
        "导数阶数",
        "数值向量"
      ],
      "hypothetical_question": "如何使用DolphinDB的kroghInterpolate函数进行多项式插值并计算指定导数阶数的值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/k/ksTest.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/k/ksTest.md",
      "start_line": 1,
      "end_line": 36,
      "summary": "ksTest函数用于对两个数值向量进行Kolmogorov-Smirnov检验，判断它们是否符合同一分布，并返回包含统计量和p值的字典。",
      "keywords": [
        "Kolmogorov-Smirnov检验",
        "统计量",
        "p值",
        "分布检验"
      ],
      "hypothetical_question": "如何在DolphinDB中对两个数值向量进行Kolmogorov-Smirnov检验？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/k/kroghinterpolatefit.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/k/kroghinterpolatefit.md",
      "start_line": 1,
      "end_line": 82,
      "summary": "kroghInterpolateFit函数用于对一组点集进行多项式插值，并可指定导数阶数，返回包含模型信息和预测函数的字典。",
      "keywords": [
        "多项式插值",
        "导数",
        "预测函数"
      ],
      "hypothetical_question": "如何在DolphinDB中使用kroghInterpolateFit函数进行多项式插值并预测结果？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/k/kurtosis.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/k/kurtosis.md",
      "start_line": 1,
      "end_line": 87,
      "summary": "介绍了DolphinDB中kurtosis函数的语法、参数、计算方法和示例，用于计算数据的峰度。",
      "keywords": [
        "kurtosis",
        "峰度",
        "有偏估计",
        "无偏估计",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中计算数据的峰度？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/lasso.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/lasso.md",
      "start_line": 1,
      "end_line": 67,
      "summary": "该文档详细介绍了DolphinDB中的lasso函数，包括其语法、参数说明、功能详情以及使用示例。",
      "keywords": [
        "lasso",
        "回归估计",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用lasso函数进行回归估计？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/left.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/left.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "left函数用于返回字符串或字符串向量左边指定数量的字符。",
      "keywords": [
        "left",
        "字符串",
        "字符提取",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中提取字符串的前几个字符？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/lassoBasic.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/lassoBasic.md",
      "start_line": 1,
      "end_line": 129,
      "summary": "该文档详细介绍了DolphinDB中的lassoBasic函数，用于进行lasso回归估计，包括其语法、参数说明和示例。",
      "keywords": [
        "lasso回归",
        "DolphinDB",
        "统计模型"
      ],
      "hypothetical_question": "如何在DolphinDB中使用lassoBasic函数进行lasso回归估计？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/last.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/last.md",
      "start_line": 1,
      "end_line": 55,
      "summary": "last函数用于返回向量、矩阵或表的最后一个元素或最后一行。",
      "keywords": [
        "last",
        "向量",
        "矩阵",
        "表",
        "NULL"
      ],
      "hypothetical_question": "如何在DolphinDB中获取向量、矩阵或表的最后一个元素或最后一行？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/lassoCV.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/lassoCV.md",
      "start_line": 1,
      "end_line": 54,
      "summary": "介绍DolphinDB中的lassoCV函数，用于通过五折交叉验证进行lasso回归估计，并输出最优参数对应的模型。",
      "keywords": [
        "lassoCV",
        "交叉验证",
        "回归估计"
      ],
      "hypothetical_question": "如何在DolphinDB中使用lassoCV函数进行五折交叉验证的lasso回归估计？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/latestIndexedTable.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/latestIndexedTable.md",
      "start_line": 1,
      "end_line": 94,
      "summary": "latestIndexedTable函数用于创建带有主键和时间列的索引内存表，支持根据时间戳更新重复主键的记录。",
      "keywords": [
        "latestIndexedTable",
        "索引内存表",
        "时间列",
        "主键"
      ],
      "hypothetical_question": "如何在DolphinDB中创建一个根据时间戳更新重复主键记录的索引内存表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/lastNot.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/lastNot.md",
      "start_line": 1,
      "end_line": 95,
      "summary": "lastNot函数用于返回向量、矩阵或表中最后一个不为NULL或指定值的元素。",
      "keywords": [
        "lastNot",
        "NULL",
        "向量",
        "矩阵",
        "表"
      ],
      "hypothetical_question": "如何在DolphinDB中获取向量中最后一个不为NULL或指定值的元素？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/latestKeyedTable.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/latestKeyedTable.md",
      "start_line": 1,
      "end_line": 95,
      "summary": "latestKeyedTable函数用于创建带有主键和时间列的键值内存表，支持根据时间列更新记录。",
      "keywords": [
        "latestKeyedTable",
        "键值表",
        "时间列",
        "主键",
        "内存表"
      ],
      "hypothetical_question": "如何在DolphinDB中创建一个带有主键和时间列的键值内存表并实现记录更新？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/le.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/le.md",
      "start_line": 1,
      "end_line": 84,
      "summary": "介绍DolphinDB中的le函数或<=操作符，用于比较两个对象是否小于或等于，或检查一个集合是否为另一个的子集。",
      "keywords": [
        "le",
        "比较操作",
        "子集检查",
        "DolphinDB函数",
        "<=操作符"
      ],
      "hypothetical_question": "在DolphinDB中如何使用le函数或<=操作符进行元素比较或子集检查？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/lastWeekOfMonth.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/lastWeekOfMonth.md",
      "start_line": 1,
      "end_line": 63,
      "summary": "该文档详细介绍了DolphinDB中的lastWeekOfMonth函数，包括其语法、参数、功能描述及使用示例。",
      "keywords": [
        "lastWeekOfMonth",
        "DolphinDB",
        "日期函数",
        "参数说明",
        "使用示例"
      ],
      "hypothetical_question": "如何在DolphinDB中使用lastWeekOfMonth函数获取某个月份中最后一个指定星期几的日期？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/latestkeyedstreamtable.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/latestkeyedstreamtable.md",
      "start_line": 1,
      "end_line": 142,
      "summary": "latestKeyedStreamTable 是一个用于创建键值流数据表的函数，它包含主键和时间列，用于根据时间戳判断是否添加新记录。",
      "keywords": [
        "latestKeyedStreamTable",
        "键值流数据表",
        "主键",
        "时间列",
        "时间戳"
      ],
      "hypothetical_question": "如何在 DolphinDB 中使用 latestKeyedStreamTable 函数创建并管理键值流数据表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/lfill.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/lfill.md",
      "start_line": 1,
      "end_line": 45,
      "summary": "lfill函数用于线性填充数值型向量或表中两个非空元素之间的NULL值。",
      "keywords": [
        "lfill",
        "线性填充",
        "NULL值",
        "数值型向量",
        "表"
      ],
      "hypothetical_question": "如何在DolphinDB中使用lfill函数线性填充数值型向量或表中的NULL值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/license.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/license.md",
      "start_line": 1,
      "end_line": 64,
      "summary": "该文档详细介绍了DolphinDB的license函数，包括其语法、参数、返回值及其含义，以及如何显示和验证许可证信息。",
      "keywords": [
        "license",
        "DolphinDB",
        "授权信息",
        "许可证验证",
        "模块"
      ],
      "hypothetical_question": "如何在DolphinDB中查看和验证许可证信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/like.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/like.md",
      "start_line": 1,
      "end_line": 51,
      "summary": "介绍DolphinDB中的like函数，用于区分大小写的字符串模式匹配。",
      "keywords": [
        "like",
        "字符串匹配",
        "通配符",
        "区分大小写",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用like函数进行区分大小写的字符串模式匹配？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/lfill_.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/lfill_.md",
      "start_line": 1,
      "end_line": 46,
      "summary": "lfill!函数用于线性填充数值型向量或表中两个非空元素之间的NULL值。",
      "keywords": [
        "lfill!",
        "线性填充",
        "NULL值",
        "数值型向量",
        "表"
      ],
      "hypothetical_question": "如何在DolphinDB中使用lfill!函数线性填充数值型向量或表中的NULL值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/linearTimeTrend.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/linearTimeTrend.md",
      "start_line": 1,
      "end_line": 41,
      "summary": "DolphinDB中的linearTimeTrend函数用于计算滑动线性回归，返回包含截距和斜率的tuple类。",
      "keywords": [
        "linearTimeTrend",
        "滑动线性回归",
        "截距",
        "斜率",
        "TA-lib"
      ],
      "hypothetical_question": "DolphinDB中如何计算滑动线性回归并获取截距和斜率？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/listAllMarkets.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/listAllMarkets.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "该文档描述了DolphinDB中的listAllMarkets函数，用于获取当前节点所有的交易日历标识。",
      "keywords": [
        "DolphinDB",
        "交易日历",
        "listAllMarkets"
      ],
      "hypothetical_question": "如何在DolphinDB中获取所有交易日历标识？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/linearinterpolatefit.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/linearinterpolatefit.md",
      "start_line": 1,
      "end_line": 77,
      "summary": "DolphinDB的linearInterpolateFit函数用于对一组点集进行线性插值，支持内插和外插两种模式，并返回包含模型信息和预测函数的字典。",
      "keywords": [
        "linearInterpolateFit",
        "线性插值",
        "内插",
        "外插",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中如何使用linearInterpolateFit函数进行线性插值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/linprog.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/linprog.md",
      "start_line": 1,
      "end_line": 93,
      "summary": "linprog函数用于求解线性目标函数在约束条件下的最优解，返回目标函数的最小值及其对应的变量取值。",
      "keywords": [
        "线性规划",
        "最优解",
        "simplex算法",
        "约束条件",
        "目标函数"
      ],
      "hypothetical_question": "如何在DolphinDB中使用linprog函数求解线性规划问题？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/listPluginsByCluster.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/listPluginsByCluster.md",
      "start_line": 1,
      "end_line": 41,
      "summary": "该文档描述了DolphinDB的listPluginsByCluster函数，用于查询指定集群中每个节点上插件的安装情况。",
      "keywords": [
        "listPluginsByCluster",
        "插件管理",
        "集群管理"
      ],
      "hypothetical_question": "如何在DolphinDB中查询集群中每个节点上插件的安装情况？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/listTables.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/listTables.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "listTables函数用于列出分布式数据库中所有表的表名和物理索引名。",
      "keywords": [
        "listTables",
        "分布式数据库",
        "表名",
        "物理索引"
      ],
      "hypothetical_question": "如何在DolphinDB中列出分布式数据库中的所有表及其物理索引名？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/listRemotePlugins.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/listRemotePlugins.md",
      "start_line": 1,
      "end_line": 69,
      "summary": "该文档详细介绍了DolphinDB中listRemotePlugins函数的语法、参数、功能及使用示例，用于查询支持的插件及其版本信息。",
      "keywords": [
        "listRemotePlugins",
        "DolphinDB插件",
        "插件版本信息"
      ],
      "hypothetical_question": "如何在DolphinDB中查询支持的插件及其版本信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/loadBackup.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/loadBackup.md",
      "start_line": 1,
      "end_line": 44,
      "summary": "loadBackup函数用于加载指定分布式表中某个分区的备份数据，需要用户登录后执行。",
      "keywords": [
        "loadBackup",
        "备份数据",
        "分布式表",
        "分区"
      ],
      "hypothetical_question": "如何使用DolphinDB的loadBackup函数加载分布式表中某个分区的备份数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/loadModel.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/loadModel.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "介绍如何使用DolphinDB的loadModel函数从本地文件加载模型并以字典形式返回。",
      "keywords": [
        "loadModel",
        "模型加载",
        "随机森林回归"
      ],
      "hypothetical_question": "如何在DolphinDB中从本地文件加载一个模型？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/loadDistributedInMemoryTable.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/loadDistributedInMemoryTable.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "介绍如何使用loadDistributedInMemoryTable函数加载分布式共享内存表并获取其句柄。",
      "keywords": [
        "loadDistributedInMemoryTable",
        "分布式共享内存表",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中加载分布式共享内存表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/loadNpy.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/loadNpy.md",
      "start_line": 1,
      "end_line": 46,
      "summary": "DolphinDB的loadNpy函数用于读取Python Numpy的npy格式文件并将其转化为DolphinDB的向量或矩阵。",
      "keywords": [
        "loadNpy",
        "npy",
        "Numpy",
        "DolphinDB",
        "二进制文件"
      ],
      "hypothetical_question": "如何在DolphinDB中加载和转换Python Numpy的npy格式文件？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/loadIPCInMemoryTable.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/loadIPCInMemoryTable.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "该函数用于加载跨进程共享内存表并返回其句柄，仅适用于Linux系统。",
      "keywords": [
        "loadIPCInMemoryTable",
        "跨进程共享内存表",
        "Linux"
      ],
      "hypothetical_question": "如何在Linux系统中加载跨进程共享内存表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/loadModule.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/loadModule.md",
      "start_line": 1,
      "end_line": 54,
      "summary": "介绍DolphinDB中的loadModule函数，用于加载模块或插件中的函数作为系统内置函数。",
      "keywords": [
        "loadModule",
        "模块加载",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中加载模块或插件中的函数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/loadMvccTable.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/loadMvccTable.md",
      "start_line": 1,
      "end_line": 40,
      "summary": "介绍如何使用loadMvccTable函数将磁盘上的可并发读写表加载到内存中。",
      "keywords": [
        "loadMvccTable",
        "并发读写",
        "内存表"
      ],
      "hypothetical_question": "如何将磁盘上的可并发读写表加载到内存中？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/loadPlugin.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/loadPlugin.md",
      "start_line": 1,
      "end_line": 107,
      "summary": "介绍如何使用 `loadPlugin` 函数加载 DolphinDB 插件，包括参数、详细说明和示例。",
      "keywords": [
        "loadPlugin",
        "DolphinDB",
        "插件加载"
      ],
      "hypothetical_question": "如何在 DolphinDB 中加载插件？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/loadTable.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/loadTable.md",
      "start_line": 1,
      "end_line": 79,
      "summary": "介绍DolphinDB中loadTable函数的语法、参数、功能及使用示例，用于将数据表加载到内存中。",
      "keywords": [
        "loadTable",
        "DolphinDB",
        "内存加载",
        "分布式数据库",
        "本地磁盘数据库"
      ],
      "hypothetical_question": "如何在DolphinDB中使用loadTable函数加载数据表到内存？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/loadNpz.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/loadNpz.md",
      "start_line": 1,
      "end_line": 65,
      "summary": "DolphinDB的loadNpz函数用于读取Python Numpy的npz格式文件并将其转换为DolphinDB对象，支持多种数据类型转换。",
      "keywords": [
        "loadNpz",
        "npz",
        "DolphinDB",
        "Numpy",
        "数据转换"
      ],
      "hypothetical_question": "如何在DolphinDB中加载和转换Python Numpy的npz文件？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/loadRecord.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/loadRecord.md",
      "start_line": 1,
      "end_line": 73,
      "summary": "介绍了DolphinDB中loadRecord函数的语法、参数、功能及使用示例，用于加载固定字段长度的行式二进制文件到内存中。",
      "keywords": [
        "loadRecord",
        "二进制文件",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中加载固定字段长度的行式二进制文件？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/loadTableBySQL.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/loadTableBySQL.md",
      "start_line": 1,
      "end_line": 39,
      "summary": "loadTableBySQL函数用于将分区表中满足SQL查询条件的记录加载到内存中，返回分区内存表，并介绍了其语法、参数、使用限制及示例。",
      "keywords": [
        "loadTableBySQL",
        "分区表",
        "SQL查询",
        "内存表"
      ],
      "hypothetical_question": "如何使用loadTableBySQL函数从分区表中加载数据到内存？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/loadText.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/loadText.md",
      "start_line": 1,
      "end_line": 387,
      "summary": "DolphinDB的loadText函数用于将CSV格式的数据文件加载到内存表中，支持多种参数配置如分隔符、数据类型、跳过行数等。",
      "keywords": [
        "loadText",
        "CSV",
        "内存表",
        "数据类型",
        "分隔符"
      ],
      "hypothetical_question": "如何在DolphinDB中使用loadText函数加载CSV文件到内存表中？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/loadTextEx.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/loadTextEx.md",
      "start_line": 1,
      "end_line": 238,
      "summary": "loadTextEx函数用于将数据文件加载到DolphinDB数据库中，支持多种分区类型和参数配置。",
      "keywords": [
        "loadTextEx",
        "分区列",
        "TSDB引擎",
        "数组向量",
        "transform参数"
      ],
      "hypothetical_question": "如何在DolphinDB中使用loadTextEx函数将CSV文件加载到分布式数据库中？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/loc.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/loc.md",
      "start_line": 1,
      "end_line": 202,
      "summary": "DolphinDB的loc函数用于通过标签或布尔向量获取矩阵指定的行和列的元素，可选择生成副本或视图。",
      "keywords": [
        "loc",
        "矩阵过滤",
        "布尔向量",
        "索引矩阵",
        "视图"
      ],
      "hypothetical_question": "如何在DolphinDB中使用loc函数过滤矩阵的行和列？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/loadmodulefromscript.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/loadmodulefromscript.md",
      "start_line": 1,
      "end_line": 65,
      "summary": "介绍DolphinDB中的loadModuleFromScript函数，用于解析并加载包含模块定义的字符串，支持模块间的依赖解析。",
      "keywords": [
        "loadModuleFromScript",
        "模块加载",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中加载包含模块定义的字符串并处理模块间的依赖关系？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/localtime.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/localtime.md",
      "start_line": 1,
      "end_line": 29,
      "summary": "localtime函数用于将零时区时间转换为本地时间。",
      "keywords": [
        "localtime",
        "时区转换",
        "时间函数"
      ],
      "hypothetical_question": "如何将零时区时间转换为本地时间？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/lockUser.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/lockUser.md",
      "start_line": 1,
      "end_line": 22,
      "summary": "该文档描述了DolphinDB中管理员锁定特定用户的函数lockUser的语法、参数和使用条件。",
      "keywords": [
        "lockUser",
        "DolphinDB",
        "管理员",
        "用户管理",
        "enhancedSecurityVerification"
      ],
      "hypothetical_question": "如何在DolphinDB中锁定一个用户？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/loess.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/loess.md",
      "start_line": 1,
      "end_line": 50,
      "summary": "loess函数用于根据指定的采样规则对时间向量X进行重采样，并对数值向量Y进行局部回归插值。",
      "keywords": [
        "loess",
        "插值",
        "局部回归",
        "重采样"
      ],
      "hypothetical_question": "如何在DolphinDB中使用loess函数对时间序列数据进行局部回归插值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/log.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/log.md",
      "start_line": 1,
      "end_line": 28,
      "summary": "介绍DolphinDB中的log函数，用于计算自然对数。",
      "keywords": [
        "log",
        "自然对数",
        "DolphinDB",
        "函数"
      ],
      "hypothetical_question": "DolphinDB中如何计算自然对数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/log10.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/log10.md",
      "start_line": 1,
      "end_line": 33,
      "summary": "log10函数用于计算以10为底的X的对数，支持标量、向量、数据对、矩阵或表等多种数据类型。",
      "keywords": [
        "log10",
        "对数",
        "数学函数",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中计算以10为底的对数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/log2.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/log2.md",
      "start_line": 1,
      "end_line": 33,
      "summary": "介绍DolphinDB中的log2函数，用于计算以2为底的对数，支持多种输入类型。",
      "keywords": [
        "log2",
        "对数",
        "DolphinDB",
        "函数",
        "计算"
      ],
      "hypothetical_question": "如何在DolphinDB中计算以2为底的对数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/logout.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/logout.md",
      "start_line": 1,
      "end_line": 34,
      "summary": "DolphinDB的logout函数用于用户退出登录，可以指定用户ID和会话范围。",
      "keywords": [
        "logout",
        "用户管理",
        "会话控制"
      ],
      "hypothetical_question": "如何在DolphinDB中使用logout函数退出用户登录？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/log1p.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/log1p.md",
      "start_line": 1,
      "end_line": 33,
      "summary": "log1p函数用于计算log(1+X)的值，支持多种输入类型。",
      "keywords": [
        "log1p",
        "对数函数",
        "数学运算",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中计算log(1+X)的值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/long.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/long.md",
      "start_line": 1,
      "end_line": 50,
      "summary": "该文档详细介绍了DolphinDB中的long函数，用于将任意数据类型转换为LONG类型，并提供了相关示例和注意事项。",
      "keywords": [
        "long",
        "数据类型转换",
        "DolphinDB",
        "LONG类型",
        "最大值"
      ],
      "hypothetical_question": "在DolphinDB中如何将数据转换为LONG类型？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/logisticRegression.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/logisticRegression.md",
      "start_line": 1,
      "end_line": 81,
      "summary": "该文档详细介绍了DolphinDB中logisticRegression函数的语法、参数、功能及使用示例，用于计算逻辑回归模型。",
      "keywords": [
        "logisticRegression",
        "DolphinDB",
        "逻辑回归"
      ],
      "hypothetical_question": "如何在DolphinDB中使用logisticRegression函数进行逻辑回归分析？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/lower.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/lower.md",
      "start_line": 1,
      "end_line": 29,
      "summary": "lower函数用于将字符串或字符串列表中的所有字符转换为小写。",
      "keywords": [
        "lower",
        "字符串转换",
        "小写"
      ],
      "hypothetical_question": "如何在DolphinDB中将字符串转换为小写？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/lowDouble.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/lowDouble.md",
      "start_line": 1,
      "end_line": 34,
      "summary": "lowDouble函数用于返回16字节数据类型X的低位8字节数据，结果为DOUBLE类型。",
      "keywords": [
        "lowDouble",
        "DOUBLE类型",
        "16字节数据",
        "复数实部"
      ],
      "hypothetical_question": "在DolphinDB中，如何获取16字节数据类型的低位8字节数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/login.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/login.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "DolphinDB的login函数用于用户登录，包括用户名和密码的格式要求，以及安全验证配置。",
      "keywords": [
        "login",
        "DolphinDB",
        "用户认证",
        "密码策略",
        "安全验证"
      ],
      "hypothetical_question": "DolphinDB中如何使用login函数进行用户登录以及有哪些安全验证配置？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/lowRange.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/lowRange.md",
      "start_line": 1,
      "end_line": 59,
      "summary": "lowRange函数用于统计序列中每个元素左侧连续大于它的元素个数，常用于金融数据分析如股票创几日新低。",
      "keywords": [
        "lowRange",
        "金融分析",
        "序列统计",
        "最小值统计"
      ],
      "hypothetical_question": "如何使用DolphinDB的lowRange函数计算股票价格创几日新低？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/lowerbound.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/lowerbound.md",
      "start_line": 1,
      "end_line": 40,
      "summary": "lowerBound函数用于返回X中第一个不小于Y中每个元素的元素下标，若未找到则返回X的长度。",
      "keywords": [
        "lowerBound",
        "元素下标",
        "递增向量"
      ],
      "hypothetical_question": "在DolphinDB中，如何找到向量X中第一个不小于Y中每个元素的元素下标？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/lowlong.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/lowlong.md",
      "start_line": 1,
      "end_line": 35,
      "summary": "lowLong函数用于返回16字节数据类型（如UUID、IPADDR等）的低位8字节数据，结果为LONG类型。",
      "keywords": [
        "lowLong",
        "LONG类型",
        "16字节数据类型"
      ],
      "hypothetical_question": "如何获取16字节数据类型的低位8字节数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/lt.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/lt.md",
      "start_line": 1,
      "end_line": 3,
      "summary": "说明x不是x的真子集。",
      "keywords": [
        "子集",
        "真子集",
        "集合"
      ],
      "hypothetical_question": "x是否是x的真子集？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/lpad.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/lpad.md",
      "start_line": 1,
      "end_line": 36,
      "summary": "lpad函数用于在字符串左侧填充指定字符或空格以达到指定长度。",
      "keywords": [
        "lpad",
        "字符串填充",
        "DolphinDB函数",
        "字符串处理",
        "左侧填充"
      ],
      "hypothetical_question": "如何在DolphinDB中使用lpad函数对字符串进行左侧填充？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/ltrim.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/ltrim.md",
      "start_line": 1,
      "end_line": 22,
      "summary": "ltrim函数用于删除字符串或字符串向量中每个元素左边的空格。",
      "keywords": [
        "ltrim",
        "字符串处理",
        "空格删除"
      ],
      "hypothetical_question": "如何删除字符串左边的空格？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/lshift.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/lshift.md",
      "start_line": 1,
      "end_line": 39,
      "summary": "lshift函数用于将数值按二进制展开后左移指定位数，右侧用0填充。",
      "keywords": [
        "lshift",
        "二进制左移",
        "位运算",
        "DolphinDB"
      ],
      "hypothetical_question": "在DolphinDB中如何实现二进制左移操作？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/l/lu.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/l/lu.md",
      "start_line": 1,
      "end_line": 83,
      "summary": "DolphinDB中的lu函数用于实现矩阵的LU分解，返回下三角矩阵、上三角矩阵和置换矩阵。",
      "keywords": [
        "LU分解",
        "矩阵",
        "DolphinDB",
        "置换矩阵",
        "三角矩阵"
      ],
      "hypothetical_question": "如何在DolphinDB中实现矩阵的LU分解？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mad.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mad.md",
      "start_line": 1,
      "end_line": 53,
      "summary": "该文档详细介绍了DolphinDB中的mad函数，用于计算平均绝对离差或绝对中位差，并提供了语法、参数、详情和示例。",
      "keywords": [
        "mad",
        "平均绝对离差",
        "绝对中位差",
        "DolphinDB",
        "聚合函数"
      ],
      "hypothetical_question": "DolphinDB中的mad函数如何计算平均绝对离差和绝对中位差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/ma.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/ma.md",
      "start_line": 1,
      "end_line": 17,
      "summary": "介绍DolphinDB中ma函数的语法、参数和功能，用于计算滑动窗口内X的移动平均。",
      "keywords": [
        "移动平均",
        "ma函数",
        "TA-lib"
      ],
      "hypothetical_question": "DolphinDB中ma函数的参数maType有哪些取值及其对应的计算方法？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/makeCall.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/makeCall.md",
      "start_line": 1,
      "end_line": 70,
      "summary": "makeCall函数用于使用指定参数调用一个函数并生成脚本，但不执行脚本。",
      "keywords": [
        "makeCall",
        "函数调用",
        "脚本生成"
      ],
      "hypothetical_question": "DolphinDB中makeCall函数的作用是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/makeKey.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/makeKey.md",
      "start_line": 1,
      "end_line": 34,
      "summary": "`makeKey`函数将多个标量或向量组合为一个BLOB标量或向量，可用作字典或集合的key。",
      "keywords": [
        "makeKey",
        "BLOB",
        "字典",
        "集合",
        "key"
      ],
      "hypothetical_question": "DolphinDB中如何将多个标量或向量组合成一个可用于字典或集合的key？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/makeSortedKey.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/makeSortedKey.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "`makeSortedKey`函数将多个标量或向量组合为BLOB标量或向量，并保存组合值的排序结果。",
      "keywords": [
        "makeSortedKey",
        "BLOB",
        "排序",
        "向量"
      ],
      "hypothetical_question": "DolphinDB中makeSortedKey函数的作用是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mask.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mask.md",
      "start_line": 1,
      "end_line": 45,
      "summary": "mask函数用于根据布尔条件将X中符合条件的元素替换为NULL。",
      "keywords": [
        "mask",
        "布尔条件",
        "NULL",
        "替换"
      ],
      "hypothetical_question": "如何在DolphinDB中使用mask函数根据条件替换元素为NULL？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/manova.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/manova.md",
      "start_line": 1,
      "end_line": 85,
      "summary": "介绍了DolphinDB中manova函数的语法、参数、功能及使用示例，用于进行多因素方差分析。",
      "keywords": [
        "manova",
        "多因素方差分析",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用manova函数进行多因素方差分析？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mannWhitneyUTest.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mannWhitneyUTest.md",
      "start_line": 1,
      "end_line": 43,
      "summary": "该文档详细介绍了DolphinDB中的mannWhitneyUTest函数，包括其语法、参数、返回结果及使用示例。",
      "keywords": [
        "Mann-Whitney U test",
        "非参数检验",
        "统计检验"
      ],
      "hypothetical_question": "DolphinDB中如何进行Mann-Whitney U检验？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/matchall.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/matchall.md",
      "start_line": 1,
      "end_line": 36,
      "summary": "matchAll函数用于在SQL的WHERE子句中匹配PKEY存储引擎中设置了文本索引的列，返回符合所有指定词的行。",
      "keywords": [
        "matchAll",
        "文本索引",
        "SQL",
        "PKEY存储引擎"
      ],
      "hypothetical_question": "如何在DolphinDB中使用matchAll函数匹配包含多个词的文本行？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/makeUnifiedCall.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/makeUnifiedCall.md",
      "start_line": 1,
      "end_line": 92,
      "summary": "makeUnifiedCall函数用于生成调用指定函数及其参数的脚本，但不执行该脚本，支持从版本2.00.11.3起传入元代码标量作为参数。",
      "keywords": [
        "makeUnifiedCall",
        "函数调用",
        "脚本生成",
        "元代码"
      ],
      "hypothetical_question": "DolphinDB中makeUnifiedCall函数的作用是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/matchphraseinfix.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/matchphraseinfix.md",
      "start_line": 1,
      "end_line": 40,
      "summary": "matchPhraseInfix函数用于在SQL查询中匹配特定短语，且该短语前后分别有特定后缀和前缀的单词。",
      "keywords": [
        "matchPhraseInfix",
        "文本索引",
        "SQL查询",
        "短语匹配"
      ],
      "hypothetical_question": "如何在DolphinDB中使用matchPhraseInfix函数匹配特定前后缀的短语？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/matchphrase.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/matchphrase.md",
      "start_line": 1,
      "end_line": 35,
      "summary": "matchPhrase函数用于在SQL的WHERE子句中匹配PKEY存储引擎中设置了文本索引的列，返回包含指定短语的行。",
      "keywords": [
        "matchPhrase",
        "文本索引",
        "PKEY存储引擎",
        "SQL查询",
        "短语匹配"
      ],
      "hypothetical_question": "如何在DolphinDB中使用matchPhrase函数查询包含特定短语的行？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/matchany.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/matchany.md",
      "start_line": 1,
      "end_line": 42,
      "summary": "matchAny 函数用于在 SQL 语句的 WHERE 子句中，对 PKEY 存储引擎中设置了文本索引的列进行文本匹配，返回符合任一指定匹配词的行。",
      "keywords": [
        "matchAny",
        "文本索引",
        "SQL",
        "PKEY 存储引擎"
      ],
      "hypothetical_question": "如何在 DolphinDB 中使用 matchAny 函数进行多词文本匹配？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/matchprefixsuffix.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/matchprefixsuffix.md",
      "start_line": 1,
      "end_line": 42,
      "summary": "matchPrefixSuffix函数用于在SQL的WHERE子句中，对PKEY存储引擎中设置了文本索引的列进行前缀和后缀匹配查询。",
      "keywords": [
        "matchPrefixSuffix",
        "文本索引",
        "前缀后缀匹配",
        "PKEY存储引擎",
        "SQL查询"
      ],
      "hypothetical_question": "如何在DolphinDB中使用matchPrefixSuffix函数进行前缀和后缀匹配查询？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/matchprefix.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/matchprefix.md",
      "start_line": 1,
      "end_line": 39,
      "summary": "matchPrefix函数用于在SQL语句的WHERE子句中，针对PKEY存储引擎中设置文本索引的列进行前缀匹配，返回包含指定前缀的行。",
      "keywords": [
        "matchPrefix",
        "PKEY存储引擎",
        "文本索引",
        "前缀匹配",
        "SQL"
      ],
      "hypothetical_question": "如何在DolphinDB中使用matchPrefix函数进行文本列的前缀匹配查询？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/matchphraseprefix.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/matchphraseprefix.md",
      "start_line": 1,
      "end_line": 38,
      "summary": "matchPhrasePrefix函数用于在SQL的WHERE子句中匹配包含特定短语且短语后跟特定前缀单词的文本行。",
      "keywords": [
        "matchPhrasePrefix",
        "文本索引",
        "SQL查询",
        "短语匹配",
        "前缀匹配"
      ],
      "hypothetical_question": "如何在DolphinDB中使用matchPhrasePrefix函数查找包含特定短语且短语后跟特定前缀的文本行？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/matchphrasesuffix.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/matchphrasesuffix.md",
      "start_line": 1,
      "end_line": 38,
      "summary": "matchPhraseSuffix函数用于在SQL的WHERE子句中匹配包含特定短语且短语前是特定后缀单词的文本行。",
      "keywords": [
        "matchPhraseSuffix",
        "文本索引",
        "SQL查询",
        "PKEY存储引擎"
      ],
      "hypothetical_question": "如何在DolphinDB中使用matchPhraseSuffix函数匹配特定后缀和短语的文本行？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/matchspan.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/matchspan.md",
      "start_line": 1,
      "end_line": 39,
      "summary": "matchSpan函数用于在PKEY存储引擎的文本索引列中匹配包含指定短语的行，允许短语前后或内部有不超过指定数量的其他词汇。",
      "keywords": [
        "matchSpan",
        "PKEY存储引擎",
        "文本索引",
        "短语匹配",
        "slop"
      ],
      "hypothetical_question": "如何在DolphinDB中使用matchSpan函数匹配包含特定短语的行？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/matchsuffix.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/matchsuffix.md",
      "start_line": 1,
      "end_line": 41,
      "summary": "matchSuffix函数用于在SQL语句的WHERE子句中，对PKEY存储引擎中设置了文本索引的列进行后缀匹配，返回包含指定后缀的行。",
      "keywords": [
        "matchSuffix",
        "PKEY存储引擎",
        "文本索引",
        "后缀匹配",
        "SQL函数"
      ],
      "hypothetical_question": "如何在DolphinDB中使用matchSuffix函数进行文本后缀匹配查询？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/matchunorderedspan.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/matchunorderedspan.md",
      "start_line": 1,
      "end_line": 40,
      "summary": "介绍DolphinDB中的matchUnorderedSpan函数，用于在SQL查询中匹配包含指定短语的行，忽略单词顺序并允许一定数量的其他词汇。",
      "keywords": [
        "matchUnorderedSpan",
        "文本索引",
        "SQL查询",
        "短语匹配",
        "PKEY存储引擎"
      ],
      "hypothetical_question": "如何在DolphinDB中使用matchUnorderedSpan函数进行不严格顺序的短语匹配？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/matrix.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/matrix.md",
      "start_line": 1,
      "end_line": 140,
      "summary": "DolphinDB中matrix函数的语法、参数、使用详情及示例。",
      "keywords": [
        "matrix",
        "DolphinDB",
        "数据类型",
        "向量",
        "矩阵"
      ],
      "hypothetical_question": "DolphinDB中如何使用matrix函数创建和操作矩阵？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mavg.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mavg.md",
      "start_line": 1,
      "end_line": 81,
      "summary": "该文档介绍了DolphinDB中的mavg函数，用于计算滑动窗口或加权滑动窗口的平均值。",
      "keywords": [
        "mavg",
        "滑动窗口",
        "加权平均",
        "DolphinDB",
        "平均值"
      ],
      "hypothetical_question": "如何在DolphinDB中使用mavg函数计算滑动窗口或加权滑动窗口的平均值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/matrixRank.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/matrixRank.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "介绍DolphinDB中的matrixRank函数，用于计算矩阵的秩，包括语法、参数和示例。",
      "keywords": [
        "matrixRank",
        "矩阵秩",
        "DolphinDB",
        "奇异值"
      ],
      "hypothetical_question": "如何在DolphinDB中计算矩阵的秩？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mavgTopN.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mavgTopN.md",
      "start_line": 1,
      "end_line": 116,
      "summary": "mavgTopN函数用于在滑动窗口内根据指定排序方式取前top个元素计算平均值。",
      "keywords": [
        "mavgTopN",
        "滑动窗口",
        "平均值",
        "排序",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用mavgTopN函数计算滑动窗口内前top个元素的平均值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mbeta.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mbeta.md",
      "start_line": 1,
      "end_line": 70,
      "summary": "mbeta函数用于在滑动窗口中计算Y在X上的回归系数的最小二乘估计。",
      "keywords": [
        "mbeta",
        "滑动窗口",
        "回归系数",
        "最小二乘估计"
      ],
      "hypothetical_question": "如何在DolphinDB中使用mbeta函数计算滑动窗口中的回归系数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/max.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/max.md",
      "start_line": 1,
      "end_line": 110,
      "summary": "DolphinDB 的 max 函数用于计算标量、向量、矩阵或表中元素的最大值，支持单参数和双参数调用，并详细说明了不同数据类型和时间类型的处理方式。",
      "keywords": [
        "max",
        "DolphinDB",
        "最大值",
        "时间类型",
        "矩阵"
      ],
      "hypothetical_question": "DolphinDB 中如何使用 max 函数计算向量、矩阵或表中的最大值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/maxPositiveStreak.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/maxPositiveStreak.md",
      "start_line": 1,
      "end_line": 63,
      "summary": "maxPositiveStreak函数用于计算向量或矩阵中连续正数之和的最大值。",
      "keywords": [
        "maxPositiveStreak",
        "连续正数",
        "向量",
        "矩阵",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中计算向量或矩阵中连续正数之和的最大值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/maxdrawdown.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/maxdrawdown.md",
      "start_line": 1,
      "end_line": 56,
      "summary": "该文档详细介绍了DolphinDB中的maxDrawdown函数，用于计算数值向量的最大回撤或最大回撤率。",
      "keywords": [
        "maxDrawdown",
        "最大回撤",
        "聚合函数",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中计算一个投资组合的最大回撤率？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/maxignorenull.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/maxignorenull.md",
      "start_line": 1,
      "end_line": 63,
      "summary": "maxIgnoreNull 是一个二元标量函数，用于返回两个数值型、LITERAL 或 TEMPORAL 型参数中的最大值，忽略空值。",
      "keywords": [
        "maxIgnoreNull",
        "二元标量函数",
        "空值处理",
        "数值比较"
      ],
      "hypothetical_question": "DolphinDB 中如何忽略空值并返回两个参数中的最大值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mbetaTopN.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mbetaTopN.md",
      "start_line": 1,
      "end_line": 72,
      "summary": "mbetaTopN函数用于在滑动窗口内根据指定排序方式取前top个元素后计算Y在X上的回归系数的最小二乘估计。",
      "keywords": [
        "mbetaTopN",
        "回归系数",
        "滑动窗口",
        "最小二乘估计"
      ],
      "hypothetical_question": "如何在DolphinDB中使用mbetaTopN函数计算滑动窗口内前top个元素的回归系数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mcorr.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mcorr.md",
      "start_line": 1,
      "end_line": 71,
      "summary": "介绍DolphinDB中的mcorr函数，用于计算滑动窗口内X和Y元素的相关性。",
      "keywords": [
        "mcorr",
        "滑动窗口",
        "相关性计算",
        "DolphinDB函数",
        "时间序列分析"
      ],
      "hypothetical_question": "如何在DolphinDB中使用mcorr函数计算滑动窗口内两个序列的相关性？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mcount.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mcount.md",
      "start_line": 1,
      "end_line": 98,
      "summary": "mcount函数用于在滑动窗口内统计非NULL元素的数量，支持多种输入类型和窗口参数。",
      "keywords": [
        "mcount",
        "滑动窗口",
        "非NULL元素",
        "统计"
      ],
      "hypothetical_question": "如何在DolphinDB中使用mcount函数统计滑动窗口内的非NULL元素数量？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mdd.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mdd.md",
      "start_line": 1,
      "end_line": 7,
      "summary": "mdd是maxDrawdown函数的别名。",
      "keywords": [
        "mdd",
        "maxDrawdown",
        "别名"
      ],
      "hypothetical_question": "mdd在DolphinDB中代表什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mcorrTopN.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mcorrTopN.md",
      "start_line": 1,
      "end_line": 84,
      "summary": "mcorrTopN函数用于在滑动窗口内根据指定排序方式取前top个元素后计算X和Y的相关性。",
      "keywords": [
        "mcorrTopN",
        "滑动窗口",
        "相关性计算",
        "排序"
      ],
      "hypothetical_question": "如何在DolphinDB中使用mcorrTopN函数计算滑动窗口内前top个元素的相关性？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mcovar.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mcovar.md",
      "start_line": 1,
      "end_line": 74,
      "summary": "mcovar函数用于计算滑动窗口内X和Y元素的协方差。",
      "keywords": [
        "mcovar",
        "滑动窗口",
        "协方差",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中计算滑动窗口内两个向量的协方差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/md5.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/md5.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "介绍DolphinDB中的md5函数，用于根据MD5算法对字符串进行哈希处理，生成INT128类型的数据。",
      "keywords": [
        "md5",
        "哈希",
        "INT128",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用md5函数对字符串进行哈希处理？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mean.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mean.md",
      "start_line": 1,
      "end_line": 57,
      "summary": "mean函数用于计算向量、矩阵或表的平均值，与avg函数功能相同，忽略NULL值。",
      "keywords": [
        "mean",
        "平均值",
        "聚合函数",
        "avg",
        "NULL值"
      ],
      "hypothetical_question": "DolphinDB中如何计算向量、矩阵或表的平均值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mcovarTopN.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mcovarTopN.md",
      "start_line": 1,
      "end_line": 85,
      "summary": "mcovarTopN函数用于在滑动窗口内根据指定排序方式取前top个元素后计算X和Y的协方差。",
      "keywords": [
        "mcovarTopN",
        "滑动窗口",
        "协方差",
        "排序"
      ],
      "hypothetical_question": "如何在DolphinDB中使用mcovarTopN函数计算滑动窗口内前top个元素的协方差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/med.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/med.md",
      "start_line": 1,
      "end_line": 46,
      "summary": "DolphinDB中的med函数用于计算向量或矩阵中元素的中值，忽略NULL值并返回DOUBLE类型结果。",
      "keywords": [
        "med",
        "中值",
        "DolphinDB",
        "聚合函数",
        "NULL值"
      ],
      "hypothetical_question": "DolphinDB中如何计算向量或矩阵的中值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mem.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mem.md",
      "start_line": 1,
      "end_line": 45,
      "summary": "介绍DolphinDB的mem函数，用于显示和释放本地节点内存使用情况。",
      "keywords": [
        "mem",
        "内存使用",
        "allocatedBytes",
        "freeBytes",
        "freeUnusedBlocks"
      ],
      "hypothetical_question": "如何在DolphinDB中查看和释放本地节点的内存使用情况？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/member.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/member.md",
      "start_line": 1,
      "end_line": 54,
      "summary": "介绍DolphinDB中member函数的语法、参数、功能及使用示例，用于访问表或字典的成员/属性。",
      "keywords": [
        "member",
        "DolphinDB",
        "表",
        "字典",
        "属性"
      ],
      "hypothetical_question": "如何在DolphinDB中访问表或字典的成员或属性？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/memSize.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/memSize.md",
      "start_line": 1,
      "end_line": 39,
      "summary": "memSize函数用于返回本地对象或共享对象占用的内存大小，单位为字节。",
      "keywords": [
        "memSize",
        "内存大小",
        "共享对象",
        "本地对象"
      ],
      "hypothetical_question": "DolphinDB中如何获取对象占用的内存大小？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/membermodify.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/membermodify.md",
      "start_line": 1,
      "end_line": 140,
      "summary": "介绍DolphinDB中的memberModify!函数，用于修改元组、ANY字典或OOP对象的成员。",
      "keywords": [
        "memberModify!",
        "元组",
        "字典",
        "OOP",
        "修改成员"
      ],
      "hypothetical_question": "如何在DolphinDB中修改元组或字典的成员对象？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/merge.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/merge.md",
      "start_line": 1,
      "end_line": 55,
      "summary": "介绍DolphinDB中merge函数的语法、参数、详情及使用示例，用于联结两个索引序列或索引矩阵。",
      "keywords": [
        "merge",
        "索引序列",
        "索引矩阵",
        "联结",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用merge函数联结两个索引序列或索引矩阵？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mfirst.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mfirst.md",
      "start_line": 1,
      "end_line": 70,
      "summary": "DolphinDB的mfirst函数用于在滑动窗口内计算输入数据的第一个元素。",
      "keywords": [
        "mfirst",
        "滑动窗口",
        "DolphinDB",
        "向量计算"
      ],
      "hypothetical_question": "如何在DolphinDB中使用mfirst函数计算滑动窗口内的第一个元素？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/microsecond.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/microsecond.md",
      "start_line": 1,
      "end_line": 29,
      "summary": "microsecond函数用于提取TIME、TIMESTAMP、NANOTIME或NANOTIMESTAMP类型数据中的微秒数。",
      "keywords": [
        "microsecond",
        "时间函数",
        "微秒"
      ],
      "hypothetical_question": "如何在DolphinDB中提取时间数据中的微秒数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/milastNot.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/milastNot.md",
      "start_line": 1,
      "end_line": 60,
      "summary": "milastNot函数用于在滑动窗口内计算X的最后一个非空元素的下标。",
      "keywords": [
        "milastNot",
        "滑动窗口",
        "非空元素",
        "下标"
      ],
      "hypothetical_question": "如何在DolphinDB中使用milastNot函数计算滑动窗口内最后一个非空元素的下标？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mifirstNot.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mifirstNot.md",
      "start_line": 1,
      "end_line": 61,
      "summary": "mifirstNot函数用于在滑动窗口内计算第一个非空元素的下标。",
      "keywords": [
        "mifirstNot",
        "滑动窗口",
        "非空元素",
        "下标"
      ],
      "hypothetical_question": "如何在DolphinDB中使用mifirstNot函数找到滑动窗口内的第一个非空元素的下标？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mfirstnot.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mfirstnot.md",
      "start_line": 1,
      "end_line": 94,
      "summary": "mfirstNot函数用于在滑动窗口内查找向量、矩阵或表中第一个不为NULL或指定值k的元素。",
      "keywords": [
        "mfirstNot",
        "滑动窗口",
        "NULL处理",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中使用mfirstNot函数查找滑动窗口内第一个不为NULL或指定值的元素？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/migrate.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/migrate.md",
      "start_line": 1,
      "end_line": 129,
      "summary": "DolphinDB的migrate函数用于恢复数据库中已备份的数据，支持多种恢复方式，并返回恢复结果的表。",
      "keywords": [
        "migrate",
        "备份恢复",
        "DolphinDB",
        "数据库"
      ],
      "hypothetical_question": "如何在DolphinDB中使用migrate函数恢复已备份的数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/millisecond.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/millisecond.md",
      "start_line": 1,
      "end_line": 29,
      "summary": "millisecond函数用于返回TIME、TIMESTAMP、NANOTIME或NANOTIMESTAMP类型数据中的毫秒数。",
      "keywords": [
        "millisecond",
        "时间函数",
        "毫秒",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中获取时间数据中的毫秒部分？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mimin.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mimin.md",
      "start_line": 1,
      "end_line": 99,
      "summary": "mimin函数用于在滑动窗口内计算向量、矩阵或表中最小元素的位置，忽略NULL值，并支持多种输入类型和参数配置。",
      "keywords": [
        "mimin",
        "滑动窗口",
        "最小值位置",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用mimin函数计算滑动窗口内最小元素的位置？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/min.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/min.md",
      "start_line": 1,
      "end_line": 106,
      "summary": "DolphinDB中的min函数用于计算标量、向量、矩阵或表中的最小值，支持单参数或双参数输入，并详细说明了不同情况下的返回值及时间类型数据的处理方式。",
      "keywords": [
        "min函数",
        "最小值计算",
        "时间类型处理",
        "DolphinDB",
        "参数比较"
      ],
      "hypothetical_question": "DolphinDB中的min函数如何使用，支持哪些参数类型和返回值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/miminlast.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/miminlast.md",
      "start_line": 1,
      "end_line": 70,
      "summary": "miminLast函数用于在滑动窗口内计算最小元素的位置，返回右起第一个最小值的位置。",
      "keywords": [
        "miminLast",
        "滑动窗口",
        "最小值位置",
        "聚合函数"
      ],
      "hypothetical_question": "如何在DolphinDB中使用miminLast函数计算滑动窗口内最小元素的位置？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mimaxlast.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mimaxlast.md",
      "start_line": 1,
      "end_line": 69,
      "summary": "mimaxLast函数用于在滑动窗口内计算向量或矩阵中最大元素的位置，若存在多个相同最大值则返回右起第一个的位置。",
      "keywords": [
        "mimaxLast",
        "滑动窗口",
        "最大值位置"
      ],
      "hypothetical_question": "如何在DolphinDB中使用mimaxLast函数找到滑动窗口内最大元素的位置？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mimax.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mimax.md",
      "start_line": 1,
      "end_line": 103,
      "summary": "mimax函数用于在滑动窗口内计算向量、矩阵或表中最大元素的位置，忽略NULL值，并支持多种输入类型和窗口参数。",
      "keywords": [
        "mimax",
        "滑动窗口",
        "最大值位置",
        "DolphinDB函数",
        "聚合函数"
      ],
      "hypothetical_question": "如何在DolphinDB中使用mimax函数计算滑动窗口内最大元素的位置？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/minute.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/minute.md",
      "start_line": 1,
      "end_line": 41,
      "summary": "minute函数用于返回给定时间或整数的分钟数。",
      "keywords": [
        "minute",
        "时间函数",
        "分钟数"
      ],
      "hypothetical_question": "如何使用DolphinDB的minute函数获取时间的分钟数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/minuteOfHour.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/minuteOfHour.md",
      "start_line": 1,
      "end_line": 29,
      "summary": "介绍DolphinDB中的minuteOfHour函数，用于提取时间类型数据中的分钟数。",
      "keywords": [
        "minuteOfHour",
        "时间函数",
        "分钟数"
      ],
      "hypothetical_question": "如何在DolphinDB中提取时间数据中的分钟数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mkdir.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mkdir.md",
      "start_line": 1,
      "end_line": 42,
      "summary": "介绍DolphinDB中的mkdir函数，用于创建目录，并展示其语法、参数、使用详情及示例。",
      "keywords": [
        "mkdir",
        "目录创建",
        "DolphinDB函数",
        "文件系统"
      ],
      "hypothetical_question": "如何在DolphinDB中使用mkdir函数创建目录？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/minignorenull.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/minignorenull.md",
      "start_line": 1,
      "end_line": 55,
      "summary": "minIgnoreNull 是一个二元标量函数，用于返回两个数中的最小值，忽略空值，与 min 函数在处理空值的方式上有所不同。",
      "keywords": [
        "minIgnoreNull",
        "二元标量函数",
        "最小值",
        "空值处理"
      ],
      "hypothetical_question": "DolphinDB 中 minIgnoreNull 函数的作用是什么，它与 min 函数在处理空值时有什么区别？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mkurtosis.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mkurtosis.md",
      "start_line": 1,
      "end_line": 104,
      "summary": "该文档详细介绍了DolphinDB中的mkurtosis函数，包括其语法、参数、功能描述以及使用示例，用于计算滑动窗口内的峰度。",
      "keywords": [
        "mkurtosis",
        "滑动窗口",
        "峰度",
        "DolphinDB",
        "矩阵计算"
      ],
      "hypothetical_question": "如何在DolphinDB中使用mkurtosis函数计算滑动窗口内的峰度？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mlast.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mlast.md",
      "start_line": 1,
      "end_line": 70,
      "summary": "mlast函数用于在滑动窗口内计算X的最后一个元素，支持多种输入类型和窗口参数。",
      "keywords": [
        "mlast",
        "滑动窗口",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中mlast函数的语法和用法是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mkurtosisTopN.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mkurtosisTopN.md",
      "start_line": 1,
      "end_line": 82,
      "summary": "mkurtosisTopN函数用于在滑动窗口内根据指定排序方式取前top个元素计算峰度。",
      "keywords": [
        "mkurtosisTopN",
        "峰度计算",
        "滑动窗口",
        "排序"
      ],
      "hypothetical_question": "如何在DolphinDB中使用mkurtosisTopN函数计算滑动窗口内前top个元素的峰度？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mlastnot.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mlastnot.md",
      "start_line": 1,
      "end_line": 92,
      "summary": "mlastNot函数用于在滑动窗口内查找最后一个不为指定值或NULL的元素。",
      "keywords": [
        "mlastNot",
        "滑动窗口",
        "NULL处理",
        "向量计算",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中使用mlastNot函数查找滑动窗口内最后一个不为NULL或指定值的元素？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mlowrange.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mlowrange.md",
      "start_line": 1,
      "end_line": 66,
      "summary": "mLowRange函数用于在滑动窗口内统计每个元素左侧相邻且连续大于它的元素个数。",
      "keywords": [
        "mLowRange",
        "滑动窗口",
        "统计",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用mLowRange函数计算滑动窗口内连续大于当前元素的左侧元素个数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mmad.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mmad.md",
      "start_line": 1,
      "end_line": 69,
      "summary": "mmad函数用于在滑动窗口内计算平均绝对离差或绝对中位差。",
      "keywords": [
        "mmad",
        "平均绝对离差",
        "绝对中位差",
        "滑动窗口",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用mmad函数计算滑动窗口内的平均绝对离差或绝对中位差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mmax.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mmax.md",
      "start_line": 1,
      "end_line": 70,
      "summary": "mmax函数用于在滑动窗口内计算元素的最大值，支持多种输入类型和窗口参数。",
      "keywords": [
        "mmax",
        "滑动窗口",
        "最大值",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用mmax函数计算滑动窗口内的最大值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mmse.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mmse.md",
      "start_line": 1,
      "end_line": 54,
      "summary": "mmse函数用于在滑动窗口内进行普通最小二乘回归的系数估计并计算均方误差。",
      "keywords": [
        "mmse",
        "最小二乘回归",
        "滑动窗口",
        "均方误差"
      ],
      "hypothetical_question": "如何在DolphinDB中使用mmse函数进行滑动窗口的最小二乘回归和均方误差计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mmin.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mmin.md",
      "start_line": 1,
      "end_line": 76,
      "summary": "mmin函数用于在滑动窗口内计算元素的最小值，支持多种输入类型和窗口参数。",
      "keywords": [
        "mmin",
        "滑动窗口",
        "最小值",
        "DolphinDB",
        "窗口函数"
      ],
      "hypothetical_question": "如何在DolphinDB中使用mmin函数计算滑动窗口内的最小值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/monthBegin.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/monthBegin.md",
      "start_line": 1,
      "end_line": 53,
      "summary": "monthBegin函数用于返回指定日期所在月份的第一天，并可设置偏移量和间隔月份。",
      "keywords": [
        "monthBegin",
        "日期函数",
        "月份开始"
      ],
      "hypothetical_question": "如何在DolphinDB中获取指定日期所在月份的第一天？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/month.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/month.md",
      "start_line": 1,
      "end_line": 48,
      "summary": "month函数用于从时间标量或向量中提取对应的月份。",
      "keywords": [
        "month",
        "时间函数",
        "DolphinDB"
      ],
      "hypothetical_question": "在DolphinDB中如何从时间数据中提取月份？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mode.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mode.md",
      "start_line": 1,
      "end_line": 57,
      "summary": "mode函数用于计算向量、矩阵或表中出现次数最多的值。",
      "keywords": [
        "mode",
        "聚合函数",
        "hash table",
        "中心趋势"
      ],
      "hypothetical_question": "DolphinDB中如何计算一个向量中出现次数最多的值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mmed.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mmed.md",
      "start_line": 1,
      "end_line": 70,
      "summary": "mmed函数用于在滑动窗口内计算元素的中位数，支持多种输入类型和参数配置。",
      "keywords": [
        "mmed",
        "滑动窗口",
        "中位数",
        "DolphinDB",
        "流计算"
      ],
      "hypothetical_question": "如何在DolphinDB中使用mmed函数计算滑动窗口内的中位数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mmaxPositiveStreak.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mmaxPositiveStreak.md",
      "start_line": 1,
      "end_line": 41,
      "summary": "mmaxPositiveStreak函数用于在滑动窗口内统计连续正数之和的最大值。",
      "keywords": [
        "mmaxPositiveStreak",
        "滑动窗口",
        "连续正数"
      ],
      "hypothetical_question": "如何在DolphinDB中使用mmaxPositiveStreak函数计算滑动窗口内连续正数之和的最大值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mod.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mod.md",
      "start_line": 1,
      "end_line": 71,
      "summary": "DolphinDB中的mod函数用于计算两个参数相除的余数，支持标量、数据对、向量或矩阵，并详细说明了其在不同情况下的行为和应用场景。",
      "keywords": [
        "mod",
        "取模运算",
        "数据分组",
        "DolphinDB",
        "余数"
      ],
      "hypothetical_question": "DolphinDB中的mod函数如何使用，它有哪些特性和应用场景？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/monthEnd.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/monthEnd.md",
      "start_line": 1,
      "end_line": 50,
      "summary": "monthEnd函数用于返回给定日期所在月份的最后一天，并可选择从指定偏移量开始每隔n个月更新结果。",
      "keywords": [
        "monthEnd",
        "日期函数",
        "月份结束"
      ],
      "hypothetical_question": "如何使用DolphinDB的monthEnd函数获取指定日期所在月份的最后一天？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/monthOfYear.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/monthOfYear.md",
      "start_line": 1,
      "end_line": 28,
      "summary": "monthOfYear函数用于返回DATE、MONTH、DATETIME、TIMESTAMP或NANOTIMESTAMP类型数据中的月份。",
      "keywords": [
        "monthOfYear",
        "日期函数",
        "月份提取"
      ],
      "hypothetical_question": "如何在DolphinDB中提取日期或时间数据中的月份？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/moveChunksAcrossVolume.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/moveChunksAcrossVolume.md",
      "start_line": 1,
      "end_line": 39,
      "summary": "该函数用于将磁盘卷中的chunks文件转移到指定路径，并提供了参数说明和注意事项。",
      "keywords": [
        "moveChunksAcrossVolume",
        "chunks转移",
        "磁盘卷"
      ],
      "hypothetical_question": "如何在DolphinDB中将磁盘卷中的chunks文件转移到另一个路径？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/move.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/move.md",
      "start_line": 1,
      "end_line": 61,
      "summary": "DolphinDB中的`move`函数用于将向量、矩阵或表中的元素按指定步数或时间间隔移动位置。",
      "keywords": [
        "move",
        "DolphinDB",
        "向量移动",
        "时间序列"
      ],
      "hypothetical_question": "如何在DolphinDB中将向量或时间序列数据按指定步数或时间间隔移动位置？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/moveReplicas.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/moveReplicas.md",
      "start_line": 1,
      "end_line": 35,
      "summary": "moveReplicas函数用于将源节点上的一个或多个chunk副本移动到目标节点，并可指定目标目录。",
      "keywords": [
        "moveReplicas",
        "chunk",
        "副本移动"
      ],
      "hypothetical_question": "如何在DolphinDB中将chunk副本从一个节点移动到另一个节点？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/movingWindowData.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/movingWindowData.md",
      "start_line": 1,
      "end_line": 56,
      "summary": "介绍了DolphinDB中的movingWindowData函数，用于生成滑动窗口数据的数组向量，并提供了语法、参数、详情和示例。",
      "keywords": [
        "movingWindowData",
        "滑动窗口",
        "数组向量",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用movingWindowData函数生成滑动窗口数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/moveHotDataToColdVolume.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/moveHotDataToColdVolume.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "介绍 moveHotDataToColdVolume 函数的语法、参数和用途，用于强制将指定时间范围内的数据迁移到冷存储卷。",
      "keywords": [
        "moveHotDataToColdVolume",
        "coldVolumes",
        "数据迁移",
        "setRetentionPolicy",
        "TieredStorage"
      ],
      "hypothetical_question": "如何使用 moveHotDataToColdVolume 函数将数据迁移到冷存储卷？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/movingTopNIndex.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/movingTopNIndex.md",
      "start_line": 1,
      "end_line": 85,
      "summary": "介绍DolphinDB函数movingTopNIndex的语法、参数、功能及使用示例，该函数用于返回滑动窗口内按指定顺序排序后的前top个元素的索引。",
      "keywords": [
        "movingTopNIndex",
        "滑动窗口",
        "排序",
        "索引",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用movingTopNIndex函数获取滑动窗口内前top个元素的索引？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/movingWindowIndex.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/movingWindowIndex.md",
      "start_line": 1,
      "end_line": 45,
      "summary": "movingWindowIndex函数用于生成一个数组向量，表示输入向量在每个窗口内的元素索引，支持固定窗口长度选项。",
      "keywords": [
        "movingWindowIndex",
        "窗口函数",
        "数组向量",
        "索引"
      ],
      "hypothetical_question": "如何在DolphinDB中使用movingWindowIndex函数获取向量在滑动窗口内的索引？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mprod.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mprod.md",
      "start_line": 1,
      "end_line": 72,
      "summary": "mprod函数用于在滑动窗口内计算元素的乘积。",
      "keywords": [
        "mprod",
        "滑动窗口",
        "乘积"
      ],
      "hypothetical_question": "如何在DolphinDB中使用mprod函数计算滑动窗口内元素的乘积？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mpercentiletopn.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mpercentiletopn.md",
      "start_line": 1,
      "end_line": 85,
      "summary": "mpercentileTopN函数用于在滑动窗口内对数据进行排序并计算前N个元素的指定百分位数。",
      "keywords": [
        "mpercentileTopN",
        "滑动窗口",
        "百分位数",
        "插值方法"
      ],
      "hypothetical_question": "如何在DolphinDB中使用mpercentileTopN函数计算滑动窗口内前N个元素的百分位数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mpercentile.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mpercentile.md",
      "start_line": 1,
      "end_line": 124,
      "summary": "介绍DolphinDB中mpercentile函数的语法、参数、功能和示例，用于计算滑动窗口内的百分位数。",
      "keywords": [
        "mpercentile",
        "滑动窗口",
        "百分位数",
        "插值方法",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用mpercentile函数计算滑动窗口内的百分位数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mr.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mr.md",
      "start_line": 1,
      "end_line": 63,
      "summary": "DolphinDB的mr函数是一个通用的分布式计算框架核心功能，用于执行Map-Reduce操作，支持并行计算和自定义map、reduce及final函数。",
      "keywords": [
        "Map-Reduce",
        "分布式计算",
        "并行计算",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中如何使用mr函数进行分布式计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mrank.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mrank.md",
      "start_line": 1,
      "end_line": 139,
      "summary": "mrank函数用于在滑动窗口内计算元素的排名，支持多种参数配置如升序/降序、忽略NULL值、处理重复值的方法等。",
      "keywords": [
        "mrank",
        "滑动窗口",
        "排名",
        "NULL值处理",
        "重复值处理"
      ],
      "hypothetical_question": "如何在DolphinDB中使用mrank函数计算滑动窗口内元素的排名？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mskew.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mskew.md",
      "start_line": 1,
      "end_line": 93,
      "summary": "mskew函数用于在滑动窗口内计算向量、矩阵或表的斜度，支持有偏和无偏估计，并提供多种窗口长度选项。",
      "keywords": [
        "mskew",
        "滑动窗口",
        "斜度",
        "有偏估计",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用mskew函数计算滑动窗口内的斜度？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mstdp.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mstdp.md",
      "start_line": 1,
      "end_line": 90,
      "summary": "mstdp函数用于在给定长度的滑动窗口内计算向量、矩阵或表的总体标准差。",
      "keywords": [
        "mstdp",
        "滑动窗口",
        "总体标准差",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用mstdp函数计算滑动窗口内的总体标准差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mstd.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mstd.md",
      "start_line": 1,
      "end_line": 92,
      "summary": "该文档详细介绍了DolphinDB中的mstd函数，用于计算滑动窗口内的样本标准差，并提供了语法、参数说明、使用详情和示例。",
      "keywords": [
        "mstd",
        "滑动窗口",
        "样本标准差",
        "DolphinDB",
        "流计算"
      ],
      "hypothetical_question": "如何在DolphinDB中使用mstd函数计算滑动窗口内的样本标准差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mskewTopN.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mskewTopN.md",
      "start_line": 1,
      "end_line": 84,
      "summary": "mskewTopN函数用于在滑动窗口内根据指定排序方式取前top个元素计算斜度。",
      "keywords": [
        "mskewTopN",
        "滑动窗口",
        "斜度计算",
        "排序"
      ],
      "hypothetical_question": "如何在DolphinDB中使用mskewTopN函数计算滑动窗口内前top个元素的斜度？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mstdTopN.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mstdTopN.md",
      "start_line": 1,
      "end_line": 58,
      "summary": "mstdTopN函数用于在滑动窗口内根据指定排序方式取前top个元素计算样本标准差。",
      "keywords": [
        "mstdTopN",
        "样本标准差",
        "滑动窗口",
        "排序"
      ],
      "hypothetical_question": "如何在DolphinDB中使用mstdTopN函数计算滑动窗口内前top个元素的样本标准差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/msum.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/msum.md",
      "start_line": 1,
      "end_line": 72,
      "summary": "msum函数用于在滑动窗口内计算元素和，支持多种输入类型和参数配置。",
      "keywords": [
        "msum",
        "滑动窗口",
        "元素和",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用msum函数计算滑动窗口内的元素和？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mslr.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mslr.md",
      "start_line": 1,
      "end_line": 34,
      "summary": "mslr函数用于在滑动窗口中对因变量Y和自变量X进行普通最小二乘回归，返回截距和斜率。",
      "keywords": [
        "mslr",
        "最小二乘回归",
        "滑动窗口",
        "截距",
        "斜率"
      ],
      "hypothetical_question": "如何在DolphinDB中使用mslr函数进行滑动窗口的最小二乘回归？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mstdpTopN.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mstdpTopN.md",
      "start_line": 1,
      "end_line": 58,
      "summary": "mstdpTopN函数用于在滑动窗口内根据指定排序方式取前top个元素计算总体标准差。",
      "keywords": [
        "mstdpTopN",
        "滑动窗口",
        "总体标准差",
        "排序"
      ],
      "hypothetical_question": "如何在DolphinDB中使用mstdpTopN函数计算滑动窗口内前top个元素的总体标准差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/msumTopN.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/msumTopN.md",
      "start_line": 1,
      "end_line": 116,
      "summary": "msumTopN函数用于在滑动窗口内根据指定排序方式对数据进行排序后，取前top个元素进行求和计算。",
      "keywords": [
        "msumTopN",
        "滑动窗口",
        "排序",
        "求和",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用msumTopN函数计算滑动窗口内前top个元素的求和？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/msum2.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/msum2.md",
      "start_line": 1,
      "end_line": 57,
      "summary": "msum2函数用于在滑动窗口内计算元素的平方和，支持多种输入类型和参数设置。",
      "keywords": [
        "msum2",
        "滑动窗口",
        "平方和",
        "DolphinDB",
        "流计算"
      ],
      "hypothetical_question": "如何在DolphinDB中使用msum2函数计算滑动窗口内的元素平方和？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mtoprange.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mtoprange.md",
      "start_line": 1,
      "end_line": 64,
      "summary": "mTopRange函数用于在滑动窗口内统计每个元素左侧连续小于它的元素个数。",
      "keywords": [
        "mTopRange",
        "滑动窗口",
        "统计"
      ],
      "hypothetical_question": "DolphinDB中mTopRange函数的作用是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mul.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mul.md",
      "start_line": 1,
      "end_line": 75,
      "summary": "mul函数用于逐个元素地计算X和Y的乘积，支持标量、数据对、向量或矩阵。",
      "keywords": [
        "mul",
        "乘法",
        "矩阵运算",
        "向量运算",
        "数据对"
      ],
      "hypothetical_question": "DolphinDB中如何实现矩阵或向量的逐元素乘法？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/multinomialNB.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/multinomialNB.md",
      "start_line": 1,
      "end_line": 42,
      "summary": "介绍DolphinDB中multinomialNB函数的语法、参数、功能及使用示例。",
      "keywords": [
        "multinomialNB",
        "朴素贝叶斯",
        "分类训练"
      ],
      "hypothetical_question": "如何在DolphinDB中使用multinomialNB函数进行多项式朴素贝叶斯分类训练？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/multiTableRepartitionDS.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/multiTableRepartitionDS.md",
      "start_line": 1,
      "end_line": 79,
      "summary": "multiTableRepartitionDS函数用于使用相同的分区类型和方案对多个表重新划分数据源，返回包含一组数据源的元组。",
      "keywords": [
        "multiTableRepartitionDS",
        "数据源",
        "分区"
      ],
      "hypothetical_question": "如何使用multiTableRepartitionDS函数对多个表进行数据源重新划分？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mvarTopN.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mvarTopN.md",
      "start_line": 1,
      "end_line": 58,
      "summary": "mvarTopN函数用于在滑动窗口内根据指定排序方式选取前top个元素计算样本方差。",
      "keywords": [
        "mvarTopN",
        "样本方差",
        "滑动窗口",
        "排序"
      ],
      "hypothetical_question": "如何在DolphinDB中使用mvarTopN函数计算滑动窗口内前top个元素的样本方差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mvar.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mvar.md",
      "start_line": 1,
      "end_line": 94,
      "summary": "DolphinDB中的mvar函数用于在滑动窗口内计算样本方差。",
      "keywords": [
        "mvar",
        "滑动窗口",
        "样本方差",
        "DolphinDB",
        "窗口计算"
      ],
      "hypothetical_question": "如何在DolphinDB中使用mvar函数计算滑动窗口内的样本方差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mutualInfo.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mutualInfo.md",
      "start_line": 1,
      "end_line": 62,
      "summary": "DolphinDB中的mutualInfo函数用于计算X和Y的互信息，支持标量、向量和矩阵输入，并提供了计算示例。",
      "keywords": [
        "mutualInfo",
        "DolphinDB",
        "互信息",
        "矩阵计算"
      ],
      "hypothetical_question": "如何在DolphinDB中计算两个变量或矩阵的互信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mvarp.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mvarp.md",
      "start_line": 1,
      "end_line": 90,
      "summary": "该文档详细介绍了DolphinDB中的mvarp函数，用于计算滑动窗口内的总体方差，并提供了语法、参数、详情及示例。",
      "keywords": [
        "mvarp",
        "滑动窗口",
        "总体方差",
        "DolphinDB",
        "函数"
      ],
      "hypothetical_question": "如何在DolphinDB中使用mvarp函数计算滑动窗口内的总体方差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mwavg.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mwavg.md",
      "start_line": 1,
      "end_line": 77,
      "summary": "mwavg函数用于在滑动窗口内以Y为权重计算X的加权平均值。",
      "keywords": [
        "mwavg",
        "滑动窗口",
        "加权平均",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用mwavg函数计算滑动窗口内的加权平均值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mwsum.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mwsum.md",
      "start_line": 1,
      "end_line": 84,
      "summary": "mwsum函数用于在滑动窗口内计算X和Y元素的内积。",
      "keywords": [
        "mwsum",
        "滑动窗口",
        "内积",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用mwsum函数计算滑动窗口内X和Y元素的内积？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mvarpTopN.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mvarpTopN.md",
      "start_line": 1,
      "end_line": 58,
      "summary": "mvarpTopN函数用于在滑动窗口内根据指定排序方式选取前N个元素计算总体方差。",
      "keywords": [
        "mvarpTopN",
        "滑动窗口",
        "总体方差",
        "排序"
      ],
      "hypothetical_question": "如何在DolphinDB中使用mvarpTopN函数计算滑动窗口内前N个元素的总体方差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mwsumTopN.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mwsumTopN.md",
      "start_line": 1,
      "end_line": 77,
      "summary": "mwsumTopN函数在滑动窗口内根据排序规则取前top个元素后计算Y和X的内积。",
      "keywords": [
        "mwsumTopN",
        "滑动窗口",
        "内积",
        "排序"
      ],
      "hypothetical_question": "如何在DolphinDB中使用mwsumTopN函数计算滑动窗口内前top个元素的内积？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/n/nanosecond.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/n/nanosecond.md",
      "start_line": 1,
      "end_line": 29,
      "summary": "nanosecond函数用于提取时间类型数据中的纳秒部分。",
      "keywords": [
        "nanosecond",
        "时间函数",
        "纳秒"
      ],
      "hypothetical_question": "如何在DolphinDB中获取时间数据中的纳秒部分？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/m/mvccTable.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/m/mvccTable.md",
      "start_line": 1,
      "end_line": 172,
      "summary": "介绍了DolphinDB中mvccTable函数的语法、参数、详情及使用示例，用于创建多版本并发控制的表。",
      "keywords": [
        "mvccTable",
        "多版本并发控制",
        "DolphinDB",
        "内存表",
        "分区表"
      ],
      "hypothetical_question": "如何在DolphinDB中创建和使用多版本并发控制的表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/n/nanotime.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/n/nanotime.md",
      "start_line": 1,
      "end_line": 44,
      "summary": "nanotime函数用于将整型或时间类型的输入转换为NANOTIME类型的纳秒时间表示。",
      "keywords": [
        "nanotime",
        "NANOTIME",
        "时间转换",
        "纳秒"
      ],
      "hypothetical_question": "如何将整型或时间类型的数据转换为NANOTIME类型的纳秒时间？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/n/nanInfFill.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/n/nanInfFill.md",
      "start_line": 1,
      "end_line": 32,
      "summary": "nanInfFill函数用于替换DolphinDB中的NaN和Inf特殊值为指定的浮点数。",
      "keywords": [
        "nanInfFill",
        "NaN",
        "Inf",
        "浮点数",
        "替换"
      ],
      "hypothetical_question": "如何在DolphinDB中替换NaN和Inf值为指定的浮点数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/n/nanotimestamp.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/n/nanotimestamp.md",
      "start_line": 1,
      "end_line": 65,
      "summary": "nanotimestamp函数用于返回由日期和精确到纳秒的时间组成的时间戳，支持多种输入类型，包括整型和时间类型。",
      "keywords": [
        "nanotimestamp",
        "NANOTIMESTAMP",
        "时间戳",
        "纳秒"
      ],
      "hypothetical_question": "DolphinDB中如何生成一个精确到纳秒的时间戳？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/n/neville.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/n/neville.md",
      "start_line": 1,
      "end_line": 43,
      "summary": "该文档详细介绍了DolphinDB中的neville函数，用于对时间序列数据进行重采样和Neville插值操作。",
      "keywords": [
        "neville",
        "插值",
        "重采样",
        "时间序列"
      ],
      "hypothetical_question": "如何在DolphinDB中使用neville函数对时间序列数据进行重采样和插值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/n/ne.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/n/ne.md",
      "start_line": 1,
      "end_line": 86,
      "summary": "介绍DolphinDB中的ne函数（不等于操作符），包括其语法、参数、详细说明和示例。",
      "keywords": [
        "ne",
        "不等于",
        "比较操作",
        "集合操作",
        "DolphinDB"
      ],
      "hypothetical_question": "在DolphinDB中如何使用ne函数进行不等于比较？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/n/next.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/n/next.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "next函数用于将向量左移一个位置，左侧元素被移除。",
      "keywords": [
        "next",
        "向量",
        "左移",
        "DolphinDB"
      ],
      "hypothetical_question": "在DolphinDB中如何将向量左移一个位置？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/n/neg.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/n/neg.md",
      "start_line": 1,
      "end_line": 55,
      "summary": "介绍DolphinDB中的neg函数，用于返回输入值的相反数，并比较其与运算符'-'的优先级差异。",
      "keywords": [
        "neg",
        "相反数",
        "优先级",
        "运算符",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中的neg函数和运算符'-'有什么区别？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/n/nextState.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/n/nextState.md",
      "start_line": 1,
      "end_line": 42,
      "summary": "nextState函数用于返回向量或矩阵中每个元素的下一状态，处理连续相同元素和空值的情况。",
      "keywords": [
        "nextState",
        "状态转换",
        "向量处理",
        "矩阵处理"
      ],
      "hypothetical_question": "DolphinDB中nextState函数的作用是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/n/normal.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/n/normal.md",
      "start_line": 1,
      "end_line": 7,
      "summary": "normal是norm的别名。",
      "keywords": [
        "normal",
        "norm",
        "别名"
      ],
      "hypothetical_question": "normal在DolphinDB中是什么的别名？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/n/norm.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/n/norm.md",
      "start_line": 1,
      "end_line": 43,
      "summary": "介绍DolphinDB中的norm函数，用于生成服从正态分布的随机数向量或矩阵。",
      "keywords": [
        "norm",
        "正态分布",
        "随机数",
        "向量",
        "矩阵"
      ],
      "hypothetical_question": "如何在DolphinDB中生成服从正态分布的随机数向量或矩阵？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/n/not.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/n/not.md",
      "start_line": 1,
      "end_line": 79,
      "summary": "not函数或运算符!用于对输入值进行逻辑非运算，返回0、1或NULL，并详细说明了其与运算符!的优先级区别。",
      "keywords": [
        "not",
        "逻辑非",
        "运算符",
        "优先级",
        "NULL"
      ],
      "hypothetical_question": "DolphinDB中not函数和运算符!有什么区别？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/n/notbetween.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/n/notbetween.md",
      "start_line": 1,
      "end_line": 75,
      "summary": "notBetween函数用于检查元素是否在指定范围之外，并返回布尔值。",
      "keywords": [
        "notBetween",
        "范围检查",
        "布尔值",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中检查元素是否不在指定范围内？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/n/notin.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/n/notin.md",
      "start_line": 1,
      "end_line": 113,
      "summary": "DolphinDB函数notIn的语法、参数、详细说明及使用示例，用于检查元素是否不在指定集合中。",
      "keywords": [
        "notIn",
        "DolphinDB",
        "函数",
        "查询",
        "条件筛选"
      ],
      "hypothetical_question": "DolphinDB中如何使用notIn函数检查元素是否不在指定集合中？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/n/ns.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/n/ns.md",
      "start_line": 1,
      "end_line": 74,
      "summary": "介绍如何使用NS模型和指定的优化方法拟合债券的收益率曲线，并返回相关参数的字典。",
      "keywords": [
        "NS模型",
        "收益率曲线",
        "优化方法"
      ],
      "hypothetical_question": "如何使用NS模型拟合债券的收益率曲线？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/n/nss.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/n/nss.md",
      "start_line": 1,
      "end_line": 109,
      "summary": "介绍如何使用NSS模型和不同的优化方法拟合债券收益率曲线。",
      "keywords": [
        "NSS模型",
        "收益率曲线",
        "优化算法"
      ],
      "hypothetical_question": "如何使用NSS模型拟合债券收益率曲线？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/n/nsspredict.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/n/nsspredict.md",
      "start_line": 1,
      "end_line": 39,
      "summary": "介绍如何使用nssPredict函数根据Nelson-Siegel或Nelson-Siegel-Svensson模型预测债券收益率。",
      "keywords": [
        "nssPredict",
        "Nelson-Siegel模型",
        "债券收益率预测"
      ],
      "hypothetical_question": "如何使用DolphinDB的nssPredict函数预测债券收益率？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/n/nullFill_.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/n/nullFill_.md",
      "start_line": 1,
      "end_line": 9,
      "summary": "nullFill! 是 nullFill 的原地修改版本，会改变输入对象的值。",
      "keywords": [
        "nullFill!",
        "nullFill",
        "原地修改"
      ],
      "hypothetical_question": "nullFill! 和 nullFill 有什么区别？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/n/nullFill.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/n/nullFill.md",
      "start_line": 1,
      "end_line": 128,
      "summary": "`nullFill` 函数用于填充向量、矩阵或表中的 NULL 值，支持标量或相同长度的向量/矩阵作为填充值。",
      "keywords": [
        "nullFill",
        "NULL 值填充",
        "向量",
        "矩阵",
        "表"
      ],
      "hypothetical_question": "如何在 DolphinDB 中使用 nullFill 函数填充向量、矩阵或表中的 NULL 值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/n/notlike.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/n/notlike.md",
      "start_line": 1,
      "end_line": 68,
      "summary": "DolphinDB的notLike函数用于判断字符串是否不匹配指定的模式，支持标量和向量操作，并可与select语句结合使用。",
      "keywords": [
        "notLike",
        "字符串匹配",
        "通配符",
        "select查询",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用notLike函数来筛选不匹配特定模式的字符串？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/o/oauthlogin.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/o/oauthlogin.md",
      "start_line": 1,
      "end_line": 39,
      "summary": "DolphinDB的oauthLogin函数支持三种OAuth鉴权方式，用于向授权服务器发送登录请求并返回token和用户信息。",
      "keywords": [
        "oauthLogin",
        "OAuth",
        "鉴权",
        "token"
      ],
      "hypothetical_question": "DolphinDB中如何使用oauthLogin函数进行OAuth鉴权？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/n/now.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/n/now.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "DolphinDB的now函数用于返回当前时间戳，可选择精确到毫秒或纳秒，但在Windows系统上可能无法实现纳秒级精度。",
      "keywords": [
        "now",
        "时间戳",
        "纳秒精度",
        "DolphinDB",
        "Windows限制"
      ],
      "hypothetical_question": "如何在DolphinDB中获取当前时间戳并控制其精度？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/n/nunique.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/n/nunique.md",
      "start_line": 1,
      "end_line": 60,
      "summary": "DolphinDB中的nunique函数用于计算向量、数组向量或元组中唯一值的数量，可选择是否忽略NULL值。",
      "keywords": [
        "nunique",
        "唯一值",
        "NULL值",
        "DolphinDB",
        "统计"
      ],
      "hypothetical_question": "如何在DolphinDB中计算向量或元组中的唯一值数量？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/n/nullIf.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/n/nullIf.md",
      "start_line": 1,
      "end_line": 49,
      "summary": "nullIf函数用于比较两个值，若相等则返回NULL，否则返回第一个值。",
      "keywords": [
        "nullIf",
        "比较函数",
        "NULL处理",
        "条件返回"
      ],
      "hypothetical_question": "DolphinDB中如何实现当两个值相等时返回NULL否则返回第一个值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/o/objectChecksum.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/o/objectChecksum.md",
      "start_line": 1,
      "end_line": 41,
      "summary": "介绍DolphinDB中的objectChecksum函数，用于计算向量的校验和以验证数据完整性。",
      "keywords": [
        "objectChecksum",
        "校验和",
        "数据完整性",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中计算向量的校验和以验证数据完整性？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/o/objs.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/o/objs.md",
      "start_line": 1,
      "end_line": 97,
      "summary": "DolphinDB的`objs`函数用于获取内存中变量的详细信息，包括变量名、类型、数据形式、内存占用等。",
      "keywords": [
        "objs",
        "内存变量",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中查看内存中所有变量的详细信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/o/or.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/o/or.md",
      "start_line": 1,
      "end_line": 75,
      "summary": "DolphinDB中的or函数用于按元素逐个返回两个参数逻辑或的结果，并详细说明了不同版本和配置下对NULL值的处理方式。",
      "keywords": [
        "or",
        "逻辑或",
        "NULL处理",
        "DolphinDB",
        "函数"
      ],
      "hypothetical_question": "DolphinDB中or函数如何处理NULL值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/o/objByName.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/o/objByName.md",
      "start_line": 1,
      "end_line": 69,
      "summary": "DolphinDB函数objByName用于根据名称返回对象，解决在远程节点执行脚本时无法解析共享表名的问题。",
      "keywords": [
        "objByName",
        "DolphinDB",
        "共享变量",
        "远程节点",
        "脚本解析"
      ],
      "hypothetical_question": "如何在DolphinDB中解决远程节点执行脚本时无法解析共享表名的问题？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/o/oneHot.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/o/oneHot.md",
      "start_line": 1,
      "end_line": 38,
      "summary": "介绍了DolphinDB中的oneHot函数，用于对内存表中的指定列进行独热编码，并返回编码后的表。",
      "keywords": [
        "oneHot",
        "独热编码",
        "内存表",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中对内存表的指定列进行独热编码？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/o/ols.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/o/ols.md",
      "start_line": 1,
      "end_line": 170,
      "summary": "该文档详细介绍了DolphinDB中的ols函数，用于执行普通最小二乘回归分析，包括语法、参数、返回结果及示例。",
      "keywords": [
        "最小二乘回归",
        "ols函数",
        "DolphinDB",
        "统计分析",
        "线性回归"
      ],
      "hypothetical_question": "如何在DolphinDB中使用ols函数进行普通最小二乘回归分析？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/o/olsEx.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/o/olsEx.md",
      "start_line": 1,
      "end_line": 105,
      "summary": "DolphinDB中的olsEx函数用于计算普通最小二乘回归，支持多种输出模式，包括系数估计、统计表和ANOVA分析。",
      "keywords": [
        "olsEx",
        "最小二乘回归",
        "ANOVA",
        "回归分析",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用olsEx函数进行最小二乘回归分析？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/o/osqp.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/o/osqp.md",
      "start_line": 1,
      "end_line": 53,
      "summary": "osqp函数用于求解二元目标函数在线性约束条件下的最优解，并返回求解状态和数值解。",
      "keywords": [
        "osqp",
        "最优解",
        "线性约束",
        "求解状态",
        "数值解"
      ],
      "hypothetical_question": "如何在DolphinDB中使用osqp函数求解二元目标函数在线性约束条件下的最优解？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/p/pack.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/p/pack.md",
      "start_line": 1,
      "end_line": 61,
      "summary": "DolphinDB的pack函数用于将数据按照指定格式打包成二进制字节流。",
      "keywords": [
        "pack",
        "二进制字节流",
        "格式字符串",
        "数据打包"
      ],
      "hypothetical_question": "如何在DolphinDB中将数据打包成二进制字节流？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/p/panel.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/p/panel.md",
      "start_line": 1,
      "end_line": 91,
      "summary": "DolphinDB的panel函数用于将数据表中的数据按照行和列维度进行透视操作，生成一个或多个矩阵。",
      "keywords": [
        "panel",
        "矩阵",
        "透视操作",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中如何将数据表中的数据按照行和列维度进行透视操作？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/p/pair.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/p/pair.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "介绍DolphinDB中的pair函数及其语法、参数和用法示例。",
      "keywords": [
        "pair",
        "数据对",
        "标量",
        "语法",
        "示例"
      ],
      "hypothetical_question": "DolphinDB中如何创建和操作数据对？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/p/parseInt.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/p/parseInt.md",
      "start_line": 1,
      "end_line": 7,
      "summary": "parseInt是parseInteger的别名。",
      "keywords": [
        "parseInt",
        "parseInteger",
        "别名"
      ],
      "hypothetical_question": "parseInt在DolphinDB中是什么的别名？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/p/parseInteger.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/p/parseInteger.md",
      "start_line": 1,
      "end_line": 53,
      "summary": "parseInteger函数用于将字符串按照指定进制转换为整数类型，支持多种参数和数据类型。",
      "keywords": [
        "parseInteger",
        "字符串转换",
        "整数类型",
        "进制"
      ],
      "hypothetical_question": "如何在DolphinDB中将字符串转换为指定进制的整数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/p/parseExpr.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/p/parseExpr.md",
      "start_line": 1,
      "end_line": 136,
      "summary": "parseExpr函数用于将字符串转换为元代码，可通过eval函数执行，支持变量字典、模块加载和运算符重载。",
      "keywords": [
        "parseExpr",
        "eval",
        "元代码",
        "运算符重载",
        "变量字典"
      ],
      "hypothetical_question": "如何在DolphinDB中将字符串转换为可执行的元代码？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/p/partial.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/p/partial.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "DolphinDB 的 `partial` 函数用于创建部分应用，允许预先绑定部分参数。",
      "keywords": [
        "partial",
        "DolphinDB",
        "函数",
        "部分应用",
        "参数绑定"
      ],
      "hypothetical_question": "如何在 DolphinDB 中使用 `partial` 函数创建部分应用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/p/parsejsontable.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/p/parsejsontable.md",
      "start_line": 1,
      "end_line": 108,
      "summary": "parseJsonTable函数用于将JSON对象解析为内存表，支持自定义schema和大小写敏感选项。",
      "keywords": [
        "parseJsonTable",
        "JSON解析",
        "内存表"
      ],
      "hypothetical_question": "如何在DolphinDB中将JSON对象解析为内存表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/p/pdfF.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/p/pdfF.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "pdfF函数用于计算指定F分布在给定点的概率密度，功能和用法同scipy.stats.f.pdf。",
      "keywords": [
        "pdfF",
        "F分布",
        "概率密度",
        "自由度"
      ],
      "hypothetical_question": "如何在DolphinDB中计算F分布在特定点的概率密度？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/p/pca.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/p/pca.md",
      "start_line": 1,
      "end_line": 56,
      "summary": "DolphinDB中的pca函数用于对数据源中的指定列进行主成分分析，并返回包含主成分矩阵、解释方差比例和奇异值的字典。",
      "keywords": [
        "pca",
        "主成分分析",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用pca函数进行主成分分析？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/p/pdfChiSquare.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/p/pdfChiSquare.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "pdfChiSquare函数用于计算卡方分布在给定点的概率密度。",
      "keywords": [
        "pdfChiSquare",
        "卡方分布",
        "概率密度",
        "自由度",
        "scipy.stats.chi2.pdf"
      ],
      "hypothetical_question": "如何在DolphinDB中计算卡方分布在特定点的概率密度？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/p/percentChange.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/p/percentChange.md",
      "start_line": 1,
      "end_line": 116,
      "summary": "percentChange函数用于计算向量或矩阵中元素之间的值变化百分比，支持指定元素间隔数。",
      "keywords": [
        "percentChange",
        "值变化百分比",
        "向量",
        "矩阵",
        "元素间隔"
      ],
      "hypothetical_question": "如何在DolphinDB中计算向量或矩阵中元素之间的值变化百分比？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/p/pdfNormal.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/p/pdfNormal.md",
      "start_line": 1,
      "end_line": 36,
      "summary": "pdfNormal函数用于计算指定正态分布在给定点X处的概率密度。",
      "keywords": [
        "pdfNormal",
        "正态分布",
        "概率密度"
      ],
      "hypothetical_question": "如何在DolphinDB中计算正态分布在特定点的概率密度值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/p/pchipInterpolateFit.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/p/pchipInterpolateFit.md",
      "start_line": 1,
      "end_line": 70,
      "summary": "该文档详细介绍了DolphinDB中的pchipInterpolateFit函数，用于执行分段三次Hermite多项式插值（PCHIP），并返回包含模型信息和预测函数的字典。",
      "keywords": [
        "PCHIP",
        "插值",
        "Hermite多项式",
        "预测函数"
      ],
      "hypothetical_question": "如何在DolphinDB中使用pchipInterpolateFit函数进行分段三次Hermite多项式插值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/p/percentile.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/p/percentile.md",
      "start_line": 1,
      "end_line": 81,
      "summary": "DolphinDB的percentile函数用于计算向量、矩阵或表中数据的指定百分位数，支持多种插值方法。",
      "keywords": [
        "percentile",
        "百分位数",
        "插值方法",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中计算数据的百分位数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/p/percentileRank.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/p/percentileRank.md",
      "start_line": 1,
      "end_line": 53,
      "summary": "介绍DolphinDB中的percentileRank函数，用于计算数值在向量中的百分位数，支持多种计算方法。",
      "keywords": [
        "percentileRank",
        "百分位数",
        "DolphinDB函数",
        "数值计算"
      ],
      "hypothetical_question": "如何在DolphinDB中计算一个数值在向量中的百分位数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/p/pinverse.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/p/pinverse.md",
      "start_line": 1,
      "end_line": 80,
      "summary": "介绍DolphinDB中计算矩阵伪逆矩阵的函数pinverse的语法、参数、返回值及示例。",
      "keywords": [
        "pinverse",
        "伪逆矩阵",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中计算矩阵的伪逆矩阵？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/p/piecewiselinfit.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/p/piecewiselinfit.md",
      "start_line": 1,
      "end_line": 114,
      "summary": "DolphinDB的piecewiseLinFit函数用于通过差分进化算法拟合连续的分段线性回归函数，最小化平方误差之和以找到最优线段断点位置。",
      "keywords": [
        "分段线性回归",
        "差分进化算法",
        "最小二乘法"
      ],
      "hypothetical_question": "如何在DolphinDB中使用piecewiseLinFit函数拟合连续的分段线性回归函数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/p/ploadText.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/p/ploadText.md",
      "start_line": 1,
      "end_line": 51,
      "summary": "`ploadText`函数用于并行加载数据文件到内存中，适用于大文件且速度优于`loadText`。",
      "keywords": [
        "ploadText",
        "并行加载",
        "内存表",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中高效加载大文本文件到内存？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/p/pipeline.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/p/pipeline.md",
      "start_line": 1,
      "end_line": 53,
      "summary": "DolphinDB的pipeline函数通过多线程优化多步骤任务的执行，适用于需要分解为多个子任务且步骤间有依赖关系的场景。",
      "keywords": [
        "pipeline",
        "多线程",
        "任务分解",
        "队列深度",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用pipeline函数优化多步骤任务的执行？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/p/plot.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/p/plot.md",
      "start_line": 1,
      "end_line": 135,
      "summary": "DolphinDB的plot函数用于生成各种类型的图表，支持向量、元组、矩阵或表作为输入数据，并可自定义图表类型、标签、标题等属性。",
      "keywords": [
        "plot",
        "图表生成",
        "数据可视化",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用plot函数生成不同类型的图表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/p/plotHist.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/p/plotHist.md",
      "start_line": 1,
      "end_line": 35,
      "summary": "plotHist函数用于生成柱状图图表对象，支持自定义柱数、数据范围和标题。",
      "keywords": [
        "plotHist",
        "柱状图",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用plotHist函数生成柱状图？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/p/poly1d.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/p/poly1d.md",
      "start_line": 1,
      "end_line": 7,
      "summary": "poly1d 是 polyPredict 函数的别名。",
      "keywords": [
        "poly1d",
        "polyPredict",
        "别名"
      ],
      "hypothetical_question": "poly1d 函数在 DolphinDB 中有什么作用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/p/polyPredict.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/p/polyPredict.md",
      "start_line": 1,
      "end_line": 41,
      "summary": "polyPredict函数用于根据给定的多项式系数和自变量数据点计算因变量的值。",
      "keywords": [
        "polyPredict",
        "多项式系数",
        "数值型向量"
      ],
      "hypothetical_question": "如何使用DolphinDB的polyPredict函数计算多项式的因变量值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/p/pnodeRun.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/p/pnodeRun.md",
      "start_line": 1,
      "end_line": 140,
      "summary": "pnodeRun函数用于在DolphinDB集群的指定节点或所有数据节点/计算节点上并行调用本地函数并合并结果。",
      "keywords": [
        "pnodeRun",
        "并行调用",
        "集群管理",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB集群中并行调用本地函数并合并结果？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/p/polynomial.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/p/polynomial.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "polynomial函数用于根据给定的多项式系数向量计算X的多项式值。",
      "keywords": [
        "polynomial",
        "多项式计算",
        "系数向量",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用polynomial函数计算多项式的值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/p/point.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/p/point.md",
      "start_line": 1,
      "end_line": 29,
      "summary": "介绍了 DolphinDB 中的 `point` 函数，用于生成 POINT 类型数据存储坐标系中的点位置。",
      "keywords": [
        "point",
        "POINT 类型",
        "坐标系",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在 DolphinDB 中创建一个表示坐标系中点的 POINT 类型数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/p/polyfit.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/p/polyfit.md",
      "start_line": 1,
      "end_line": 42,
      "summary": "DolphinDB的polyFit函数使用最小二乘法计算给定数据点的n次多项式最佳拟合系数。",
      "keywords": [
        "polyFit",
        "最小二乘法",
        "多项式拟合",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用最小二乘法进行多项式拟合？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/p/pop_.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/p/pop_.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "pop! 函数用于移除向量中的最后一个元素并返回该元素。",
      "keywords": [
        "pop!",
        "向量",
        "移除元素",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在 DolphinDB 中移除向量中的最后一个元素并返回它？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/p/prev.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/p/prev.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "prev函数用于将向量向右移动一个位置。",
      "keywords": [
        "prev",
        "向量",
        "移动"
      ],
      "hypothetical_question": "DolphinDB中如何将向量向右移动一个位置？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/p/power.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/p/power.md",
      "start_line": 1,
      "end_line": 15,
      "summary": "介绍了DolphinDB中的power函数及其语法和别名。",
      "keywords": [
        "power",
        "pow",
        "DolphinDB",
        "函数"
      ],
      "hypothetical_question": "DolphinDB中的power函数有什么语法和别名？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/p/print.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/p/print.md",
      "start_line": 1,
      "end_line": 23,
      "summary": "print函数用于打印任意数据的内容。",
      "keywords": [
        "print",
        "打印",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中打印变量的内容？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/p/predict.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/p/predict.md",
      "start_line": 1,
      "end_line": 39,
      "summary": "predict函数用于使用特定模型对数据进行预测，返回与输入表行数相同的预测值向量。",
      "keywords": [
        "predict",
        "模型预测",
        "randomForestRegressor",
        "机器学习"
      ],
      "hypothetical_question": "如何在DolphinDB中使用predict函数进行数据预测？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/p/pow.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/p/pow.md",
      "start_line": 1,
      "end_line": 50,
      "summary": "pow函数用于计算以X为底、Y为指数的值，支持标量、向量和矩阵输入，结果始终为DOUBLE类型。",
      "keywords": [
        "pow",
        "指数计算",
        "DOUBLE类型",
        "向量",
        "矩阵"
      ],
      "hypothetical_question": "如何在DolphinDB中使用pow函数进行指数计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/p/prod.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/p/prod.md",
      "start_line": 1,
      "end_line": 43,
      "summary": "prod函数用于计算标量、向量、矩阵或表中所有元素的乘积，忽略NULL值。",
      "keywords": [
        "prod",
        "乘积",
        "聚合函数",
        "NULL值"
      ],
      "hypothetical_question": "DolphinDB中如何计算向量、矩阵或表中元素的乘积？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/p/prevState.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/p/prevState.md",
      "start_line": 1,
      "end_line": 42,
      "summary": "prevState函数用于返回向量或矩阵中每个元素的上一个状态，其中连续相同的元素被视为同一状态，空值无状态。",
      "keywords": [
        "prevState",
        "状态",
        "向量",
        "矩阵",
        "空值"
      ],
      "hypothetical_question": "如何在DolphinDB中使用prevState函数获取向量或矩阵中元素的上一个状态？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/p/purgeCacheEngine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/p/purgeCacheEngine.md",
      "start_line": 1,
      "end_line": 7,
      "summary": "purgeCacheEngine 是 flushOLAPCache 的别名。",
      "keywords": [
        "purgeCacheEngine",
        "flushOLAPCache",
        "别名"
      ],
      "hypothetical_question": "purgeCacheEngine 和 flushOLAPCache 之间有什么关系？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/p/push_.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/p/push_.md",
      "start_line": 1,
      "end_line": 7,
      "summary": "push! 是 append! 的别名。",
      "keywords": [
        "push!",
        "append!",
        "别名"
      ],
      "hypothetical_question": "push! 在 DolphinDB 中是什么函数的别名？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/q/quadprog.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/q/quadprog.md",
      "start_line": 1,
      "end_line": 100,
      "summary": "quadprog函数用于求解带线性约束的二次规划问题，返回目标函数的最小值及其对应的解。",
      "keywords": [
        "quadprog",
        "二次规划",
        "线性约束",
        "最优解",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用quadprog函数求解带线性约束的二次规划问题？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/q/qr.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/q/qr.md",
      "start_line": 1,
      "end_line": 135,
      "summary": "该文档详细介绍了DolphinDB中的qr函数，用于计算矩阵的QR分解，包括语法、参数、不同模式下的返回结果及示例。",
      "keywords": [
        "QR分解",
        "矩阵计算",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中使用qr函数进行矩阵的QR分解？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/q/qclp.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/q/qclp.md",
      "start_line": 1,
      "end_line": 63,
      "summary": "DolphinDB的qclp函数用于解决带有线性目标函数和二次约束的优化问题。",
      "keywords": [
        "qclp",
        "优化问题",
        "二次约束",
        "DolphinDB",
        "线性目标函数"
      ],
      "hypothetical_question": "如何在DolphinDB中使用qclp函数解决带有二次约束的优化问题？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/p/pwlfpredict.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/p/pwlfpredict.md",
      "start_line": 1,
      "end_line": 48,
      "summary": "pwlfPredict函数用于基于piecewiseLinFit拟合的分段线性回归模型对输入数据点进行预测。",
      "keywords": [
        "pwlfPredict",
        "piecewiseLinFit",
        "分段线性回归",
        "预测"
      ],
      "hypothetical_question": "如何使用DolphinDB的pwlfPredict函数进行分段线性回归预测？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/q/quantile.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/q/quantile.md",
      "start_line": 1,
      "end_line": 50,
      "summary": "该文档详细介绍了DolphinDB中的quantile函数，包括其语法、参数、插值方法及使用示例。",
      "keywords": [
        "quantile",
        "分位数",
        "插值方法",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用quantile函数计算分位数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/q/quarterOfYear.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/q/quarterOfYear.md",
      "start_line": 1,
      "end_line": 29,
      "summary": "介绍DolphinDB函数quarterOfYear的语法、参数、功能及示例，用于计算日期时间数据在当年中的季度。",
      "keywords": [
        "quarterOfYear",
        "DolphinDB函数",
        "季度计算",
        "日期时间处理"
      ],
      "hypothetical_question": "如何在DolphinDB中计算一个日期属于当年的第几个季度？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/q/quarterEnd.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/q/quarterEnd.md",
      "start_line": 1,
      "end_line": 55,
      "summary": "该文档详细介绍了DolphinDB中的quarterEnd函数，用于返回指定日期所在季度的最后一天，并支持自定义季度结束月份和偏移量。",
      "keywords": [
        "quarterEnd",
        "季度结束",
        "日期函数",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中计算一个日期所在季度的最后一天？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/q/quarterBegin.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/q/quarterBegin.md",
      "start_line": 1,
      "end_line": 54,
      "summary": "quarterBegin函数用于返回指定日期所在季度的第一天，并可通过参数调整季度起始月份和偏移量。",
      "keywords": [
        "quarterBegin",
        "季度起始",
        "日期函数",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中获取一个日期所在季度的第一天？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/q/quantileSeries.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/q/quantileSeries.md",
      "start_line": 1,
      "end_line": 42,
      "summary": "介绍DolphinDB中的quantileSeries函数，用于计算数值型向量的分位数，支持不同的插值方法。",
      "keywords": [
        "quantileSeries",
        "分位数",
        "插值方法",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用quantileSeries函数计算向量的分位数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rad2deg.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rad2deg.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "rad2deg函数用于将角度从弧度转换为度。",
      "keywords": [
        "rad2deg",
        "弧度转度",
        "角度转换"
      ],
      "hypothetical_question": "如何在DolphinDB中将弧度转换为度？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/randDiscrete.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/randDiscrete.md",
      "start_line": 1,
      "end_line": 48,
      "summary": "randDiscrete函数根据给定的概率分布生成指定长度的随机样本。",
      "keywords": [
        "randDiscrete",
        "概率分布",
        "随机样本",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中根据指定的概率分布生成随机样本？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/randChiSquare.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/randChiSquare.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "介绍如何使用randChiSquare函数生成指定个数的卡方分布随机数。",
      "keywords": [
        "randChiSquare",
        "卡方分布",
        "随机数",
        "自由度"
      ],
      "hypothetical_question": "如何在DolphinDB中生成卡方分布的随机数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/randBinomial.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/randBinomial.md",
      "start_line": 1,
      "end_line": 28,
      "summary": "介绍DolphinDB中生成二项分布随机数的函数randBinomial的语法、参数及示例。",
      "keywords": [
        "randBinomial",
        "二项分布",
        "随机数",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中生成二项分布的随机数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/randBeta.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/randBeta.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "介绍DolphinDB中的randBeta函数，用于生成指定个数的Beta分布随机数。",
      "keywords": [
        "randBeta",
        "Beta分布",
        "随机数生成"
      ],
      "hypothetical_question": "如何在DolphinDB中生成Beta分布的随机数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/randF.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/randF.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "randF 函数用于生成指定个数的 F 分布随机数。",
      "keywords": [
        "randF",
        "F 分布",
        "随机数",
        "自由度"
      ],
      "hypothetical_question": "如何在 DolphinDB 中生成 F 分布的随机数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rand.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rand.md",
      "start_line": 1,
      "end_line": 71,
      "summary": "介绍了DolphinDB中的rand函数，用于生成随机标量、向量或矩阵，支持不同类型和分布的随机数生成。",
      "keywords": [
        "rand",
        "随机数",
        "均匀分布",
        "向量",
        "矩阵"
      ],
      "hypothetical_question": "如何在DolphinDB中生成随机数或从向量中随机选取元素？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/randExp.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/randExp.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "介绍如何使用randExp函数生成指定个数的指数分布随机数。",
      "keywords": [
        "randExp",
        "指数分布",
        "随机数",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中生成指数分布的随机数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/randGamma.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/randGamma.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "介绍如何使用randGamma函数生成指定个数的Gamma分布随机数。",
      "keywords": [
        "randGamma",
        "Gamma分布",
        "随机数生成"
      ],
      "hypothetical_question": "如何在DolphinDB中使用randGamma函数生成Gamma分布的随机数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/randLogistic.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/randLogistic.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "介绍如何使用randLogistic函数生成指定个数的Logistic分布随机数。",
      "keywords": [
        "randLogistic",
        "Logistic分布",
        "随机数生成"
      ],
      "hypothetical_question": "如何在DolphinDB中生成Logistic分布的随机数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/randMultivariateNormal.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/randMultivariateNormal.md",
      "start_line": 1,
      "end_line": 50,
      "summary": "该文档介绍了DolphinDB中的randMultivariateNormal函数，用于生成服从多元正态分布的随机数矩阵。",
      "keywords": [
        "randMultivariateNormal",
        "多元正态分布",
        "随机数生成",
        "DolphinDB",
        "矩阵"
      ],
      "hypothetical_question": "如何在DolphinDB中生成服从多元正态分布的随机数矩阵？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/randPoisson.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/randPoisson.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "介绍如何使用randPoisson函数生成指定个数的泊松分布随机数。",
      "keywords": [
        "randPoisson",
        "泊松分布",
        "随机数生成"
      ],
      "hypothetical_question": "如何在DolphinDB中生成泊松分布的随机数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/randNormal.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/randNormal.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "介绍DolphinDB中生成正态分布随机数的函数randNormal的语法、参数和用法。",
      "keywords": [
        "randNormal",
        "正态分布",
        "随机数",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中生成正态分布的随机数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/randStudent.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/randStudent.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "randStudent函数用于生成指定个数的t分布随机数。",
      "keywords": [
        "randStudent",
        "t分布",
        "随机数",
        "自由度"
      ],
      "hypothetical_question": "如何在DolphinDB中生成t分布的随机数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/randUniform.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/randUniform.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "randUniform函数用于生成指定个数在给定范围内的均匀分布随机数。",
      "keywords": [
        "randUniform",
        "均匀分布",
        "随机数",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中生成指定范围内的均匀分布随机数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/randWeibull.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/randWeibull.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "介绍如何使用randWeibull函数生成指定个数的Weibull分布随机数。",
      "keywords": [
        "randWeibull",
        "Weibull分布",
        "随机数生成"
      ],
      "hypothetical_question": "如何在DolphinDB中使用randWeibull函数生成Weibull分布的随机数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/ratios.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/ratios.md",
      "start_line": 1,
      "end_line": 55,
      "summary": "ratios函数用于计算向量或矩阵中相邻元素的比值。",
      "keywords": [
        "ratios",
        "向量",
        "矩阵",
        "比值",
        "DolphinDB"
      ],
      "hypothetical_question": "在DolphinDB中如何计算向量或矩阵中相邻元素的比值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/randomForestRegressor.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/randomForestRegressor.md",
      "start_line": 1,
      "end_line": 82,
      "summary": "介绍了DolphinDB中randomForestRegressor函数的语法、参数、功能及使用示例，用于构建随机森林回归模型。",
      "keywords": [
        "randomForestRegressor",
        "回归模型",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用randomForestRegressor函数构建随机森林回归模型？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/ratio.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/ratio.md",
      "start_line": 1,
      "end_line": 95,
      "summary": "ratio函数用于逐个元素地计算X和Y的比例，总是返回浮点数，与除法运算符不同。",
      "keywords": [
        "ratio",
        "除法",
        "浮点数",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中ratio函数的作用是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/randomForestClassifier.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/randomForestClassifier.md",
      "start_line": 1,
      "end_line": 84,
      "summary": "DolphinDB的randomForestClassifier函数用于训练随机森林分类模型，支持多种参数配置，并返回可用于预测的模型。",
      "keywords": [
        "randomForestClassifier",
        "分类模型",
        "DolphinDB",
        "机器学习"
      ],
      "hypothetical_question": "如何在DolphinDB中使用randomForestClassifier函数训练一个随机森林分类模型？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rank.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rank.md",
      "start_line": 1,
      "end_line": 126,
      "summary": "DolphinDB的rank函数用于计算向量、矩阵或表中元素的排名，支持多种参数配置如升序降序、分组、处理NULL值等。",
      "keywords": [
        "rank",
        "排序",
        "分组",
        "NULL值处理",
        "排名方法"
      ],
      "hypothetical_question": "如何在DolphinDB中使用rank函数对数据进行排名和分组？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/readLine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/readLine.md",
      "start_line": 1,
      "end_line": 38,
      "summary": "介绍DolphinDB中的readLine函数，用于从文件中读取一行内容。",
      "keywords": [
        "readLine",
        "文件句柄",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中从文件中读取一行内容？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/readBytes.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/readBytes.md",
      "start_line": 1,
      "end_line": 36,
      "summary": "介绍如何使用`readBytes`函数从文件句柄中读取指定字节数的数据。",
      "keywords": [
        "readBytes",
        "文件句柄",
        "字节读取"
      ],
      "hypothetical_question": "如何在DolphinDB中从文件句柄中读取指定字节数的数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/readLines.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/readLines.md",
      "start_line": 1,
      "end_line": 44,
      "summary": "该文档介绍了DolphinDB中的readLines函数，用于从文件中读取指定行数，并提供了语法、参数、详情和使用示例。",
      "keywords": [
        "readLines",
        "文件句柄",
        "读取行数"
      ],
      "hypothetical_question": "如何在DolphinDB中从文件中读取指定行数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rdp.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rdp.md",
      "start_line": 1,
      "end_line": 47,
      "summary": "介绍DolphinDB中rdp函数的语法、参数和使用Ramer-Douglas-Peucker算法对POINT类型向量进行压缩的详情及示例。",
      "keywords": [
        "rdp",
        "Ramer-Douglas-Peucker",
        "POINT类型",
        "矢量压缩",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用rdp函数对POINT类型向量进行压缩？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/readLines_.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/readLines_.md",
      "start_line": 1,
      "end_line": 50,
      "summary": "`readLines!`函数用于从文件句柄中读取指定数量的字符串到现有变量中，比`readLines`函数更高效。",
      "keywords": [
        "readLines!",
        "文件句柄",
        "字符串读取",
        "性能优化"
      ],
      "hypothetical_question": "如何在DolphinDB中高效读取文件中的多行字符串？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/readObject.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/readObject.md",
      "start_line": 1,
      "end_line": 53,
      "summary": "readObject函数用于从文件句柄中读取各种数据类型，包括标量、向量、矩阵、集合、字典和表，且需要用户登录后才能执行。",
      "keywords": [
        "readObject",
        "文件句柄",
        "数据类型",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用readObject函数从文件中读取不同类型的数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/read_.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/read_.md",
      "start_line": 1,
      "end_line": 44,
      "summary": "介绍了DolphinDB中的`read!`函数，用于从文件句柄中读取指定数量的数据点并保存到指定变量中，提高读取性能。",
      "keywords": [
        "read!",
        "文件句柄",
        "数据读取",
        "性能优化",
        "缓冲区"
      ],
      "hypothetical_question": "如何在DolphinDB中高效地从文件句柄中读取数据并保存到变量中？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/readRecord_.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/readRecord_.md",
      "start_line": 1,
      "end_line": 45,
      "summary": "readRecord! 函数用于将二进制文件转换为 DolphinDB 数据对象，支持指定偏移量和读取长度。",
      "keywords": [
        "readRecord!",
        "二进制文件",
        "DolphinDB",
        "数据转换",
        "文件句柄"
      ],
      "hypothetical_question": "如何在 DolphinDB 中将二进制文件转换为数据对象？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rebalanceChunksAmongDataNodes.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rebalanceChunksAmongDataNodes.md",
      "start_line": 1,
      "end_line": 51,
      "summary": "介绍DolphinDB中rebalanceChunksAmongDataNodes函数的语法、参数、详情和使用示例，用于在集群中平衡数据分布。",
      "keywords": [
        "rebalanceChunksAmongDataNodes",
        "数据平衡",
        "集群管理"
      ],
      "hypothetical_question": "如何在DolphinDB集群中平衡数据分布？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/reciprocal.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/reciprocal.md",
      "start_line": 1,
      "end_line": 33,
      "summary": "介绍DolphinDB中的reciprocal函数，用于计算数值型标量、向量或矩阵的倒数。",
      "keywords": [
        "reciprocal",
        "倒数",
        "DOUBLE类型",
        "数值计算",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中如何计算数值的倒数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/refCount.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/refCount.md",
      "start_line": 1,
      "end_line": 29,
      "summary": "refCount函数用于计算某个对象被引用的数量。",
      "keywords": [
        "refCount",
        "引用数量",
        "变量引用"
      ],
      "hypothetical_question": "如何在DolphinDB中计算一个对象被引用的次数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rebalanceChunksWithinDataNode.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rebalanceChunksWithinDataNode.md",
      "start_line": 1,
      "end_line": 55,
      "summary": "该文档描述了DolphinDB中的rebalanceChunksWithinDataNode函数，用于平衡数据节点内各磁盘卷间的数据量，支持查看执行计划或实际执行数据迁移。",
      "keywords": [
        "rebalanceChunksWithinDataNode",
        "数据平衡",
        "磁盘卷",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中平衡数据节点内各磁盘卷间的数据量？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/regexCount.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/regexCount.md",
      "start_line": 1,
      "end_line": 40,
      "summary": "regexCount函数用于统计字符串中与指定正则表达式模式匹配的子串出现的次数。",
      "keywords": [
        "regexCount",
        "正则表达式",
        "字符串匹配",
        "模式搜索"
      ],
      "hypothetical_question": "如何在DolphinDB中使用regexCount函数统计字符串中匹配正则表达式的次数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/regexReplace.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/regexReplace.md",
      "start_line": 1,
      "end_line": 39,
      "summary": "regexReplace函数用于在字符串中搜索匹配正则表达式的部分并替换为指定字符串。",
      "keywords": [
        "regexReplace",
        "正则表达式",
        "字符串替换"
      ],
      "hypothetical_question": "如何在DolphinDB中使用正则表达式替换字符串中的特定模式？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/regexFind.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/regexFind.md",
      "start_line": 1,
      "end_line": 38,
      "summary": "regexFind函数用于在字符串中搜索与正则表达式匹配的第一个子串的位置。",
      "keywords": [
        "regexFind",
        "正则表达式",
        "字符串搜索",
        "位置偏移"
      ],
      "hypothetical_question": "如何在DolphinDB中使用regexFind函数查找字符串中第一个匹配正则表达式的子串位置？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/removeTail_.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/removeTail_.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "removeTail! 函数用于删除向量末尾指定数量的元素。",
      "keywords": [
        "removeTail!",
        "向量",
        "删除元素",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在 DolphinDB 中删除向量末尾的多个元素？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/remoteRun.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/remoteRun.md",
      "start_line": 1,
      "end_line": 93,
      "summary": "remoteRun函数用于将脚本或函数传输到远程数据库执行，支持不同调用方式和参数传递。",
      "keywords": [
        "remoteRun",
        "远程执行",
        "DolphinDB",
        "函数调用",
        "脚本执行"
      ],
      "hypothetical_question": "如何在DolphinDB中使用remoteRun函数在远程节点上执行脚本或函数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/regexfindstr.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/regexfindstr.md",
      "start_line": 1,
      "end_line": 73,
      "summary": "regexFindStr函数用于在字符串或字符串向量中搜索并返回满足正则表达式模式的子字符串。",
      "keywords": [
        "regexFindStr",
        "正则表达式",
        "字符串搜索",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用regexFindStr函数搜索并返回满足正则表达式模式的子字符串？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/removeHead_.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/removeHead_.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "介绍DolphinDB中的removeHead!函数，用于删除向量头部指定数量的元素。",
      "keywords": [
        "removeHead!",
        "向量操作",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中删除向量头部的前n个元素？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/regroup.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/regroup.md",
      "start_line": 1,
      "end_line": 37,
      "summary": "该文本片段介绍了DolphinDB中regroup函数的使用方法，包括按照行标签重组数据、内置函数与用户自定义函数的性能对比以及对面板数据进行分钟聚合的示例。",
      "keywords": [
        "regroup",
        "DolphinDB",
        "数据重组",
        "性能对比",
        "分钟聚合"
      ],
      "hypothetical_question": "如何在DolphinDB中使用regroup函数进行数据重组和性能对比？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/remoteRunWithCompression.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/remoteRunWithCompression.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "remoteRunWithCompression 是一个与 remoteRun 功能和用法基本一致的函数，但在传输时对脚本中大于 1024 行的表数据进行了压缩。",
      "keywords": [
        "remoteRunWithCompression",
        "数据压缩",
        "远程执行"
      ],
      "hypothetical_question": "DolphinDB 中 remoteRunWithCompression 函数的作用是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/removeipblacklist.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/removeipblacklist.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "removeIPBlackList函数用于从DolphinDB的黑名单中移除指定的IP地址，且仅可由管理员执行。",
      "keywords": [
        "removeIPBlackList",
        "IP黑名单",
        "DolphinDB",
        "管理员"
      ],
      "hypothetical_question": "如何在DolphinDB中从IP黑名单中移除指定的IP地址？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/removeTopicOffset.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/removeTopicOffset.md",
      "start_line": 1,
      "end_line": 15,
      "summary": "removeTopicOffset函数用于删除订阅主题中持久化保存的最新一条已处理数据的偏移量。",
      "keywords": [
        "removeTopicOffset",
        "subscribeTable",
        "persistOffset"
      ],
      "hypothetical_question": "如何删除订阅主题中持久化保存的最新一条已处理数据的偏移量？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/removeipwhitelist.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/removeipwhitelist.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "removeIPWhiteList函数用于从白名单中移除指定的IP地址，当所有IP被移除后即关闭白名单，仅管理员可执行此操作。",
      "keywords": [
        "removeIPWhiteList",
        "IP白名单",
        "管理员",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中从IP白名单中移除指定的IP地址？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/remoteruncompatible.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/remoteruncompatible.md",
      "start_line": 1,
      "end_line": 75,
      "summary": "remoteRunCompatible函数用于在远程数据库上执行脚本或函数，且对本地和远程数据库版本没有限制。",
      "keywords": [
        "remoteRunCompatible",
        "远程执行",
        "DolphinDB",
        "数据库连接",
        "脚本执行"
      ],
      "hypothetical_question": "如何在DolphinDB中不受版本限制地远程执行脚本或函数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/removenode.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/removenode.md",
      "start_line": 1,
      "end_line": 35,
      "summary": "介绍DolphinDB中removeNode函数的语法、参数和使用方法，用于删除集群中的计算节点。",
      "keywords": [
        "removeNode",
        "计算节点",
        "删除节点",
        "force参数"
      ],
      "hypothetical_question": "如何在DolphinDB中删除集群中的计算节点？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/renameSchema.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/renameSchema.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "介绍DolphinDB中用于重命名schema的函数renameSchema的语法、参数和用法。",
      "keywords": [
        "renameSchema",
        "schema",
        "DolphinDB",
        "catalog",
        "重命名"
      ],
      "hypothetical_question": "如何在DolphinDB中重命名一个schema？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/renameCatalog.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/renameCatalog.md",
      "start_line": 1,
      "end_line": 22,
      "summary": "renameCatalog函数用于重命名DolphinDB中的catalog。",
      "keywords": [
        "renameCatalog",
        "catalog",
        "DolphinDB",
        "重命名"
      ],
      "hypothetical_question": "如何在DolphinDB中重命名一个catalog？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/renameTable.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/renameTable.md",
      "start_line": 1,
      "end_line": 34,
      "summary": "该文档介绍了如何使用renameTable函数在DolphinDB中重命名分布式数据库内的数据表。",
      "keywords": [
        "renameTable",
        "DolphinDB",
        "分布式数据库",
        "数据表"
      ],
      "hypothetical_question": "如何在DolphinDB中重命名分布式数据库内的数据表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/reorderColumns_.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/reorderColumns_.md",
      "start_line": 1,
      "end_line": 74,
      "summary": "reorderColumns!函数用于调整内存表中列的顺序，直接在原表上修改而不生成新表。",
      "keywords": [
        "reorderColumns!",
        "列顺序",
        "内存表",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中调整内存表的列顺序？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/repeat.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/repeat.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "介绍DolphinDB中的repeat函数，用于重复字符串或字符串向量指定次数。",
      "keywords": [
        "repeat",
        "字符串",
        "重复",
        "DolphinDB",
        "函数"
      ],
      "hypothetical_question": "如何在DolphinDB中重复一个字符串多次？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/replace.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/replace.md",
      "start_line": 1,
      "end_line": 56,
      "summary": "介绍DolphinDB中的replace函数，用于将向量或矩阵中的特定值替换为新值。",
      "keywords": [
        "replace",
        "向量",
        "矩阵",
        "替换",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中将向量或矩阵中的特定值替换为新值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rename_.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rename_.md",
      "start_line": 1,
      "end_line": 173,
      "summary": "DolphinDB的rename!函数用于修改向量、矩阵、索引矩阵、非共享内存表或分布式表的标签或列名。",
      "keywords": [
        "rename!",
        "DolphinDB",
        "标签",
        "列名",
        "矩阵"
      ],
      "hypothetical_question": "如何在DolphinDB中修改向量、矩阵或表的标签或列名？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/replace_.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/replace_.md",
      "start_line": 1,
      "end_line": 7,
      "summary": "replace! 是 replace 函数的别名。",
      "keywords": [
        "replace!",
        "replace",
        "别名"
      ],
      "hypothetical_question": "replace! 在 DolphinDB 中是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/repartitionDS.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/repartitionDS.md",
      "start_line": 1,
      "end_line": 84,
      "summary": "该文档详细介绍了DolphinDB中的repartitionDS函数，包括其语法、参数、功能描述及使用示例，用于重新划分数据源。",
      "keywords": [
        "repartitionDS",
        "数据源",
        "分区"
      ],
      "hypothetical_question": "如何在DolphinDB中使用repartitionDS函数重新划分数据源？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/replaceColumn_.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/replaceColumn_.md",
      "start_line": 1,
      "end_line": 122,
      "summary": "replaceColumn! 函数用于替换内存表或分布式表中的列值或数据类型，支持单列或多列操作，并详细说明了不同表类型下的使用规则和限制。",
      "keywords": [
        "replaceColumn!",
        "内存表",
        "分布式表",
        "数据类型转换",
        "列替换"
      ],
      "hypothetical_question": "如何在 DolphinDB 中使用 replaceColumn! 函数替换表中的列值或数据类型？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/repmat.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/repmat.md",
      "start_line": 1,
      "end_line": 46,
      "summary": "repmat函数用于将矩阵在行方向和列方向重复指定次数，生成新矩阵。",
      "keywords": [
        "repmat",
        "矩阵",
        "重复"
      ],
      "hypothetical_question": "如何在DolphinDB中将一个矩阵在行和列方向上重复多次？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/replay.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/replay.md",
      "start_line": 1,
      "end_line": 313,
      "summary": "DolphinDB的replay函数用于按时间顺序将一个或多个数据表或数据源列表的数据回放到目标表，支持多种回放形式和模式，适用于高频策略回测场景。",
      "keywords": [
        "replay",
        "数据回放",
        "高频策略回测",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用replay函数进行数据回放以模拟实时数据写入？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/resample.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/resample.md",
      "start_line": 1,
      "end_line": 171,
      "summary": "DolphinDB的resample函数用于按照指定的时间频率或交易日历对数据进行重新采样，并应用聚合函数。",
      "keywords": [
        "resample",
        "时间频率",
        "交易日历",
        "聚合函数"
      ],
      "hypothetical_question": "如何在DolphinDB中使用resample函数按照指定的时间频率对数据进行重新采样？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/replayDS.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/replayDS.md",
      "start_line": 1,
      "end_line": 94,
      "summary": "replayDS函数用于根据时间维度将SQL查询划分为多个数据源，作为replay函数的输入进行数据回放。",
      "keywords": [
        "replayDS",
        "数据回放",
        "时间分区",
        "DFS表",
        "SQL查询"
      ],
      "hypothetical_question": "如何使用replayDS函数将DFS表中的数据按时间维度划分为多个数据源？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/reshape.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/reshape.md",
      "start_line": 1,
      "end_line": 60,
      "summary": "介绍DolphinDB中的reshape函数，用于改变向量或矩阵的形状。",
      "keywords": [
        "reshape",
        "矩阵",
        "向量",
        "DolphinDB",
        "数据重组"
      ],
      "hypothetical_question": "如何在DolphinDB中改变向量或矩阵的形状？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/resetDBDirMeta.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/resetDBDirMeta.md",
      "start_line": 1,
      "end_line": 29,
      "summary": "resetDBDirMeta函数用于在跨磁盘卷转移元数据时修改DATABASE存储路径为目的路径，并提供了操作步骤和注意事项。",
      "keywords": [
        "resetDBDirMeta",
        "元数据转移",
        "DATABASE路径"
      ],
      "hypothetical_question": "如何在DolphinDB中跨磁盘卷转移元数据并修改DATABASE存储路径？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/resetDfsRecoveryConcurrency.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/resetDfsRecoveryConcurrency.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "resetDfsRecoveryConcurrency函数用于在线修改当前节点分区恢复任务的最大并发数，仅管理员在控制节点可调用。",
      "keywords": [
        "resetDfsRecoveryConcurrency",
        "分区恢复",
        "并发数",
        "管理员"
      ],
      "hypothetical_question": "如何在DolphinDB中在线修改分区恢复任务的最大并发数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/resetPwd.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/resetPwd.md",
      "start_line": 1,
      "end_line": 32,
      "summary": "DolphinDB的resetPwd函数用于管理员重置用户密码，支持密码复杂性校验配置。",
      "keywords": [
        "resetPwd",
        "password",
        "DolphinDB",
        "enhancedSecurityVerification",
        "admin"
      ],
      "hypothetical_question": "如何在DolphinDB中重置用户密码并配置密码复杂性校验？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/resetDfsRebalanceConcurrency.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/resetDfsRebalanceConcurrency.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "resetDfsRebalanceConcurrency函数用于在线修改当前节点再平衡任务的最大并发数，仅管理员在控制节点可调用。",
      "keywords": [
        "resetDfsRebalanceConcurrency",
        "再平衡任务",
        "并发数",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中在线修改再平衡任务的最大并发数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/resetRecoveryWorkerNum.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/resetRecoveryWorkerNum.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "resetRecoveryWorkerNum函数用于在线修改当前节点用于chunk恢复的工作线程数，需由管理员执行且重启后失效。",
      "keywords": [
        "resetRecoveryWorkerNum",
        "chunk恢复",
        "工作线程数"
      ],
      "hypothetical_question": "如何在线修改DolphinDB节点用于chunk恢复的工作线程数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/restoreDB.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/restoreDB.md",
      "start_line": 1,
      "end_line": 67,
      "summary": "restoreDB函数用于将备份数据恢复到指定数据库，并返回恢复的数据库和表名称。",
      "keywords": [
        "restoreDB",
        "备份恢复",
        "分布式数据库",
        "加密表"
      ],
      "hypothetical_question": "如何使用DolphinDB的restoreDB函数恢复备份的分布式数据库？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/restore.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/restore.md",
      "start_line": 1,
      "end_line": 123,
      "summary": "该文档详细介绍了DolphinDB中`restore`函数的语法、参数、功能及使用示例，用于恢复指定分区的备份数据。",
      "keywords": [
        "restore",
        "备份恢复",
        "分布式数据库",
        "分区恢复"
      ],
      "hypothetical_question": "如何在DolphinDB中使用`restore`函数恢复指定分区的备份数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/residual.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/residual.md",
      "start_line": 1,
      "end_line": 74,
      "summary": "该文档详细介绍了DolphinDB中用于计算最小二乘回归残差的函数residual的语法、参数、使用详情及示例。",
      "keywords": [
        "residual",
        "最小二乘回归",
        "残差",
        "ols",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中计算最小二乘回归的残差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/restoreTable.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/restoreTable.md",
      "start_line": 1,
      "end_line": 74,
      "summary": "该文档详细介绍了DolphinDB中的restoreTable函数，包括其语法、参数、功能详情及使用示例，用于恢复备份的表到数据库。",
      "keywords": [
        "restoreTable",
        "备份恢复",
        "DolphinDB函数",
        "分布式数据库"
      ],
      "hypothetical_question": "如何在DolphinDB中使用restoreTable函数恢复备份的表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/restoresettings.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/restoresettings.md",
      "start_line": 1,
      "end_line": 39,
      "summary": "restoreSettings函数用于从备份文件中恢复用户、用户权限和函数视图到当前DolphinDB集群。",
      "keywords": [
        "restoreSettings",
        "用户权限",
        "备份恢复"
      ],
      "hypothetical_question": "如何在DolphinDB中从备份文件恢复用户权限和函数视图？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/resubmitStreamGraph.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/resubmitStreamGraph.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "resubmitStreamGraph函数用于重新提交处于失败、销毁中或已销毁状态的流图。",
      "keywords": [
        "resubmitStreamGraph",
        "流图",
        "重新提交",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中重新提交一个已销毁的流图？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/restoreDislocatedTablet.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/restoreDislocatedTablet.md",
      "start_line": 1,
      "end_line": 39,
      "summary": "restoreDislocatedTablet函数用于修复表级分区配置下因节点宕机导致同一分区内表分布在不同节点的问题，并将其重新分配到同一节点。",
      "keywords": [
        "restoreDislocatedTablet",
        "分区修复",
        "数据平衡"
      ],
      "hypothetical_question": "如何修复DolphinDB中因节点宕机导致的同一分区内表分布在不同节点的问题？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/reverse.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/reverse.md",
      "start_line": 1,
      "end_line": 42,
      "summary": "reverse函数用于返回向量或矩阵元素的逆序排列。",
      "keywords": [
        "reverse",
        "向量",
        "矩阵",
        "逆序",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中反转向量或矩阵的元素顺序？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/resumeRecovery.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/resumeRecovery.md",
      "start_line": 1,
      "end_line": 20,
      "summary": "resumeRecovery函数用于重启节点恢复进程，继续恢复\"Waiting\"状态的数据，仅限管理员在控制节点上调用。",
      "keywords": [
        "resumeRecovery",
        "节点恢复",
        "高可用集群",
        "管理员命令",
        "数据恢复"
      ],
      "hypothetical_question": "如何在DolphinDB中重启节点恢复进程以继续恢复\"Waiting\"状态的数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/ridge.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/ridge.md",
      "start_line": 1,
      "end_line": 58,
      "summary": "该文档详细介绍了DolphinDB中的ridge函数，用于进行ridge回归估计，包括其语法、参数说明和使用示例。",
      "keywords": [
        "ridge回归",
        "DolphinDB",
        "参数说明"
      ],
      "hypothetical_question": "如何在DolphinDB中使用ridge函数进行回归估计？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/revoke.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/revoke.md",
      "start_line": 1,
      "end_line": 78,
      "summary": "DolphinDB的revoke函数用于撤销用户或组的特定权限或内存限制。",
      "keywords": [
        "revoke",
        "权限管理",
        "DolphinDB",
        "用户权限",
        "内存限制"
      ],
      "hypothetical_question": "如何在DolphinDB中撤销用户或组的特定权限？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/right.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/right.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "right函数用于返回字符串或字符串向量右边指定数量的字符。",
      "keywords": [
        "right",
        "字符串",
        "字符提取",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中提取字符串右边的指定数量字符？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/ridgeBasic.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/ridgeBasic.md",
      "start_line": 1,
      "end_line": 77,
      "summary": "该文档详细介绍了DolphinDB中的ridgeBasic函数，用于进行ridge回归估计，包括其语法、参数、返回结果及统计细节。",
      "keywords": [
        "ridge回归",
        "统计模型",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中使用ridgeBasic函数进行ridge回归估计？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/ridgeCV.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/ridgeCV.md",
      "start_line": 1,
      "end_line": 49,
      "summary": "介绍DolphinDB中的ridgeCV函数，用于通过五折交叉验证进行岭回归估计并输出最优参数模型。",
      "keywords": [
        "ridgeCV",
        "岭回归",
        "交叉验证",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用五折交叉验证进行岭回归估计？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rm.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rm.md",
      "start_line": 1,
      "end_line": 39,
      "summary": "介绍DolphinDB中用于删除文件的`rm`函数，包括其语法、参数、使用详情及示例。",
      "keywords": [
        "rm",
        "删除文件",
        "DolphinDB",
        "文件操作"
      ],
      "hypothetical_question": "如何在DolphinDB中删除一个文件？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rmdir.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rmdir.md",
      "start_line": 1,
      "end_line": 57,
      "summary": "该文档详细介绍了DolphinDB中rmdir函数的语法、参数、用法及示例，用于删除目录及其内容。",
      "keywords": [
        "rmdir",
        "目录删除",
        "递归删除",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中删除一个非空目录？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/round.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/round.md",
      "start_line": 1,
      "end_line": 77,
      "summary": "round函数用于按照指定小数位数对数据进行四舍五入运算。",
      "keywords": [
        "round",
        "四舍五入",
        "精度"
      ],
      "hypothetical_question": "DolphinDB中如何对数据进行四舍五入运算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/row.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/row.md",
      "start_line": 1,
      "end_line": 59,
      "summary": "row函数用于返回向量、矩阵或表的指定行。",
      "keywords": [
        "row",
        "矩阵",
        "表",
        "向量"
      ],
      "hypothetical_question": "如何在DolphinDB中获取矩阵或表的特定行？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rms.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rms.md",
      "start_line": 1,
      "end_line": 55,
      "summary": "介绍DolphinDB中的rms函数，用于计算数值标量、数据对、向量、矩阵或表的均方根。",
      "keywords": [
        "rms",
        "均方根",
        "DolphinDB",
        "矩阵",
        "向量"
      ],
      "hypothetical_question": "如何在DolphinDB中计算向量、矩阵或表的均方根？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rotatetdekey.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rotatetdekey.md",
      "start_line": 1,
      "end_line": 23,
      "summary": "介绍如何使用rotateTDEKey函数进行TDE密钥轮转，包括语法、参数、详情和示例。",
      "keywords": [
        "rotateTDEKey",
        "TDE密钥轮转",
        "静态数据加密"
      ],
      "hypothetical_question": "如何在DolphinDB中轮转TDE密钥？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rollingPanel.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rollingPanel.md",
      "start_line": 1,
      "end_line": 48,
      "summary": "rollingPanel函数用于滚动截取数据表中的固定行数，并可选择按指定列分组操作。",
      "keywords": [
        "rollingPanel",
        "数据表",
        "窗口长度",
        "分组"
      ],
      "hypothetical_question": "如何在DolphinDB中使用rollingPanel函数滚动截取数据表中的行？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rowAnd.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rowAnd.md",
      "start_line": 1,
      "end_line": 38,
      "summary": "rowAnd函数用于逐行进行逻辑与操作，返回与输入参数行数相同的向量。",
      "keywords": [
        "rowAnd",
        "逻辑与",
        "逐行操作"
      ],
      "hypothetical_question": "如何在DolphinDB中对矩阵或表的每一行进行逻辑与操作？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rowAlign.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rowAlign.md",
      "start_line": 1,
      "end_line": 107,
      "summary": "rowAlign函数用于对两个数组向量或列式元组中的每一行向量根据元素值进行对齐，主要用于金融场景下的多档买卖报价数据对齐。",
      "keywords": [
        "rowAlign",
        "数据对齐",
        "金融报价",
        "数组向量",
        "列式元组"
      ],
      "hypothetical_question": "如何在DolphinDB中对多档买卖报价数据进行对齐？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rowAvg.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rowAvg.md",
      "start_line": 1,
      "end_line": 44,
      "summary": "rowAvg函数用于逐行计算输入参数的平均值，返回与输入行数相同的向量。",
      "keywords": [
        "rowAvg",
        "逐行计算",
        "平均值",
        "向量"
      ],
      "hypothetical_question": "如何在DolphinDB中逐行计算矩阵或表中元素的平均值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rowCorr.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rowCorr.md",
      "start_line": 1,
      "end_line": 36,
      "summary": "rowCorr函数用于逐行计算两个矩阵或数组之间的相关性。",
      "keywords": [
        "rowCorr",
        "相关性计算",
        "矩阵运算",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中计算两个矩阵的行相关性？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rowBeta.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rowBeta.md",
      "start_line": 1,
      "end_line": 38,
      "summary": "rowBeta函数用于逐行计算Y在X上的回归系数的最小二乘估计，返回与输入参数行数相同的向量。",
      "keywords": [
        "rowBeta",
        "回归系数",
        "最小二乘估计",
        "矩阵计算"
      ],
      "hypothetical_question": "如何在DolphinDB中使用rowBeta函数计算矩阵的逐行回归系数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rowCount.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rowCount.md",
      "start_line": 1,
      "end_line": 44,
      "summary": "rowCount函数用于逐行统计非空值的数量，返回与输入参数行数相同的向量。",
      "keywords": [
        "rowCount",
        "非空值统计",
        "行函数"
      ],
      "hypothetical_question": "如何在DolphinDB中逐行统计非空值的数量？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rowCovar.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rowCovar.md",
      "start_line": 1,
      "end_line": 50,
      "summary": "rowCovar函数用于逐行计算两个矩阵或数组之间的协方差，返回与输入行数相同的向量。",
      "keywords": [
        "rowCovar",
        "协方差",
        "矩阵计算",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中计算两个矩阵的逐行协方差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rowCummax.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rowCummax.md",
      "start_line": 1,
      "end_line": 38,
      "summary": "rowCummax函数用于逐行计算矩阵或数组中元素的累积最大值。",
      "keywords": [
        "rowCummax",
        "累积最大值",
        "矩阵计算",
        "数组操作"
      ],
      "hypothetical_question": "如何在DolphinDB中计算矩阵或数组的逐行累积最大值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rowCummin.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rowCummin.md",
      "start_line": 1,
      "end_line": 38,
      "summary": "rowCummin函数用于逐行计算矩阵或数组中元素的累积最小值。",
      "keywords": [
        "rowCummin",
        "累积最小值",
        "矩阵计算",
        "数组函数"
      ],
      "hypothetical_question": "如何在DolphinDB中计算矩阵或数组的逐行累积最小值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rowCumsum.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rowCumsum.md",
      "start_line": 1,
      "end_line": 38,
      "summary": "rowCumsum函数用于逐行计算矩阵或数组中元素的累计和。",
      "keywords": [
        "rowCumsum",
        "累计和",
        "矩阵",
        "数组"
      ],
      "hypothetical_question": "如何在DolphinDB中计算矩阵或数组中元素的逐行累计和？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rowAt.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rowAt.md",
      "start_line": 1,
      "end_line": 117,
      "summary": "rowAt函数用于从矩阵、数组向量或列式元组中逐行取出对应索引的元素，支持多种索引类型并返回相应结果。",
      "keywords": [
        "rowAt",
        "矩阵",
        "数组向量",
        "列式元组",
        "索引"
      ],
      "hypothetical_question": "如何在DolphinDB中使用rowAt函数从矩阵中逐行取出指定索引的元素？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rowCumprod.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rowCumprod.md",
      "start_line": 1,
      "end_line": 38,
      "summary": "rowCumprod函数用于逐行计算矩阵或数组中元素的累积乘积。",
      "keywords": [
        "rowCumprod",
        "累积乘积",
        "矩阵计算",
        "数组操作"
      ],
      "hypothetical_question": "如何在DolphinDB中计算矩阵或数组的逐行累积乘积？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rowCumwsum.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rowCumwsum.md",
      "start_line": 1,
      "end_line": 46,
      "summary": "rowCumwsum函数用于逐行计算两个矩阵或数组的累积内积。",
      "keywords": [
        "rowCumwsum",
        "累积内积",
        "矩阵计算",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中计算两个矩阵的逐行累积内积？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rowDot.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rowDot.md",
      "start_line": 1,
      "end_line": 64,
      "summary": "rowDot函数用于计算两个数值型向量、数组向量或矩阵的行内积，支持不同数据结构的组合计算并处理NULL值。",
      "keywords": [
        "rowDot",
        "内积",
        "向量",
        "矩阵",
        "数组向量"
      ],
      "hypothetical_question": "如何在DolphinDB中计算两个向量或矩阵的行内积？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rowImin.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rowImin.md",
      "start_line": 1,
      "end_line": 60,
      "summary": "rowImin函数用于返回每行元素中最小元素的索引，如果有多个相同的最小值则返回左起第一个最小值的索引。",
      "keywords": [
        "rowImin",
        "索引",
        "最小值",
        "矩阵",
        "数组向量"
      ],
      "hypothetical_question": "如何在DolphinDB中获取每行元素中最小元素的索引？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rowImax.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rowImax.md",
      "start_line": 1,
      "end_line": 59,
      "summary": "rowImax函数用于返回每行元素中最大元素的索引，如果有多个相同的最大值，则返回左起第一个最大值的索引。",
      "keywords": [
        "rowImax",
        "索引",
        "最大值",
        "行函数"
      ],
      "hypothetical_question": "如何在DolphinDB中获取每行元素中最大值的索引？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rowDenseRank.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rowDenseRank.md",
      "start_line": 1,
      "end_line": 70,
      "summary": "rowDenseRank函数用于逐行计算矩阵元素的连续排名，支持升序或降序、忽略NULL值及百分比显示等参数。",
      "keywords": [
        "rowDenseRank",
        "矩阵排名",
        "连续排名",
        "NULL值处理"
      ],
      "hypothetical_question": "如何在DolphinDB中使用rowDenseRank函数计算矩阵元素的连续排名？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rowEuclidean.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rowEuclidean.md",
      "start_line": 1,
      "end_line": 58,
      "summary": "rowEuclidean函数用于计算两个数值型向量、数组向量或矩阵之间的欧式距离。",
      "keywords": [
        "rowEuclidean",
        "欧式距离",
        "向量",
        "矩阵",
        "数组向量"
      ],
      "hypothetical_question": "如何在DolphinDB中计算两个矩阵或向量之间的欧式距离？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rowKurtosis.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rowKurtosis.md",
      "start_line": 1,
      "end_line": 41,
      "summary": "rowKurtosis函数用于逐行计算矩阵或表中数据的峰度，支持有偏或无偏估计。",
      "keywords": [
        "rowKurtosis",
        "峰度",
        "有偏估计",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中计算矩阵或表数据的行峰度？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rowMin.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rowMin.md",
      "start_line": 1,
      "end_line": 45,
      "summary": "rowMin函数用于逐行计算输入参数的最小值，返回与输入行数相同的向量。",
      "keywords": [
        "rowMin",
        "最小值",
        "逐行计算",
        "向量"
      ],
      "hypothetical_question": "如何在DolphinDB中逐行计算矩阵或表中各行的最小值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rowMax.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rowMax.md",
      "start_line": 1,
      "end_line": 55,
      "summary": "rowMax函数用于逐行计算输入参数中的最大值，并返回与输入行数相同长度的向量。",
      "keywords": [
        "rowMax",
        "逐行计算",
        "最大值",
        "向量"
      ],
      "hypothetical_question": "如何在DolphinDB中逐行计算矩阵或表中的最大值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rowMove.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rowMove.md",
      "start_line": 1,
      "end_line": 60,
      "summary": "rowMove函数用于根据指定的步数逐行移动矩阵或数组中的元素。",
      "keywords": [
        "rowMove",
        "矩阵操作",
        "数组移动",
        "步数"
      ],
      "hypothetical_question": "如何在DolphinDB中逐行移动矩阵或数组中的元素？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rowNames.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rowNames.md",
      "start_line": 1,
      "end_line": 41,
      "summary": "rowNames函数用于返回矩阵的行名。",
      "keywords": [
        "rowNames",
        "矩阵",
        "行名",
        "DolphinDB"
      ],
      "hypothetical_question": "在DolphinDB中如何获取矩阵的行名？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rowNo.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rowNo.md",
      "start_line": 1,
      "end_line": 66,
      "summary": "rowNo函数用于在DolphinDB中生成从0开始的行号，并可通过示例了解其应用场景。",
      "keywords": [
        "rowNo",
        "行号",
        "DolphinDB",
        "向量"
      ],
      "hypothetical_question": "如何在DolphinDB中使用rowNo函数生成行号？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rowOr.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rowOr.md",
      "start_line": 1,
      "end_line": 37,
      "summary": "rowOr函数用于逐行进行逻辑或操作，返回与输入参数行数相同的向量。",
      "keywords": [
        "rowOr",
        "逻辑或",
        "逐行操作",
        "向量"
      ],
      "hypothetical_question": "如何在DolphinDB中对矩阵或表的行进行逻辑或操作？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rowStd.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rowStd.md",
      "start_line": 1,
      "end_line": 45,
      "summary": "rowStd函数用于逐行计算元素的样本标准差，返回与输入参数行数相同的向量。",
      "keywords": [
        "rowStd",
        "样本标准差",
        "逐行计算",
        "矩阵操作"
      ],
      "hypothetical_question": "如何在DolphinDB中逐行计算矩阵或表中元素的样本标准差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rowPrev.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rowPrev.md",
      "start_line": 1,
      "end_line": 42,
      "summary": "rowPrev函数用于将矩阵或数组中的元素逐行向右移动一个位置。",
      "keywords": [
        "rowPrev",
        "矩阵操作",
        "数组操作",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中将矩阵或数组中的元素逐行向右移动一个位置？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rowRank.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rowRank.md",
      "start_line": 1,
      "end_line": 122,
      "summary": "rowRank函数用于逐行计算矩阵元素的排名或组排名，支持多种排名方式和参数配置。",
      "keywords": [
        "rowRank",
        "矩阵排名",
        "参数配置",
        "排名方式"
      ],
      "hypothetical_question": "如何在DolphinDB中使用rowRank函数对矩阵进行逐行排名？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rowNext.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rowNext.md",
      "start_line": 1,
      "end_line": 42,
      "summary": "rowNext函数用于将矩阵或数组中的元素逐行向左移动一个位置。",
      "keywords": [
        "rowNext",
        "矩阵操作",
        "数组操作",
        "数据移动"
      ],
      "hypothetical_question": "DolphinDB中如何将矩阵或数组中的元素逐行向左移动一个位置？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rowSize.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rowSize.md",
      "start_line": 1,
      "end_line": 49,
      "summary": "rowSize函数用于逐行统计元素数量（包括空值），返回与输入参数行数相同的向量。",
      "keywords": [
        "rowSize",
        "逐行统计",
        "元素数量",
        "空值"
      ],
      "hypothetical_question": "DolphinDB中的rowSize函数有什么作用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rowSkew.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rowSkew.md",
      "start_line": 1,
      "end_line": 41,
      "summary": "rowSkew函数用于逐行计算矩阵或表中数据的斜度，支持有偏或无偏估计。",
      "keywords": [
        "rowSkew",
        "斜度",
        "有偏估计",
        "矩阵计算",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用rowSkew函数计算矩阵或表中数据的斜度？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rowStdp.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rowStdp.md",
      "start_line": 1,
      "end_line": 44,
      "summary": "rowStdp函数用于逐行计算元素的总体标准差，返回与输入行数相同的向量。",
      "keywords": [
        "rowStdp",
        "总体标准差",
        "逐行计算",
        "向量"
      ],
      "hypothetical_question": "如何在DolphinDB中逐行计算矩阵或表中元素的总体标准差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rowWavg.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rowWavg.md",
      "start_line": 1,
      "end_line": 43,
      "summary": "rowWavg函数用于逐行计算以Y为权重的X的加权平均值，返回与输入行数相同的向量。",
      "keywords": [
        "rowWavg",
        "加权平均",
        "矩阵计算"
      ],
      "hypothetical_question": "如何在DolphinDB中计算矩阵的逐行加权平均值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rowVar.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rowVar.md",
      "start_line": 1,
      "end_line": 45,
      "summary": "rowVar函数用于逐行计算矩阵或表中元素的样本方差。",
      "keywords": [
        "rowVar",
        "样本方差",
        "矩阵计算",
        "行函数"
      ],
      "hypothetical_question": "如何在DolphinDB中逐行计算矩阵或表中元素的样本方差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rowSum.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rowSum.md",
      "start_line": 1,
      "end_line": 45,
      "summary": "rowSum函数用于逐行对元素进行求和操作，返回与输入参数行数相同的向量。",
      "keywords": [
        "rowSum",
        "逐行求和",
        "矩阵计算",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用rowSum函数对矩阵或表中的数据进行逐行求和？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rowSum2.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rowSum2.md",
      "start_line": 1,
      "end_line": 45,
      "summary": "rowSum2函数用于逐行计算矩阵或表中元素的平方和。",
      "keywords": [
        "rowSum2",
        "平方和",
        "矩阵计算",
        "逐行操作"
      ],
      "hypothetical_question": "如何在DolphinDB中计算矩阵或表中每行元素的平方和？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rowVarp.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rowVarp.md",
      "start_line": 1,
      "end_line": 44,
      "summary": "rowVarp函数用于逐行计算矩阵或表中元素的总体方差，并返回与输入行数相同长度的向量。",
      "keywords": [
        "rowVarp",
        "总体方差",
        "矩阵计算",
        "行函数"
      ],
      "hypothetical_question": "如何在DolphinDB中使用rowVarp函数计算矩阵或表中每行的总体方差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rowTanimoto.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rowTanimoto.md",
      "start_line": 1,
      "end_line": 64,
      "summary": "rowTanimoto函数用于计算两个数值型向量、数组向量或矩阵之间的谷本距离，支持不同数据结构的输入并处理NULL值。",
      "keywords": [
        "rowTanimoto",
        "谷本距离",
        "数值型向量",
        "矩阵计算",
        "NULL处理"
      ],
      "hypothetical_question": "如何在DolphinDB中使用rowTanimoto函数计算两个矩阵之间的谷本距离？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rowWsum.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rowWsum.md",
      "start_line": 1,
      "end_line": 39,
      "summary": "rowWsum函数用于逐行计算两个矩阵或向量的内积，返回一个与输入行数相同的向量。",
      "keywords": [
        "rowWsum",
        "内积",
        "矩阵计算",
        "逐行计算"
      ],
      "hypothetical_question": "如何在DolphinDB中计算两个矩阵的逐行内积？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rowXor.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rowXor.md",
      "start_line": 1,
      "end_line": 50,
      "summary": "rowXor函数用于逐行进行逻辑异或操作，返回与输入参数行数相同的向量。",
      "keywords": [
        "rowXor",
        "逻辑异或",
        "逐行操作",
        "向量"
      ],
      "hypothetical_question": "如何在DolphinDB中对矩阵或表的行进行逻辑异或操作？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rowgmd5.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rowgmd5.md",
      "start_line": 1,
      "end_line": 38,
      "summary": "rowGmd5函数用于逐行计算数组向量或列式元组的gmd5值，返回一个INT128向量。",
      "keywords": [
        "rowGmd5",
        "gmd5",
        "数组向量",
        "列式元组",
        "INT128"
      ],
      "hypothetical_question": "如何在DolphinDB中逐行计算数组向量或列式元组的gmd5值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rowimaxlast.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rowimaxlast.md",
      "start_line": 1,
      "end_line": 43,
      "summary": "rowImaxLast函数用于返回每行元素中最大元素的索引，若有多个相同最大值则返回右起第一个最大值的索引。",
      "keywords": [
        "rowImaxLast",
        "最大值索引",
        "行计算"
      ],
      "hypothetical_question": "如何在DolphinDB中获取每行元素中最大值的索引，且在有多个相同最大值时返回最右边的索引？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rowiminlast.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rowiminlast.md",
      "start_line": 1,
      "end_line": 43,
      "summary": "rowIminLast函数用于返回每行元素中最小元素的索引，若有多个相同最小值则返回右起第一个最小值的索引。",
      "keywords": [
        "rowIminLast",
        "行计算",
        "索引",
        "最小值"
      ],
      "hypothetical_question": "在DolphinDB中如何获取每行元素中最小元素的索引，若有多个相同最小值时如何处理？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rshift.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rshift.md",
      "start_line": 1,
      "end_line": 34,
      "summary": "rshift函数用于按位右移操作，支持标量、数据对、向量或矩阵作为输入参数。",
      "keywords": [
        "rshift",
        "按位右移",
        "位运算",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中如何实现按位右移操作？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rpc.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rpc.md",
      "start_line": 1,
      "end_line": 53,
      "summary": "DolphinDB的rpc函数用于在指定远程节点上调用本地函数并将结果返回本地节点。",
      "keywords": [
        "rpc",
        "远程调用",
        "DolphinDB",
        "函数调用"
      ],
      "hypothetical_question": "如何在DolphinDB中远程调用一个函数并获取结果？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rpad.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rpad.md",
      "start_line": 1,
      "end_line": 35,
      "summary": "rpad函数用于在字符串的右边填充特定字符串或截断字符串至指定长度。",
      "keywords": [
        "rpad",
        "字符串填充",
        "字符串截断",
        "字符串处理"
      ],
      "hypothetical_question": "如何在DolphinDB中使用rpad函数在字符串右边填充特定字符或截断字符串？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rows.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rows.md",
      "start_line": 1,
      "end_line": 53,
      "summary": "介绍DolphinDB中的rows函数，用于返回向量、矩阵或表中的行数。",
      "keywords": [
        "rows",
        "行数",
        "向量",
        "矩阵",
        "表"
      ],
      "hypothetical_question": "如何在DolphinDB中获取向量、矩阵或表的行数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rtrim.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rtrim.md",
      "start_line": 1,
      "end_line": 22,
      "summary": "rtrim函数用于删除字符串或字符串向量中每个元素右边的空格。",
      "keywords": [
        "rtrim",
        "字符串处理",
        "空格删除"
      ],
      "hypothetical_question": "如何在DolphinDB中删除字符串右边的空格？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/runScript.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/runScript.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "runScript函数用于本地执行一段脚本，需要用户登录后才能执行。",
      "keywords": [
        "runScript",
        "脚本执行",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中本地执行一段脚本？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/run.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/run.md",
      "start_line": 1,
      "end_line": 39,
      "summary": "DolphinDB的run函数用于执行服务器端的脚本文件，并支持在新session中运行或清理当前session变量。",
      "keywords": [
        "run",
        "scriptFile",
        "newSession",
        "clean",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中执行一个服务器端的脚本文件并控制session和变量的清理行为？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/runsql.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/runsql.md",
      "start_line": 1,
      "end_line": 95,
      "summary": "runSQL函数用于根据指定的SQL方言解析并执行脚本，支持动态传递参数以提高安全性和易维护性。",
      "keywords": [
        "runSQL",
        "SQL方言",
        "动态参数",
        "Oracle",
        "MySQL"
      ],
      "hypothetical_question": "如何在DolphinDB中使用runSQL函数执行动态SQL查询并传递参数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/StreamGraph_name.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/StreamGraph_name.md",
      "start_line": 1,
      "end_line": 22,
      "summary": "StreamGraph::name 函数用于获取流图的全限定名（FQN）。",
      "keywords": [
        "StreamGraph",
        "name",
        "FQN",
        "全限定名"
      ],
      "hypothetical_question": "如何获取 DolphinDB 中流图的全限定名？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/StreamGraph_haKeyedSource.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/StreamGraph_haKeyedSource.md",
      "start_line": 1,
      "end_line": 59,
      "summary": "该文档详细介绍了DolphinDB中StreamGraph::haKeyedSource函数的语法、参数和功能，用于创建一个高可用键值流数据表。",
      "keywords": [
        "StreamGraph",
        "haKeyedSource",
        "高可用流数据表",
        "DolphinDB",
        "Raft组"
      ],
      "hypothetical_question": "如何在DolphinDB中创建一个高可用键值流数据表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/StreamGraph_haSource.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/StreamGraph_haSource.md",
      "start_line": 1,
      "end_line": 59,
      "summary": "介绍了DolphinDB中StreamGraph::haSource函数的语法、参数、返回值及用法，用于创建高可用流数据表。",
      "keywords": [
        "StreamGraph::haSource",
        "高可用流数据表",
        "DolphinDB",
        "raftGroup",
        "cacheLimit"
      ],
      "hypothetical_question": "如何在DolphinDB中使用StreamGraph::haSource函数创建高可用流数据表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/StreamGraph_keyedSource.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/StreamGraph_keyedSource.md",
      "start_line": 1,
      "end_line": 88,
      "summary": "介绍了DolphinDB中StreamGraph::keyedSource函数的语法、参数和功能，用于创建持久化键值流数据表。",
      "keywords": [
        "StreamGraph",
        "keyedSource",
        "持久化流表",
        "DolphinDB",
        "参数配置"
      ],
      "hypothetical_question": "如何在DolphinDB中使用StreamGraph::keyedSource函数创建持久化键值流数据表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/StreamGraph_latestKeyedSource.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/StreamGraph_latestKeyedSource.md",
      "start_line": 1,
      "end_line": 87,
      "summary": "介绍了DolphinDB中StreamGraph::latestKeyedSource函数的语法、参数和功能，用于创建并持久化最新值键值流数据表。",
      "keywords": [
        "StreamGraph",
        "latestKeyedSource",
        "流数据表",
        "持久化",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中创建并持久化一个最新值键值流数据表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/StreamGraph_setConfigMap.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/StreamGraph_setConfigMap.md",
      "start_line": 1,
      "end_line": 38,
      "summary": "StreamGraph::setConfigMap用于设置流图中私有流表和订阅的相关配置参数。",
      "keywords": [
        "StreamGraph",
        "setConfigMap",
        "流图配置",
        "私有流表",
        "订阅参数"
      ],
      "hypothetical_question": "如何使用StreamGraph::setConfigMap来配置流图中的私有流表和订阅参数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/StreamGraph_str.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/StreamGraph_str.md",
      "start_line": 1,
      "end_line": 65,
      "summary": "StreamGraph::str方法用于以字符串格式输出流图拓扑结构。",
      "keywords": [
        "StreamGraph",
        "str",
        "拓扑结构",
        "流图"
      ],
      "hypothetical_question": "如何在DolphinDB中以字符串格式输出流图拓扑结构？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/StreamGraph_source.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/StreamGraph_source.md",
      "start_line": 1,
      "end_line": 84,
      "summary": "介绍DolphinDB中StreamGraph::source函数的语法、参数和功能，用于创建持久化共享流数据表。",
      "keywords": [
        "StreamGraph",
        "source",
        "流数据表",
        "持久化",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用StreamGraph::source函数创建持久化共享流数据表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/StreamGraph_sourceByName.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/StreamGraph_sourceByName.md",
      "start_line": 1,
      "end_line": 49,
      "summary": "StreamGraph::sourceByName 函数用于按表名引用流图中已提交的共享流表对象，并返回一个 DStream 对象。",
      "keywords": [
        "StreamGraph",
        "sourceByName",
        "DStream",
        "共享流表",
        "流图"
      ],
      "hypothetical_question": "如何在 DolphinDB 中引用已提交的共享流表对象？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/StreamGraph_toGraphviz.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/StreamGraph_toGraphviz.md",
      "start_line": 1,
      "end_line": 51,
      "summary": "StreamGraph::toGraphviz方法用于以Graphviz格式输出流图拓扑结构。",
      "keywords": [
        "StreamGraph",
        "toGraphviz",
        "Graphviz",
        "流图拓扑"
      ],
      "hypothetical_question": "如何在DolphinDB中以Graphviz格式输出流图拓扑结构？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/StreamGraph_submit.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/StreamGraph_submit.md",
      "start_line": 1,
      "end_line": 79,
      "summary": "介绍如何使用StreamGraph::submit函数提交流图并配置checkpoint参数。",
      "keywords": [
        "StreamGraph",
        "submit",
        "checkpoint",
        "流图",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用StreamGraph::submit函数提交流图并配置checkpoint参数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/saveDatabase.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/saveDatabase.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "介绍了DolphinDB中saveDatabase函数的语法、参数、用途及示例，说明其用于保存数据库句柄并需用户登录后执行。",
      "keywords": [
        "saveDatabase",
        "数据库句柄",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中保存数据库句柄？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/saveModel.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/saveModel.md",
      "start_line": 1,
      "end_line": 31,
      "summary": "saveModel函数用于将机器学习模型保存到本地文件中。",
      "keywords": [
        "saveModel",
        "机器学习",
        "模型保存"
      ],
      "hypothetical_question": "如何在DolphinDB中保存机器学习模型？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/saveAsNpy.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/saveAsNpy.md",
      "start_line": 1,
      "end_line": 40,
      "summary": "介绍如何使用DolphinDB的saveAsNpy函数将向量或矩阵保存为Python Numpy支持的npy格式文件。",
      "keywords": [
        "saveAsNpy",
        "npy",
        "DolphinDB",
        "Python",
        "Numpy"
      ],
      "hypothetical_question": "如何在DolphinDB中将向量或矩阵保存为Python Numpy的npy格式文件？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/savePartition.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/savePartition.md",
      "start_line": 1,
      "end_line": 58,
      "summary": "savePartition函数用于将内存中的表保存为分布式数据库中的分区表，需要先创建空的分区表并登录后执行。",
      "keywords": [
        "savePartition",
        "分布式数据库",
        "分区表",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中将内存中的表保存为分布式数据库的分区表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/saveModule.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/saveModule.md",
      "start_line": 1,
      "end_line": 34,
      "summary": "saveModule函数用于将模块序列化为二进制文件以增强代码的保密性和安全性。",
      "keywords": [
        "saveModule",
        "模块序列化",
        "二进制文件"
      ],
      "hypothetical_question": "如何在DolphinDB中将模块序列化为二进制文件以增强安全性？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/saveDualPartition.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/saveDualPartition.md",
      "start_line": 1,
      "end_line": 45,
      "summary": "介绍如何使用saveDualPartition函数将表保存为组合分区，并说明其参数和用法。",
      "keywords": [
        "saveDualPartition",
        "组合分区",
        "数据库分区",
        "DolphinDB",
        "共享表"
      ],
      "hypothetical_question": "如何在DolphinDB中将表保存为组合分区？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/saveTable.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/saveTable.md",
      "start_line": 1,
      "end_line": 64,
      "summary": "介绍如何使用saveTable函数将内存中的表保存到未分区的本地磁盘表中。",
      "keywords": [
        "saveTable",
        "本地磁盘表",
        "未分区数据库"
      ],
      "hypothetical_question": "如何在DolphinDB中将内存表保存为本地磁盘表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/saveText.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/saveText.md",
      "start_line": 1,
      "end_line": 82,
      "summary": "介绍DolphinDB中的saveText函数，用于将变量或SQL读取的数据保存为CSV格式的文本文件。",
      "keywords": [
        "saveText",
        "CSV",
        "DolphinDB",
        "数据导出"
      ],
      "hypothetical_question": "如何在DolphinDB中将数据表保存为CSV文件？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/saveTextFile.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/saveTextFile.md",
      "start_line": 1,
      "end_line": 33,
      "summary": "介绍了DolphinDB中saveTextFile函数的语法、参数、功能和使用示例，用于将字符串内容保存到CSV文件中。",
      "keywords": [
        "saveTextFile",
        "文件保存",
        "CSV",
        "DolphinDB",
        "字符串写入"
      ],
      "hypothetical_question": "如何在DolphinDB中将字符串内容保存到CSV文件中？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/scheduleJob.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/scheduleJob.md",
      "start_line": 1,
      "end_line": 105,
      "summary": "介绍DolphinDB中scheduleJob函数的语法、参数、详情及使用示例，用于创建和管理定时任务。",
      "keywords": [
        "scheduleJob",
        "定时任务",
        "DolphinDB",
        "任务调度",
        "回调函数"
      ],
      "hypothetical_question": "如何在DolphinDB中创建和管理定时任务？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/scramClientFinal.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/scramClientFinal.md",
      "start_line": 1,
      "end_line": 47,
      "summary": "该文本片段展示了使用SCRAM模式进行客户端和服务端双向认证的完整流程。",
      "keywords": [
        "SCRAM",
        "认证",
        "客户端",
        "服务端",
        "双向认证"
      ],
      "hypothetical_question": "如何在DolphinDB中实现SCRAM模式的双向认证？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/scramClientFirst.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/scramClientFirst.md",
      "start_line": 1,
      "end_line": 47,
      "summary": "该文本片段展示了如何使用SCRAM模式进行客户端和服务端之间的认证流程。",
      "keywords": [
        "SCRAM",
        "认证",
        "客户端",
        "服务端",
        "密码"
      ],
      "hypothetical_question": "如何在DolphinDB中使用SCRAM模式进行客户端和服务端之间的认证？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/schur.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/schur.md",
      "start_line": 1,
      "end_line": 93,
      "summary": "该文档详细介绍了DolphinDB中用于计算矩阵Schur分解的函数`schur`的语法、参数、功能及示例。",
      "keywords": [
        "Schur分解",
        "矩阵计算",
        "DolphinDB函数"
      ],
      "hypothetical_question": "DolphinDB中如何进行矩阵的Schur分解？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/schema.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/schema.md",
      "start_line": 1,
      "end_line": 286,
      "summary": "DolphinDB的`schema`函数用于显示数据表或数据库的结构信息，包括字段定义、分区信息、压缩方法等。",
      "keywords": [
        "schema",
        "DolphinDB",
        "数据结构",
        "分区表",
        "数据库"
      ],
      "hypothetical_question": "如何在DolphinDB中查看数据表或数据库的结构信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/scs.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/scs.md",
      "start_line": 1,
      "end_line": 82,
      "summary": "scs函数用于求解目标函数在约束条件下的最优解，返回目标函数的最小值及其对应的变量取值。",
      "keywords": [
        "scs",
        "约束优化",
        "二次规划",
        "最优解",
        "线性约束"
      ],
      "hypothetical_question": "如何在DolphinDB中使用scs函数求解带约束的二次规划问题？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/searchK.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/searchK.md",
      "start_line": 1,
      "end_line": 34,
      "summary": "searchK函数用于返回向量中第k小的元素，忽略NULL值。",
      "keywords": [
        "searchK",
        "向量",
        "第k小元素",
        "NULL值"
      ],
      "hypothetical_question": "如何在DolphinDB中获取向量中第k小的元素并忽略NULL值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/second.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/second.md",
      "start_line": 1,
      "end_line": 66,
      "summary": "DolphinDB的second函数用于返回时间或数值对应的秒数，返回类型为SECOND。",
      "keywords": [
        "second",
        "时间函数",
        "DolphinDB",
        "秒数"
      ],
      "hypothetical_question": "DolphinDB中如何获取时间或数值对应的秒数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/seasonalEsd.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/seasonalEsd.md",
      "start_line": 1,
      "end_line": 52,
      "summary": "介绍了DolphinDB中的seasonalEsd函数，该函数使用S-ESD算法对周期性时间序列进行异常检测。",
      "keywords": [
        "seasonalEsd",
        "异常检测",
        "时间序列",
        "S-ESD算法"
      ],
      "hypothetical_question": "如何在DolphinDB中使用seasonalEsd函数进行周期性时间序列的异常检测？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/secondOfMinute.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/secondOfMinute.md",
      "start_line": 1,
      "end_line": 29,
      "summary": "secondOfMinute函数用于返回给定时间或时间序列中的秒数。",
      "keywords": [
        "secondOfMinute",
        "时间函数",
        "秒数"
      ],
      "hypothetical_question": "如何在DolphinDB中获取时间或时间序列中的秒数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/sem.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/sem.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "该文本片段介绍了DolphinDB中的sem函数，用于计算数值型向量、矩阵或表的平均值的标准误差。",
      "keywords": [
        "sem",
        "标准误差",
        "DolphinDB",
        "数值计算"
      ],
      "hypothetical_question": "在DolphinDB中如何计算数值型数据的标准误差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/segment.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/segment.md",
      "start_line": 1,
      "end_line": 53,
      "summary": "介绍DolphinDB中的segment函数，用于将向量中连续相同的元素分组，并返回分组信息。",
      "keywords": [
        "segment",
        "分组",
        "向量",
        "连续相同元素",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用segment函数对向量中的连续相同元素进行分组？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/seek.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/seek.md",
      "start_line": 1,
      "end_line": 45,
      "summary": "seek函数用于操作文件内部游标的位置，支持设置偏移量和模式（HEAD, CURRENT, TAIL）。",
      "keywords": [
        "seek",
        "文件句柄",
        "游标",
        "偏移量",
        "文件操作"
      ],
      "hypothetical_question": "如何在DolphinDB中使用seek函数移动文件内部游标？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/semiMonthBegin.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/semiMonthBegin.md",
      "start_line": 1,
      "end_line": 97,
      "summary": "semiMonthBegin函数用于返回给定日期所在半月的第一天，支持自定义半月的分割日和偏移量。",
      "keywords": [
        "semiMonthBegin",
        "日期函数",
        "半月计算",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中计算一个日期所在半月的第一天？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/seq.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/seq.md",
      "start_line": 1,
      "end_line": 45,
      "summary": "介绍 DolphinDB 中的 seq 函数，用于生成从 start 到 end 的序列，支持整型和时间类型。",
      "keywords": [
        "seq",
        "序列生成",
        "整型",
        "时间类型",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在 DolphinDB 中生成一个从 start 到 end 的序列？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/semiMonthEnd.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/semiMonthEnd.md",
      "start_line": 1,
      "end_line": 87,
      "summary": "semiMonthEnd函数用于返回给定日期所在半月的最后一天，支持自定义半月划分点和偏移量。",
      "keywords": [
        "semiMonthEnd",
        "日期函数",
        "半月计算"
      ],
      "hypothetical_question": "如何在DolphinDB中计算给定日期所在半月的最后一天？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/set.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/set.md",
      "start_line": 1,
      "end_line": 37,
      "summary": "介绍DolphinDB中的set函数，用于将向量转换为集合对象，并展示其与distinct函数的区别。",
      "keywords": [
        "set",
        "集合",
        "向量",
        "distinct",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中如何将向量转换为集合对象？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/sessionWindow.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/sessionWindow.md",
      "start_line": 1,
      "end_line": 96,
      "summary": "sessionWindow函数用于根据指定的会话间隔将时间或整型数据划分为会话窗口，并返回每个元素所属窗口的编号。",
      "keywords": [
        "sessionWindow",
        "会话窗口",
        "时间序列",
        "数据分析",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用sessionWindow函数对时间序列数据进行会话窗口划分？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/setAtomicLevel.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/setAtomicLevel.md",
      "start_line": 1,
      "end_line": 48,
      "summary": "介绍了DolphinDB中setAtomicLevel函数的语法、参数、用途及示例，用于设置分布式数据库的并发写入权限。",
      "keywords": [
        "setAtomicLevel",
        "分布式数据库",
        "并发写入",
        "原子性层级",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中设置分布式数据库的并发写入权限？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/setCacheEngineMemSize.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/setCacheEngineMemSize.md",
      "start_line": 1,
      "end_line": 31,
      "summary": "介绍如何使用 `setCacheEngineMemSize` 命令在线修改 DolphinDB 的 Cache Engine 容量及其使用场景。",
      "keywords": [
        "setCacheEngineMemSize",
        "Cache Engine",
        "OLAP",
        "内存管理",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在 DolphinDB 中在线修改 Cache Engine 的容量？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/setChunkLastUpdateTime.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/setChunkLastUpdateTime.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "该文档介绍了DolphinDB中用于手动设置指定分区上次更新时间的函数setChunkLastUpdateTime的语法、参数、使用详情及示例。",
      "keywords": [
        "setChunkLastUpdateTime",
        "分区更新时间",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中手动设置指定分区的上次更新时间？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/setDatabaseForClusterReplication.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/setDatabaseForClusterReplication.md",
      "start_line": 1,
      "end_line": 18,
      "summary": "介绍如何使用setDatabaseForClusterReplication函数开启或关闭分布式数据库的集群间异步复制功能。",
      "keywords": [
        "setDatabaseForClusterReplication",
        "分布式数据库",
        "异步复制",
        "数据库句柄"
      ],
      "hypothetical_question": "如何在DolphinDB中开启或关闭分布式数据库的集群间异步复制？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/setIndexedMatrix_.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/setIndexedMatrix_.md",
      "start_line": 1,
      "end_line": 32,
      "summary": "介绍DolphinDB中的setIndexedMatrix!函数，用于在普通矩阵和索引矩阵之间进行转换。",
      "keywords": [
        "setIndexedMatrix!",
        "矩阵转换",
        "索引矩阵",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中将普通矩阵转换为索引矩阵？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/setDefaultCatalog.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/setDefaultCatalog.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "该文本片段介绍了DolphinDB中setDefaultCatalog函数的语法、参数、功能及使用示例，用于设置或重置当前session的默认catalog。",
      "keywords": [
        "setDefaultCatalog",
        "catalog",
        "session",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中设置或重置当前session的默认catalog？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/setColumnarTuple_.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/setColumnarTuple_.md",
      "start_line": 1,
      "end_line": 41,
      "summary": "介绍如何使用 setColumnarTuple! 函数在 tuple 和 columnar tuple 之间进行转换。",
      "keywords": [
        "setColumnarTuple",
        "tuple",
        "columnar tuple",
        "conversion",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在 DolphinDB 中将 tuple 转换为 columnar tuple 或反之？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/setDatanodeRestartInterval.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/setDatanodeRestartInterval.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "setDatanodeRestartInterval函数用于在线设置控制节点自动重启计算节点/数据节点的时间间隔。",
      "keywords": [
        "setDatanodeRestartInterval",
        "控制节点",
        "自动重启",
        "数据节点"
      ],
      "hypothetical_question": "如何设置DolphinDB控制节点自动重启数据节点的时间间隔？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/setLogLevel.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/setLogLevel.md",
      "start_line": 1,
      "end_line": 14,
      "summary": "setLogLevel函数用于在线设置当前节点的日志文件等级，仅管理员可调用。",
      "keywords": [
        "setLogLevel",
        "日志等级",
        "管理员"
      ],
      "hypothetical_question": "如何在DolphinDB中设置节点的日志文件等级？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/setIndexedSeries_.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/setIndexedSeries_.md",
      "start_line": 1,
      "end_line": 36,
      "summary": "介绍DolphinDB中setIndexedSeries!函数的语法、参数和用法，用于将有行标签的单列矩阵转换为索引序列。",
      "keywords": [
        "setIndexedSeries!",
        "索引序列",
        "矩阵转换",
        "行标签"
      ],
      "hypothetical_question": "如何在DolphinDB中将一个有行标签的单列矩阵转换为索引序列？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/setColumnComment.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/setColumnComment.md",
      "start_line": 1,
      "end_line": 65,
      "summary": "该文档介绍了如何使用`setColumnComment`函数为DolphinDB中的分布式表或mvcc表的列添加注释，并通过`schema`函数查看这些注释。",
      "keywords": [
        "setColumnComment",
        "分布式表",
        "mvcc表",
        "列注释",
        "schema"
      ],
      "hypothetical_question": "如何在DolphinDB中为表的列添加注释并查看这些注释？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/setMaxJobPriority.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/setMaxJobPriority.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "该函数用于为指定用户设置提交作业的最高优先级。",
      "keywords": [
        "setMaxJobPriority",
        "作业优先级",
        "用户权限"
      ],
      "hypothetical_question": "如何在DolphinDB中设置用户提交作业的最高优先级？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/setMaxJobParallelism.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/setMaxJobParallelism.md",
      "start_line": 1,
      "end_line": 28,
      "summary": "setMaxJobParallelism函数用于设置用户提交作业的最大并行子任务数。",
      "keywords": [
        "setMaxJobParallelism",
        "作业并行度",
        "用户权限"
      ],
      "hypothetical_question": "如何在DolphinDB中设置用户作业的最大并行子任务数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/setMaxBlockSizeForReservedMemory.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/setMaxBlockSizeForReservedMemory.md",
      "start_line": 1,
      "end_line": 17,
      "summary": "介绍如何使用setMaxBlockSizeForReservedMemory命令在线修改系统预留内存的最大内存块大小，并说明其临时性和永久配置方法。",
      "keywords": [
        "setMaxBlockSizeForReservedMemory",
        "预留内存",
        "内存块大小",
        "管理员命令",
        "临时配置"
      ],
      "hypothetical_question": "如何在线修改DolphinDB系统预留内存的最大内存块大小？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/setMaxConnections.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/setMaxConnections.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "setMaxConnections函数用于在线修改当前节点的最大连接数，仅管理员可执行，且修改值必须大于当前连接数。",
      "keywords": [
        "setMaxConnections",
        "最大连接数",
        "管理员",
        "在线修改",
        "getClusterPerf"
      ],
      "hypothetical_question": "如何在线修改DolphinDB节点的最大连接数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/setMaxMemSize.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/setMaxMemSize.md",
      "start_line": 1,
      "end_line": 33,
      "summary": "该文档详细介绍了DolphinDB中setMaxMemSize函数的语法、参数、功能及注意事项，用于在线修改系统最大内存空间和紧急内存区大小。",
      "keywords": [
        "setMaxMemSize",
        "内存管理",
        "DolphinDB",
        "紧急内存区"
      ],
      "hypothetical_question": "如何在DolphinDB中在线修改最大内存空间和紧急内存区大小？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/setMaxTransactionSize.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/setMaxTransactionSize.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "setMaxTransactionSize函数用于在线修改DolphinDB节点的单次写入事务大小上限，需管理员权限且不可超过对应Cache Engine大小。",
      "keywords": [
        "setMaxTransactionSize",
        "写入事务上限",
        "Cache Engine",
        "DolphinDB",
        "内存管理"
      ],
      "hypothetical_question": "如何在DolphinDB中设置单次写入事务的大小上限？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/setMemLimitOfQueryResult.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/setMemLimitOfQueryResult.md",
      "start_line": 1,
      "end_line": 16,
      "summary": "setMemLimitOfQueryResult函数用于在线修改单次查询结果占用的最大内存上限，仅限管理员在数据节点/计算节点执行。",
      "keywords": [
        "setMemLimitOfQueryResult",
        "内存上限",
        "查询结果",
        "管理员"
      ],
      "hypothetical_question": "如何修改DolphinDB中单次查询结果占用的最大内存上限？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/setMemLimitOfTaskGroupResult.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/setMemLimitOfTaskGroupResult.md",
      "start_line": 1,
      "end_line": 16,
      "summary": "该函数用于在线修改当前节点发送的批量子查询占用的内存上限，仅限管理员在数据节点/计算节点执行。",
      "keywords": [
        "setMemLimitOfTaskGroupResult",
        "内存上限",
        "批量子查询",
        "管理员"
      ],
      "hypothetical_question": "如何在DolphinDB中修改批量子查询的内存上限？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/setMemLimitOfTempResult.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/setMemLimitOfTempResult.md",
      "start_line": 1,
      "end_line": 17,
      "summary": "setMemLimitOfTempResult函数用于在线修改表连接过程中产生的临时数据表的大小限制，单位为GB，且只能由管理员在数据节点/计算节点上执行。",
      "keywords": [
        "setMemLimitOfTempResult",
        "临时数据表",
        "内存限制",
        "表连接",
        "管理员"
      ],
      "hypothetical_question": "如何在DolphinDB中修改表连接过程中产生的临时数据表的大小限制？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/setOLAPCacheEngineSize.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/setOLAPCacheEngineSize.md",
      "start_line": 1,
      "end_line": 33,
      "summary": "介绍了如何使用 setOLAPCacheEngineSize 命令在线修改 OLAP 引擎的 Cache Engine 容量，并说明了其使用场景和注意事项。",
      "keywords": [
        "setOLAPCacheEngineSize",
        "Cache Engine",
        "OLAP",
        "内存配置",
        "数据写入"
      ],
      "hypothetical_question": "如何在线修改 DolphinDB 中 OLAP 引擎的 Cache Engine 容量？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/setOrcaCheckpointConfig.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/setOrcaCheckpointConfig.md",
      "start_line": 1,
      "end_line": 41,
      "summary": "介绍如何使用 `setOrcaCheckpointConfig` 函数动态修改流图的 Checkpoint 配置。",
      "keywords": [
        "setOrcaCheckpointConfig",
        "Checkpoint",
        "流图配置",
        "动态修改"
      ],
      "hypothetical_question": "如何在 DolphinDB 中动态修改流图的 Checkpoint 配置？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/setReservedMemSize.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/setReservedMemSize.md",
      "start_line": 1,
      "end_line": 21,
      "summary": "介绍如何使用`setReservedMemSize`函数在线修改系统预留内存空间的大小及其注意事项。",
      "keywords": [
        "setReservedMemSize",
        "预留内存",
        "maxMemSize",
        "紧急内存区"
      ],
      "hypothetical_question": "如何在线修改DolphinDB系统的预留内存空间大小？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/setRandomSeed.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/setRandomSeed.md",
      "start_line": 1,
      "end_line": 23,
      "summary": "介绍了DolphinDB中setRandomSeed函数的语法、参数、详情和使用示例。",
      "keywords": [
        "setRandomSeed",
        "随机数种子",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中设置随机数种子？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/setTSDBCacheEngineSize.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/setTSDBCacheEngineSize.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "介绍如何使用 `setTSDBCacheEngineSize` 函数在线修改 DolphinDB TSDB 引擎的 Cache Engine 容量。",
      "keywords": [
        "setTSDBCacheEngineSize",
        "TSDB",
        "Cache Engine",
        "内存管理",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在 DolphinDB 中在线修改 TSDB 引擎的 Cache Engine 容量？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/setSystem.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/setSystem.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "setSystem函数用于设置系统级参数，如命令行窗口显示对象的最大行数和行宽，仅管理员有权限执行。",
      "keywords": [
        "setSystem",
        "系统参数",
        "命令行窗口",
        "管理员权限"
      ],
      "hypothetical_question": "如何在DolphinDB中设置命令行窗口显示对象的最大行数和行宽？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/setTimeoutTick.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/setTimeoutTick.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "介绍如何使用setTimeoutTick命令动态设置控制节点判断数据节点是否在线的超时时间。",
      "keywords": [
        "setTimeoutTick",
        "超时时间",
        "控制节点",
        "数据节点"
      ],
      "hypothetical_question": "如何在DolphinDB中动态设置控制节点判断数据节点是否在线的超时时间？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/setStreamTableFilterColumn.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/setStreamTableFilterColumn.md",
      "start_line": 1,
      "end_line": 34,
      "summary": "该文档介绍了如何使用 `setStreamTableFilterColumn` 函数指定流数据表的过滤列，以便在订阅时只发布符合过滤条件的数据。",
      "keywords": [
        "setStreamTableFilterColumn",
        "流数据表",
        "过滤列",
        "subscribeTable",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在 DolphinDB 中设置流数据表的过滤列以实现数据订阅时的条件过滤？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/setTableSensitiveColumn.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/setTableSensitiveColumn.md",
      "start_line": 1,
      "end_line": 63,
      "summary": "介绍了如何使用 `setTableSensitiveColumn` 函数将表的列设置为敏感列，并控制不同用户对敏感数据的访问权限。",
      "keywords": [
        "敏感列",
        "脱敏处理",
        "权限控制",
        "DFS表"
      ],
      "hypothetical_question": "如何在 DolphinDB 中设置表的敏感列并控制用户访问权限？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/setRetentionPolicy.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/setRetentionPolicy.md",
      "start_line": 1,
      "end_line": 67,
      "summary": "该文档详细介绍了DolphinDB中setRetentionPolicy函数的语法、参数、功能及使用示例，用于设置分布式数据库的数据保留和分级存储策略。",
      "keywords": [
        "setRetentionPolicy",
        "数据保留策略",
        "分级存储"
      ],
      "hypothetical_question": "如何在DolphinDB中设置分布式数据库的数据保留和分级存储策略？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/setRaftElectionTick.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/setRaftElectionTick.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "该文档介绍了 `setRaftElectionTick` 函数的语法、参数和功能，用于动态配置 raft 组内 follower 发起 leader 选举的时间区间。",
      "keywords": [
        "setRaftElectionTick",
        "raftElectionTick",
        "leader election"
      ],
      "hypothetical_question": "如何动态配置 DolphinDB 中 raft 组内 follower 发起 leader 选举的时间区间？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/setcomputenodecachingdelay.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/setcomputenodecachingdelay.md",
      "start_line": 1,
      "end_line": 22,
      "summary": "setComputeNodeCachingDelay函数用于在线设置当前节点下配置项computeNodeCachingDelay的生效值，只能由管理员在控制节点执行。",
      "keywords": [
        "setComputeNodeCachingDelay",
        "computeNodeCachingDelay",
        "配置项",
        "管理员",
        "控制节点"
      ],
      "hypothetical_question": "如何在DolphinDB中设置computeNodeCachingDelay配置项的生效值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/setdatabaseclusterreplicationexecutionset.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/setdatabaseclusterreplicationexecutionset.md",
      "start_line": 1,
      "end_line": 23,
      "summary": "该函数用于为数据库设置异步复制任务的执行集，确保不同执行集的任务相互隔离。",
      "keywords": [
        "setDatabaseClusterReplicationExecutionSet",
        "异步复制",
        "执行集",
        "数据库"
      ],
      "hypothetical_question": "如何设置DolphinDB数据库的异步复制任务执行集？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/setgpfitnessfunc.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/setgpfitnessfunc.md",
      "start_line": 1,
      "end_line": 63,
      "summary": "介绍如何使用 `setGpFitnessFunc` 函数重置 GPLearn 引擎的适应度函数，包括参数说明和自定义函数示例。",
      "keywords": [
        "setGpFitnessFunc",
        "GPLearn",
        "适应度函数",
        "自定义函数"
      ],
      "hypothetical_question": "如何在 DolphinDB 中重置 GPLearn 引擎的适应度函数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/setmemlimitofalltempresults.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/setmemlimitofalltempresults.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "该函数用于设置分布式查询操作中临时表允许占用的内存上限。",
      "keywords": [
        "setMemLimitOfAllTempResults",
        "临时表",
        "内存上限"
      ],
      "hypothetical_question": "如何设置DolphinDB中分布式查询操作临时表的内存上限？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/setdynamicconfig.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/setdynamicconfig.md",
      "start_line": 1,
      "end_line": 38,
      "summary": "介绍DolphinDB中setDynamicConfig函数的语法、参数、功能及使用示例，用于在线修改系统配置项。",
      "keywords": [
        "setDynamicConfig",
        "动态配置",
        "DolphinDB",
        "系统配置",
        "在线修改"
      ],
      "hypothetical_question": "如何在DolphinDB中在线修改系统配置项？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/setstreamtabletimestamp.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/setstreamtabletimestamp.md",
      "start_line": 1,
      "end_line": 36,
      "summary": "介绍了如何使用setStreamTableTimestamp函数为流数据表设置时间戳列以记录数据写入时的系统时间。",
      "keywords": [
        "setStreamTableTimestamp",
        "流数据表",
        "时间戳列",
        "数据写入延迟"
      ],
      "hypothetical_question": "如何在DolphinDB中为流数据表设置时间戳列以记录数据写入时间？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/setsessionexpiredtime.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/setsessionexpiredtime.md",
      "start_line": 1,
      "end_line": 21,
      "summary": "setSessionExpiredTime函数用于在启用严格安全策略时设置会话的有效期限。",
      "keywords": [
        "setSessionExpiredTime",
        "会话过期时间",
        "strictSecurityPolicy"
      ],
      "hypothetical_question": "如何在DolphinDB中设置会话的过期时间？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/setprefetchcomputenodedata.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/setprefetchcomputenodedata.md",
      "start_line": 1,
      "end_line": 22,
      "summary": "setPrefetchComputeNodeData函数用于在线设置当前节点下配置项enableComputeNodePrefetchData的生效值，仅限管理员在控制节点执行。",
      "keywords": [
        "setPrefetchComputeNodeData",
        "enableComputeNodePrefetchData",
        "控制节点",
        "配置项",
        "管理员"
      ],
      "hypothetical_question": "如何在DolphinDB中设置enableComputeNodePrefetchData配置项的生效值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/settablecomment.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/settablecomment.md",
      "start_line": 1,
      "end_line": 32,
      "summary": "setTableComment函数用于为分布式表添加注释，注释可通过schema函数查看。",
      "keywords": [
        "setTableComment",
        "分布式表",
        "表注释",
        "schema"
      ],
      "hypothetical_question": "如何在DolphinDB中为分布式表添加注释？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/shuffle_.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/shuffle_.md",
      "start_line": 1,
      "end_line": 9,
      "summary": "shuffle! 是 shuffle 的原地计算版本。",
      "keywords": [
        "shuffle!",
        "shuffle",
        "原地计算"
      ],
      "hypothetical_question": "shuffle! 和 shuffle 有什么区别？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/shapiroTest.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/shapiroTest.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "介绍DolphinDB中的shapiroTest函数，用于执行Shapiro-Wilk正态性检验。",
      "keywords": [
        "Shapiro-Wilk",
        "正态性检验",
        "p值",
        "W统计量"
      ],
      "hypothetical_question": "如何在DolphinDB中进行Shapiro-Wilk正态性检验？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/shape.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/shape.md",
      "start_line": 1,
      "end_line": 73,
      "summary": "介绍DolphinDB中`shape`函数的语法、参数、功能及使用示例，用于返回标量、向量、矩阵或表的维度。",
      "keywords": [
        "shape",
        "维度",
        "矩阵",
        "向量",
        "表"
      ],
      "hypothetical_question": "DolphinDB中如何使用`shape`函数获取数据结构的维度？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/share.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/share.md",
      "start_line": 1,
      "end_line": 8,
      "summary": "验证输出表中数据行数为10000，与写入的数据量之和一致。",
      "keywords": [
        "数据行数",
        "输出表",
        "写入数据量"
      ],
      "hypothetical_question": "如何验证输出表中的数据行数与写入的数据量之和是否一致？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/shell.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/shell.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "DolphinDB的shell函数用于执行操作系统命令，需管理员权限且配置enableShellFunction为true。",
      "keywords": [
        "shell",
        "操作系统命令",
        "DolphinDB",
        "system()",
        "enableShellFunction"
      ],
      "hypothetical_question": "如何在DolphinDB中执行操作系统命令？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/short.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/short.md",
      "start_line": 1,
      "end_line": 64,
      "summary": "short函数用于将输入数据转换为SHORT类型，并处理超出范围的情况。",
      "keywords": [
        "short",
        "数据类型转换",
        "SHORT类型",
        "溢出处理"
      ],
      "hypothetical_question": "如何使用DolphinDB的short函数将数据转换为SHORT类型？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/signbit.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/signbit.md",
      "start_line": 1,
      "end_line": 38,
      "summary": "signbit函数用于获取输入数据的符号位，负号返回true，正号返回false。",
      "keywords": [
        "signbit",
        "符号位",
        "复数",
        "浮点型",
        "整型"
      ],
      "hypothetical_question": "DolphinDB中如何判断一个数值的符号位是正还是负？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/sinh.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/sinh.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "介绍DolphinDB中的sinh函数，用于计算双曲正弦值。",
      "keywords": [
        "sinh",
        "双曲正弦",
        "DolphinDB函数"
      ],
      "hypothetical_question": "DolphinDB中如何计算双曲正弦值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/shuffle.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/shuffle.md",
      "start_line": 1,
      "end_line": 49,
      "summary": "shuffle函数用于对向量或矩阵进行数据重组，并返回一个新的向量或矩阵。",
      "keywords": [
        "shuffle",
        "数据重组",
        "向量",
        "矩阵"
      ],
      "hypothetical_question": "DolphinDB中如何对向量或矩阵进行数据重组？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/signum.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/signum.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "signum函数用于返回输入值的符号标志，正数返回1，0返回0，负数返回-1，NULL返回NULL。",
      "keywords": [
        "signum",
        "符号标志",
        "数值处理",
        "NULL处理"
      ],
      "hypothetical_question": "DolphinDB中signum函数的作用是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/size.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/size.md",
      "start_line": 1,
      "end_line": 64,
      "summary": "size函数用于返回向量、矩阵或表中元素的总数，与count函数不同，后者返回非NULL元素的数量。",
      "keywords": [
        "size",
        "count",
        "元素总数",
        "非NULL元素",
        "DolphinDB"
      ],
      "hypothetical_question": "在DolphinDB中，size和count函数有什么区别？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/sin.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/sin.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "介绍DolphinDB中的sin函数，用于计算标量、向量或矩阵的正弦值。",
      "keywords": [
        "sin",
        "三角函数",
        "DolphinDB",
        "数学函数",
        "正弦"
      ],
      "hypothetical_question": "DolphinDB中如何计算一个向量或矩阵的正弦值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/sleep.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/sleep.md",
      "start_line": 1,
      "end_line": 34,
      "summary": "sleep函数用于暂停程序指定的毫秒数。",
      "keywords": [
        "sleep",
        "暂停程序",
        "毫秒"
      ],
      "hypothetical_question": "如何在DolphinDB中暂停程序执行一定时间？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/sinppet.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/sinppet.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "介绍DolphinDB的`snippet`函数，用于获取任意数据的打印结果并返回字符串标量。",
      "keywords": [
        "snippet",
        "字符串标量",
        "打印结果",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中`snippet`函数的作用是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/slice.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/slice.md",
      "start_line": 1,
      "end_line": 200,
      "summary": "slice函数用于从数组向量、矩阵或表中提取指定索引或范围的数据。",
      "keywords": [
        "slice",
        "数组向量",
        "矩阵",
        "表",
        "索引"
      ],
      "hypothetical_question": "如何在DolphinDB中使用slice函数从矩阵或表中提取特定行或列的数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/sma.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/sma.md",
      "start_line": 1,
      "end_line": 41,
      "summary": "介绍DolphinDB中的`sma`函数，用于计算简单移动平均（Simple Moving Average）。",
      "keywords": [
        "sma",
        "简单移动平均",
        "TA-lib",
        "滑动窗口",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中计算简单移动平均？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/skew.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/skew.md",
      "start_line": 1,
      "end_line": 77,
      "summary": "介绍DolphinDB中的skew函数，用于计算向量、矩阵或表的倾斜度，支持有偏和无偏估计，并忽略NULL值。",
      "keywords": [
        "skew",
        "倾斜度",
        "有偏估计",
        "无偏估计",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中计算数据的倾斜度？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/skipClusterReplicationTask.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/skipClusterReplicationTask.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "介绍如何使用 skipClusterReplicationTask 函数跳过异步复制任务及其相关操作步骤。",
      "keywords": [
        "skipClusterReplicationTask",
        "异步复制",
        "任务管理",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在 DolphinDB 中跳过异常的异步复制任务？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/sliceByKey.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/sliceByKey.md",
      "start_line": 1,
      "end_line": 67,
      "summary": "sliceByKey函数用于从键值表或索引内存表中高效提取指定行键和列名的数据。",
      "keywords": [
        "sliceByKey",
        "键值表",
        "索引内存表",
        "数据提取"
      ],
      "hypothetical_question": "如何在DolphinDB中高效地从键值表或索引内存表中提取指定行和列的数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/socp.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/socp.md",
      "start_line": 1,
      "end_line": 78,
      "summary": "该文档详细介绍了DolphinDB中的`socp`函数，用于求解二阶锥规划问题，包括其语法、参数、返回值和示例。",
      "keywords": [
        "二阶锥规划",
        "SOCP",
        "优化问题",
        "DolphinDB函数",
        "数学优化"
      ],
      "hypothetical_question": "如何在DolphinDB中使用`socp`函数求解二阶锥规划问题？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/solve.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/solve.md",
      "start_line": 1,
      "end_line": 34,
      "summary": "介绍DolphinDB中的solve函数，用于求解线性方程X*b=Y的解b。",
      "keywords": [
        "solve",
        "线性方程",
        "矩阵",
        "向量"
      ],
      "hypothetical_question": "如何在DolphinDB中求解线性方程X*b=Y的解b？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/sort.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/sort.md",
      "start_line": 1,
      "end_line": 66,
      "summary": "The `sort` function in DolphinDB is used to return a sorted vector, with an optional parameter to specify ascending or descending order.",
      "keywords": [
        "sort",
        "vector",
        "ascending",
        "descending",
        "DolphinDB"
      ],
      "hypothetical_question": "How to sort a vector in DolphinDB in ascending or descending order?",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/spearmanr.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/spearmanr.md",
      "start_line": 1,
      "end_line": 48,
      "summary": "介绍DolphinDB中的spearmanr函数，用于计算X和Y的Spearman等级相关系数，忽略NULL值，并支持向量和矩阵输入。",
      "keywords": [
        "Spearman等级相关系数",
        "非参数度量",
        "单调性",
        "NULL值忽略"
      ],
      "hypothetical_question": "如何在DolphinDB中计算两个向量或矩阵的Spearman等级相关系数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/sortBy_.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/sortBy_.md",
      "start_line": 1,
      "end_line": 50,
      "summary": "介绍DolphinDB中的sortBy!函数，用于根据指定列和排序方向对表进行就地排序，支持分区表和并行处理。",
      "keywords": [
        "sortBy!",
        "排序",
        "分区表",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中对表进行就地排序？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/sort_.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/sort_.md",
      "start_line": 1,
      "end_line": 31,
      "summary": "介绍DolphinDB中的sort!函数，用于对向量进行原地排序，并支持升序或降序排列。",
      "keywords": [
        "sort!",
        "向量排序",
        "升序降序",
        "DolphinDB",
        "原地排序"
      ],
      "hypothetical_question": "如何在DolphinDB中对向量进行原地排序并指定升序或降序？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/split.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/split.md",
      "start_line": 1,
      "end_line": 61,
      "summary": "DolphinDB的split函数用于根据指定的分隔符将字符串或字符串向量分割成更小的部分。",
      "keywords": [
        "split",
        "分隔符",
        "字符串分割",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用split函数分割字符串？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/splev.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/splev.md",
      "start_line": 1,
      "end_line": 48,
      "summary": "splev函数用于评估B样条曲线或其导数，根据给定的节点和系数求解平滑多项式及其导数的值。",
      "keywords": [
        "splev",
        "B样条曲线",
        "样条评估",
        "splrep"
      ],
      "hypothetical_question": "如何在DolphinDB中使用splev函数评估B样条曲线的值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/spline.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/spline.md",
      "start_line": 1,
      "end_line": 42,
      "summary": "spline函数用于对时间序列数据进行重采样和三次样条插值。",
      "keywords": [
        "spline",
        "三次样条插值",
        "重采样",
        "时间序列"
      ],
      "hypothetical_question": "如何在DolphinDB中对时间序列数据进行三次样条插值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/sql.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/sql.md",
      "start_line": 1,
      "end_line": 195,
      "summary": "DolphinDB的sql函数用于动态生成SQL语句，支持多种SQL操作如select、where、groupBy等，并可通过eval函数执行生成的SQL语句。",
      "keywords": [
        "DolphinDB",
        "SQL",
        "动态生成",
        "eval",
        "groupBy"
      ],
      "hypothetical_question": "如何在DolphinDB中动态生成并执行SQL语句？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/splrep.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/splrep.md",
      "start_line": 1,
      "end_line": 46,
      "summary": "splrep函数用于确定一维曲线的B样条表示，通过给定数据点集(x[i], y[i])和可选结点t，返回样条曲线的结点、B样条系数和样条次数。",
      "keywords": [
        "splrep",
        "样条插值",
        "B样条",
        "三次样条曲线"
      ],
      "hypothetical_question": "如何使用DolphinDB的splrep函数进行一维曲线的B样条表示？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/sqlCol.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/sqlCol.md",
      "start_line": 1,
      "end_line": 56,
      "summary": "介绍DolphinDB中sqlCol函数的语法、参数、详情及使用示例，用于动态生成SQL语句。",
      "keywords": [
        "sqlCol",
        "动态SQL",
        "列选择",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用sqlCol函数动态生成SQL语句？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/sqlColAlias.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/sqlColAlias.md",
      "start_line": 1,
      "end_line": 32,
      "summary": "介绍DolphinDB中的sqlColAlias函数，用于通过元代码和可选别名定义列。",
      "keywords": [
        "sqlColAlias",
        "元代码",
        "别名",
        "列定义",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中如何使用sqlColAlias函数为列定义别名？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/sqlDS.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/sqlDS.md",
      "start_line": 1,
      "end_line": 58,
      "summary": "sqlDS函数用于根据输入的SQL元代码创建数据源列表，根据分区表生成多个数据源。",
      "keywords": [
        "sqlDS",
        "数据源",
        "分区表",
        "SQL元代码"
      ],
      "hypothetical_question": "如何使用sqlDS函数根据SQL查询创建数据源列表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/sqlDelete.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/sqlDelete.md",
      "start_line": 1,
      "end_line": 71,
      "summary": "sqlDelete函数用于动态生成SQL delete语句的元代码，支持内存表和分布式表的记录删除操作。",
      "keywords": [
        "sqlDelete",
        "元代码",
        "删除记录",
        "内存表",
        "分布式表"
      ],
      "hypothetical_question": "如何在DolphinDB中使用sqlDelete函数删除内存表或分布式表中的记录？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/sqlTuple.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/sqlTuple.md",
      "start_line": 1,
      "end_line": 44,
      "summary": "sqlTuple函数用于生成一个元代码，其内容是一个元组表达式，常用于动态生成SQL语句。",
      "keywords": [
        "sqlTuple",
        "元代码",
        "动态SQL",
        "元组表达式"
      ],
      "hypothetical_question": "如何使用sqlTuple函数动态生成SQL语句？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/sqlUpdate.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/sqlUpdate.md",
      "start_line": 1,
      "end_line": 137,
      "summary": "介绍DolphinDB中sqlUpdate函数的语法、参数、详情及使用示例，用于动态生成SQL update语句的元代码。",
      "keywords": [
        "sqlUpdate",
        "DolphinDB",
        "SQL update"
      ],
      "hypothetical_question": "如何在DolphinDB中使用sqlUpdate函数更新内存表或分布式表中的记录？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/square.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/square.md",
      "start_line": 1,
      "end_line": 33,
      "summary": "介绍DolphinDB中的square函数，用于计算输入值的平方，并返回DOUBLE类型的结果。",
      "keywords": [
        "square",
        "DolphinDB",
        "数学函数",
        "平方"
      ],
      "hypothetical_question": "DolphinDB中如何计算一个值的平方？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/sqrt.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/sqrt.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "介绍DolphinDB中的sqrt函数，用于计算标量、向量或矩阵中每个元素的平方根，返回DOUBLE类型结果。",
      "keywords": [
        "sqrt",
        "平方根",
        "DOUBLE",
        "DolphinDB",
        "函数"
      ],
      "hypothetical_question": "DolphinDB中如何计算一个向量中每个元素的平方根？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/startClusterReplication.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/startClusterReplication.md",
      "start_line": 1,
      "end_line": 23,
      "summary": "startClusterReplication函数用于重启因多次任务失败或主动停止的异步复制，需由管理员在主/从集群控制节点调用，并需预先配置replicationMode参数。",
      "keywords": [
        "startClusterReplication",
        "异步复制",
        "管理员",
        "replicationMode",
        "主从集群"
      ],
      "hypothetical_question": "如何重启因任务失败或主动停止的DolphinDB集群异步复制？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/startsWith.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/startsWith.md",
      "start_line": 1,
      "end_line": 31,
      "summary": "startsWith函数用于检查字符串X是否以目标字符串str开头，并返回布尔值。",
      "keywords": [
        "startsWith",
        "字符串",
        "布尔值",
        "函数"
      ],
      "hypothetical_question": "如何在DolphinDB中检查一个字符串是否以特定子字符串开头？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/startDataNode.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/startDataNode.md",
      "start_line": 1,
      "end_line": 21,
      "summary": "介绍DolphinDB函数startDataNode的语法、参数和用途，用于在集群控制器上启动数据节点/计算节点。",
      "keywords": [
        "startDataNode",
        "数据节点",
        "计算节点",
        "集群控制器"
      ],
      "hypothetical_question": "如何在DolphinDB中启动数据节点或计算节点？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/stat.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/stat.md",
      "start_line": 1,
      "end_line": 36,
      "summary": "介绍DolphinDB中的stat函数，用于计算向量或矩阵的统计信息，包括平均值、最大值、最小值等。",
      "keywords": [
        "stat函数",
        "统计信息",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中如何计算一个向量的统计信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/stateIterate.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/stateIterate.md",
      "start_line": 1,
      "end_line": 107,
      "summary": "介绍了DolphinDB中的stateIterate函数，用于响应式状态引擎中通过线性迭代实现线性递归的计算方法。",
      "keywords": [
        "stateIterate",
        "响应式状态引擎",
        "线性递归",
        "迭代计算",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用stateIterate函数实现线性递归计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/startheapsample.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/startheapsample.md",
      "start_line": 1,
      "end_line": 36,
      "summary": "介绍如何使用startHeapSample函数动态启用堆内存采样以监控和分析程序的内存使用情况。",
      "keywords": [
        "startHeapSample",
        "堆内存采样",
        "内存分析",
        "TCMALLOC_SAMPLE_PARAMETER"
      ],
      "hypothetical_question": "如何在DolphinDB中启用堆内存采样以监控内存使用情况？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/stdp.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/stdp.md",
      "start_line": 1,
      "end_line": 47,
      "summary": "stdp函数用于计算向量、矩阵或表的总体标准差，忽略NULL值。",
      "keywords": [
        "stdp",
        "总体标准差",
        "聚合函数",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中计算向量、矩阵或表的总体标准差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/stateMavg.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/stateMavg.md",
      "start_line": 1,
      "end_line": 57,
      "summary": "stateMavg函数用于在响应式状态引擎中计算基于历史结果的移动平均值。",
      "keywords": [
        "stateMavg",
        "移动平均",
        "响应式状态引擎"
      ],
      "hypothetical_question": "如何在DolphinDB中使用stateMavg函数计算移动平均值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/std.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/std.md",
      "start_line": 1,
      "end_line": 50,
      "summary": "std函数用于计算向量、矩阵或表中数据的无偏样本标准差，忽略NULL值。",
      "keywords": [
        "标准差",
        "无偏样本标准差",
        "聚合函数",
        "NULL值",
        "矩阵计算"
      ],
      "hypothetical_question": "DolphinDB中如何计算向量、矩阵或表的标准差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/stl.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/stl.md",
      "start_line": 1,
      "end_line": 76,
      "summary": "DolphinDB中的stl函数使用Loess方法将时间序列分解为趋势性、季节性和随机性。",
      "keywords": [
        "时间序列分解",
        "Loess方法",
        "趋势性",
        "季节性",
        "随机性"
      ],
      "hypothetical_question": "如何在DolphinDB中使用stl函数进行时间序列分解？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/stopClusterReplication.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/stopClusterReplication.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "stopClusterReplication函数用于停止集群间的异步复制，需由管理员在主/从集群的控制节点调用。",
      "keywords": [
        "stopClusterReplication",
        "集群复制",
        "异步复制",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中停止集群间的异步复制？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/stopheapsample.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/stopheapsample.md",
      "start_line": 1,
      "end_line": 35,
      "summary": "介绍如何动态关闭堆内存采样，并提供了内存使用分析的完整流程。",
      "keywords": [
        "stopHeapSample",
        "堆内存采样",
        "内存分析"
      ],
      "hypothetical_question": "如何在DolphinDB中动态关闭堆内存采样？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/strReplace.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/strReplace.md",
      "start_line": 1,
      "end_line": 31,
      "summary": "strReplace函数用于在字符串中替换指定的子字符串。",
      "keywords": [
        "strReplace",
        "字符串替换",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中替换字符串中的特定子字符串？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/stopDataNode.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/stopDataNode.md",
      "start_line": 1,
      "end_line": 21,
      "summary": "介绍了DolphinDB中stopDataNode函数的语法、参数和用途，用于在集群控制器上停止数据节点或计算节点。",
      "keywords": [
        "stopDataNode",
        "数据节点",
        "计算节点",
        "集群控制器",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中停止数据节点或计算节点？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/string.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/string.md",
      "start_line": 1,
      "end_line": 42,
      "summary": "string函数用于将任何数据类型的输入转换为字符串。",
      "keywords": [
        "string",
        "数据类型转换",
        "字符串"
      ],
      "hypothetical_question": "如何在DolphinDB中将数据转换为字符串？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/streamTable.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/streamTable.md",
      "start_line": 1,
      "end_line": 57,
      "summary": "介绍DolphinDB中streamTable函数的语法、参数和用法，用于创建流数据表。",
      "keywords": [
        "streamTable",
        "流数据表",
        "DolphinDB",
        "函数语法",
        "参数说明"
      ],
      "hypothetical_question": "如何在DolphinDB中使用streamTable函数创建流数据表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/streamEngineParser.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/streamEngineParser.md",
      "start_line": 1,
      "end_line": 265,
      "summary": "streamEngineParser函数用于解析嵌套复杂因子，自动构建流计算引擎流水线，支持横截面、历史状态和时序窗口逻辑的自动化处理。",
      "keywords": [
        "streamEngineParser",
        "流计算引擎",
        "横截面引擎",
        "响应式状态引擎",
        "时序聚合引擎"
      ],
      "hypothetical_question": "如何自动化处理嵌套复杂因子的流计算引擎流水线构建？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/stretch.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/stretch.md",
      "start_line": 1,
      "end_line": 96,
      "summary": "stretch函数用于将向量、元组、矩阵或表均匀拉伸到指定长度或行数，与take函数不同，它通过复制元素实现拉伸。",
      "keywords": [
        "stretch",
        "DolphinDB",
        "数据拉伸",
        "向量操作",
        "矩阵操作"
      ],
      "hypothetical_question": "DolphinDB中的stretch函数有什么作用，它与take函数有什么区别？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/streamFilter.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/streamFilter.md",
      "start_line": 1,
      "end_line": 271,
      "summary": "DolphinDB的streamFilter函数用于创建流数据过滤引擎，对输入数据进行过滤和分发处理，支持异构流数据表和普通流数据表。",
      "keywords": [
        "streamFilter",
        "流数据过滤引擎",
        "异构流数据表",
        "普通流数据表",
        "数据分发"
      ],
      "hypothetical_question": "如何在DolphinDB中使用streamFilter函数对流数据进行过滤和分发处理？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/stringFormat.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/stringFormat.md",
      "start_line": 1,
      "end_line": 109,
      "summary": "DolphinDB的stringFormat函数用于格式化字符串，支持多种数据类型和格式控制选项。",
      "keywords": [
        "stringFormat",
        "字符串格式化",
        "占位符",
        "数据类型",
        "格式控制"
      ],
      "hypothetical_question": "如何在DolphinDB中使用stringFormat函数进行字符串格式化？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/strlen.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/strlen.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "介绍DolphinDB中的strlen函数，用于获取字符串的长度。",
      "keywords": [
        "strlen",
        "字符串长度",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中获取字符串的长度？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/strip.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/strip.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "strip函数用于去除字符串首尾的空格、制表符、换行和回车符号。",
      "keywords": [
        "strip",
        "字符串处理",
        "空格去除",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中去掉字符串首尾的空格和特殊符号？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/strlenu.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/strlenu.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "strlenu函数用于获取Unicode编码的目标字符串的长度。",
      "keywords": [
        "strlenu",
        "Unicode",
        "字符串长度"
      ],
      "hypothetical_question": "如何在DolphinDB中获取Unicode字符串的长度？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/strpos.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/strpos.md",
      "start_line": 1,
      "end_line": 35,
      "summary": "strpos函数用于查找目标字符串在另一个字符串中的起始位置，若未找到则返回-1。",
      "keywords": [
        "strpos",
        "字符串查找",
        "起始位置",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中查找一个字符串在另一个字符串中的起始位置？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/subarray.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/subarray.md",
      "start_line": 1,
      "end_line": 54,
      "summary": "subarray函数返回输入向量的一个子向量视图，避免数据复制，提高性能。",
      "keywords": [
        "subarray",
        "向量",
        "视图",
        "性能优化",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中高效地获取向量的子集而不进行数据复制？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/substr.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/substr.md",
      "start_line": 1,
      "end_line": 39,
      "summary": "substr函数用于从字符串的指定位置开始截取指定长度的子字符串。",
      "keywords": [
        "substr",
        "字符串截取",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中使用substr函数截取字符串？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/submitJob.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/submitJob.md",
      "start_line": 1,
      "end_line": 125,
      "summary": "该文档详细介绍了DolphinDB中的submitJob函数，包括其语法、参数、功能以及如何在本地和远程节点上提交批处理作业的示例。",
      "keywords": [
        "submitJob",
        "批处理作业",
        "DolphinDB",
        "远程节点",
        "作业管理"
      ],
      "hypothetical_question": "如何在DolphinDB中使用submitJob函数提交批处理作业到本地或远程节点？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/sub.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/sub.md",
      "start_line": 1,
      "end_line": 90,
      "summary": "该文档详细介绍了DolphinDB中的`sub`函数或`X-Y`操作符，用于计算X和Y的差，支持标量、数据对、向量、矩阵和集合等多种数据类型。",
      "keywords": [
        "sub",
        "减法",
        "集合运算",
        "矩阵运算",
        "向量运算"
      ],
      "hypothetical_question": "在DolphinDB中如何计算两个向量或矩阵的差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/submitJobEx2.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/submitJobEx2.md",
      "start_line": 1,
      "end_line": 63,
      "summary": "submitJobEx2函数用于提交批处理作业到本地节点，并在作业完成后执行回调函数。",
      "keywords": [
        "submitJobEx2",
        "批处理作业",
        "回调函数",
        "作业优先级",
        "线程数"
      ],
      "hypothetical_question": "如何在DolphinDB中提交批处理作业并在完成后执行回调函数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/substru.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/substru.md",
      "start_line": 1,
      "end_line": 41,
      "summary": "substru函数用于从指定位置开始截取指定长度的Unicode字符串。",
      "keywords": [
        "substru",
        "字符串截取",
        "Unicode"
      ],
      "hypothetical_question": "如何在DolphinDB中从指定位置截取Unicode字符串？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/submitJobEx.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/submitJobEx.md",
      "start_line": 1,
      "end_line": 41,
      "summary": "submitJobEx函数用于提交批处理作业到本地节点，并允许指定作业优先级和并行线程数。",
      "keywords": [
        "submitJobEx",
        "批处理作业",
        "优先级",
        "并行线程数",
        "作业ID"
      ],
      "hypothetical_question": "如何在DolphinDB中提交一个具有特定优先级和并行线程数的批处理作业？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/subscribeTable.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/subsubscribeTable.md",
      "start_line": 1,
      "end_line": 396,
      "summary": "subscribeTable函数用于从客户端节点订阅本地或远程服务器的流数据表，并提供了详细的参数说明和使用示例。",
      "keywords": [
        "subscribeTable",
        "流数据表",
        "订阅",
        "handler",
        "UDP Multicast"
      ],
      "hypothetical_question": "如何在DolphinDB中使用subscribeTable函数订阅流数据表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/subtuple.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/subtuple.md",
      "start_line": 1,
      "end_line": 55,
      "summary": "subtuple函数用于快速创建只读子元组，适用于处理大型数据时提高效率。",
      "keywords": [
        "subtuple",
        "只读子元组",
        "DolphinDB",
        "性能优化",
        "向量处理"
      ],
      "hypothetical_question": "如何在DolphinDB中快速创建只读子元组以提高数据处理效率？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/sum.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/sum.md",
      "start_line": 1,
      "end_line": 43,
      "summary": "sum函数用于计算向量、矩阵或表中元素的总和，忽略NULL值。",
      "keywords": [
        "sum",
        "聚合函数",
        "NULL值",
        "向量求和"
      ],
      "hypothetical_question": "DolphinDB中sum函数的作用是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/sum2.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/sum2.md",
      "start_line": 1,
      "end_line": 54,
      "summary": "sum2函数用于计算标量、向量、矩阵或表中元素的平方和，忽略NULL值，并返回DOUBLE类型结果。",
      "keywords": [
        "sum2",
        "平方和",
        "聚合函数",
        "DOUBLE类型"
      ],
      "hypothetical_question": "DolphinDB中的sum2函数有什么作用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/sum3.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/sum3.md",
      "start_line": 1,
      "end_line": 54,
      "summary": "sum3函数用于计算向量、矩阵或表中元素的立方和，忽略NULL值并返回DOUBLE类型结果。",
      "keywords": [
        "sum3",
        "立方和",
        "聚合函数",
        "DOUBLE类型"
      ],
      "hypothetical_question": "DolphinDB中的sum3函数有什么作用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/sum4.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/sum4.md",
      "start_line": 1,
      "end_line": 54,
      "summary": "sum4函数用于计算向量、矩阵或表中元素的四次方和，忽略NULL值，返回DOUBLE类型结果。",
      "keywords": [
        "sum4",
        "四次方和",
        "聚合函数",
        "DOUBLE类型"
      ],
      "hypothetical_question": "DolphinDB中sum4函数的作用是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/summary.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/summary.md",
      "start_line": 1,
      "end_line": 93,
      "summary": "DolphinDB的summary函数用于生成数据的汇总统计信息，包括最小值、最大值、计数、均值、标准差和指定的百分位数。",
      "keywords": [
        "summary",
        "统计信息",
        "百分位数",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用summary函数生成数据的汇总统计信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/sumbars.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/sumbars.md",
      "start_line": 1,
      "end_line": 23,
      "summary": "使用sumbars函数计算股票交易量累计达到指定资本额所需的周期数。",
      "keywords": [
        "sumbars",
        "turnover period",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用sumbars函数计算交易量累计达到指定资本额所需的周期数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/suspendRecovery.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/suspendRecovery.md",
      "start_line": 1,
      "end_line": 21,
      "summary": "suspendRecovery函数用于暂停在线恢复节点的进程，允许源节点继续写入数据，仅由管理员在控制节点上调用。",
      "keywords": [
        "suspendRecovery",
        "在线恢复",
        "高可用集群",
        "管理员",
        "控制节点"
      ],
      "hypothetical_question": "如何在DolphinDB中暂停在线恢复节点的进程？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/symbol.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/symbol.md",
      "start_line": 1,
      "end_line": 36,
      "summary": "DolphinDB中的symbol函数用于将输入转换为符号向量。",
      "keywords": [
        "symbol",
        "DolphinDB",
        "符号向量",
        "数据类型转换"
      ],
      "hypothetical_question": "如何在DolphinDB中将字符串向量转换为符号向量？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/symbolCode.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/symbolCode.md",
      "start_line": 1,
      "end_line": 39,
      "summary": "symbolCode函数用于返回SYMBOL类型数据的内部编码，空字符串编码为0。",
      "keywords": [
        "symbolCode",
        "SYMBOL类型",
        "内部编码"
      ],
      "hypothetical_question": "DolphinDB中如何获取SYMBOL类型数据的内部编码？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/svd.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/svd.md",
      "start_line": 1,
      "end_line": 67,
      "summary": "该文档详细介绍了DolphinDB中用于计算矩阵奇异值分解（SVD）的函数svd的语法、参数、功能及示例。",
      "keywords": [
        "奇异值分解",
        "SVD",
        "矩阵计算",
        "DolphinDB",
        "函数参数"
      ],
      "hypothetical_question": "如何在DolphinDB中使用svd函数进行矩阵的奇异值分解？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/symmetricDifference.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/symmetricDifference.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "symmetricDifference函数用于计算两个集合的对称差集，即并集减去交集。",
      "keywords": [
        "symmetricDifference",
        "集合",
        "对称差集",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中计算两个集合的对称差集？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/syntax.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/syntax.md",
      "start_line": 1,
      "end_line": 22,
      "summary": "syntax(X) 函数用于返回 DolphinDB 函数或命令的语法。",
      "keywords": [
        "syntax",
        "DolphinDB",
        "函数语法",
        "命令语法"
      ],
      "hypothetical_question": "如何在 DolphinDB 中获取某个函数或命令的语法？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/s/syncDict.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/s/syncDict.md",
      "start_line": 1,
      "end_line": 107,
      "summary": "syncDict函数用于创建一个线程安全的同步字典，支持多线程并发读写，并可选择有序或无序存储键值对。",
      "keywords": [
        "syncDict",
        "线程安全",
        "同步字典",
        "并发读写",
        "有序字典"
      ],
      "hypothetical_question": "如何在DolphinDB中创建一个支持多线程并发读写的线程安全字典？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/t3.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/t3.md",
      "start_line": 1,
      "end_line": 56,
      "summary": "介绍DolphinDB中计算三重指数移动平均的函数t3的语法、参数、计算公式及示例。",
      "keywords": [
        "三重指数移动平均",
        "t3函数",
        "TA-lib",
        "滑动窗口",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中如何计算三重指数移动平均？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tTest.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tTest.md",
      "start_line": 1,
      "end_line": 95,
      "summary": "DolphinDB中的tTest函数用于进行单样本或双样本t检验，返回包含统计量、自由度、置信区间等结果的字典。",
      "keywords": [
        "t检验",
        "统计检验",
        "DolphinDB函数",
        "置信区间",
        "假设检验"
      ],
      "hypothetical_question": "如何在DolphinDB中进行单样本或双样本t检验并获取结果？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tableInsert.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tableInsert.md",
      "start_line": 1,
      "end_line": 101,
      "summary": "介绍DolphinDB中tableInsert函数的语法、参数、使用详情及示例，用于向表中插入数据并返回插入的行数。",
      "keywords": [
        "tableInsert",
        "DolphinDB",
        "数据插入",
        "分区表",
        "内存表"
      ],
      "hypothetical_question": "如何在DolphinDB中使用tableInsert函数向表中插入数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tail.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tail.md",
      "start_line": 1,
      "end_line": 79,
      "summary": "tail函数用于返回向量、矩阵或表的最后n个元素、列或行，默认n为1。",
      "keywords": [
        "tail",
        "DolphinDB",
        "向量",
        "矩阵",
        "表"
      ],
      "hypothetical_question": "如何在DolphinDB中获取向量、矩阵或表的最后n个元素、列或行？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/table.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/table.md",
      "start_line": 1,
      "end_line": 174,
      "summary": "DolphinDB中的table函数用于将向量、矩阵或元组转换为表，或创建具有指定列名和类型的空表或初始化表。",
      "keywords": [
        "table函数",
        "向量转换",
        "矩阵转换",
        "元组转换",
        "空表创建"
      ],
      "hypothetical_question": "如何在DolphinDB中将向量、矩阵或元组转换为表，或者创建一个具有指定列名和类型的空表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tableUpsert.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tableUpsert.md",
      "start_line": 1,
      "end_line": 97,
      "summary": "介绍了DolphinDB中的`tableUpsert`函数，用于将新数据写入索引内存表、键值内存表或DFS表，并返回操作行数。",
      "keywords": [
        "tableUpsert",
        "DolphinDB",
        "内存表",
        "DFS表",
        "数据更新"
      ],
      "hypothetical_question": "DolphinDB中如何使用tableUpsert函数更新或插入数据到内存表或DFS表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/take.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/take.md",
      "start_line": 1,
      "end_line": 54,
      "summary": "展示如何使用DolphinDB中的take函数从向量、矩阵和表中提取元素。",
      "keywords": [
        "take函数",
        "向量",
        "矩阵",
        "表",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用take函数从不同的数据结构中提取元素？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tan.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tan.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "介绍DolphinDB中的tan函数，用于计算标量、向量或矩阵的正切值。",
      "keywords": [
        "tan",
        "三角函数",
        "DolphinDB",
        "数学函数",
        "正切"
      ],
      "hypothetical_question": "如何在DolphinDB中计算一个数值的正切值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/talibNull.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/talibNull.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "talibNull函数用于处理多个向量，返回一个元组，其中在第一个所有向量对应元素非空的位置之前的所有元素均置为NULL。",
      "keywords": [
        "talibNull",
        "向量处理",
        "NULL值",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中的talibNull函数如何处理多个向量中的NULL值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tanh.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tanh.md",
      "start_line": 1,
      "end_line": 34,
      "summary": "tanh函数用于计算双曲正切值，支持标量、向量或矩阵作为输入参数。",
      "keywords": [
        "tanh",
        "双曲正切",
        "数学函数",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中计算双曲正切值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tema.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tema.md",
      "start_line": 1,
      "end_line": 44,
      "summary": "该文档介绍了DolphinDB中的tema函数，用于计算三重指数移动平均（Triple Exponential Moving Average）。",
      "keywords": [
        "tema",
        "三重指数移动平均",
        "TA-lib",
        "滑动窗口",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中如何计算三重指数移动平均？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/temporalDiff.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/temporalDiff.md",
      "start_line": 1,
      "end_line": 48,
      "summary": "temporalDiff函数用于计算两个时间类型数据之间的差值，支持自然日、工作日或特定交易日历作为单位。",
      "keywords": [
        "temporalDiff",
        "时间差",
        "交易日历",
        "DATE类型"
      ],
      "hypothetical_question": "如何在DolphinDB中计算两个日期之间的工作日差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tanimoto.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tanimoto.md",
      "start_line": 1,
      "end_line": 51,
      "summary": "介绍DolphinDB中的tanimoto函数，用于计算数值型标量/向量/矩阵之间的谷本距离，并提供了使用示例。",
      "keywords": [
        "tanimoto",
        "谷本距离",
        "DolphinDB",
        "数值计算"
      ],
      "hypothetical_question": "如何在DolphinDB中使用tanimoto函数计算两个向量或矩阵之间的谷本距离？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/temporalDeltas.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/temporalDeltas.md",
      "start_line": 1,
      "end_line": 68,
      "summary": "temporalDeltas函数用于计算时间序列中相邻元素之间的时间差，支持自然日、工作日和特定交易日历单位。",
      "keywords": [
        "temporalDeltas",
        "时间差",
        "交易日历",
        "工作日"
      ],
      "hypothetical_question": "如何在DolphinDB中计算时间序列中相邻元素之间的时间差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/temporalAdd.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/temporalAdd.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "比较了DolphinDB的temporalAdd函数与pandas的DateOffset在日期计算中的行为一致性。",
      "keywords": [
        "temporalAdd",
        "DateOffset",
        "pandas",
        "日期计算",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB的temporalAdd函数和pandas的DateOffset在日期计算中的行为有何异同？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/temporalFormat.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/temporalFormat.md",
      "start_line": 1,
      "end_line": 37,
      "summary": "temporalFormat函数用于将DolphinDB时序类型数据转换为指定格式的字符串。",
      "keywords": [
        "temporalFormat",
        "时间格式",
        "字符串转换"
      ],
      "hypothetical_question": "如何在DolphinDB中将时间序列数据转换为特定格式的字符串？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/temporalParse.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/temporalParse.md",
      "start_line": 1,
      "end_line": 168,
      "summary": "temporalParse函数用于将字符串转换为DolphinDB中的时序类型数据，支持多种时间格式和分隔符。",
      "keywords": [
        "temporalParse",
        "时间格式",
        "字符串转换"
      ],
      "hypothetical_question": "如何在DolphinDB中将字符串转换为时序类型数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/temporalSeq.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/temporalSeq.md",
      "start_line": 1,
      "end_line": 106,
      "summary": "temporalSeq函数用于根据指定频率对时间序列进行重采样，并返回新的时间序列。",
      "keywords": [
        "temporalSeq",
        "时间序列",
        "重采样"
      ],
      "hypothetical_question": "如何在DolphinDB中使用temporalSeq函数对时间序列进行重采样？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tensor.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tensor.md",
      "start_line": 1,
      "end_line": 121,
      "summary": "DolphinDB中的tensor函数用于将标量、向量、元组、矩阵或表等数据结构转换为不同维度的tensor，主要应用于与深度学习框架的数据交换。",
      "keywords": [
        "tensor",
        "DolphinDB",
        "数据转换",
        "深度学习"
      ],
      "hypothetical_question": "如何在DolphinDB中将不同的数据结构转换为tensor？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/textChunkDS.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/textChunkDS.md",
      "start_line": 1,
      "end_line": 73,
      "summary": "textChunkDS函数用于将大文本文件分割成多个小文件数据源，以便更高效地加载到DolphinDB数据库中。",
      "keywords": [
        "textChunkDS",
        "数据加载",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中高效加载大文本文件？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/test.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/test.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "DolphinDB的test函数用于执行服务器端的单元测试，支持指定测试脚本文件和输出结果文件，并可选择测试内存泄漏。",
      "keywords": [
        "test",
        "单元测试",
        "内存泄漏",
        "DolphinDB",
        "脚本文件"
      ],
      "hypothetical_question": "如何在DolphinDB中执行单元测试并输出结果？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/til.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/til.md",
      "start_line": 1,
      "end_line": 49,
      "summary": "DolphinDB的til函数用于生成0到n-1的整型向量，返回类型与参数n的类型一致。",
      "keywords": [
        "til",
        "整型向量",
        "DolphinDB",
        "序列生成"
      ],
      "hypothetical_question": "如何在DolphinDB中生成一个从0开始的连续整数序列？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/time.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/time.md",
      "start_line": 1,
      "end_line": 40,
      "summary": "DolphinDB中的time函数用于返回毫秒精度的时间，支持多种输入类型。",
      "keywords": [
        "time函数",
        "毫秒精度",
        "TIME类型",
        "时间处理",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中如何获取毫秒精度的时间？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/timestamp.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/timestamp.md",
      "start_line": 1,
      "end_line": 49,
      "summary": "timestamp函数用于将输入转换为精确到毫秒的时间戳，支持多种数据类型输入。",
      "keywords": [
        "timestamp",
        "时间戳",
        "DolphinDB",
        "函数",
        "时间转换"
      ],
      "hypothetical_question": "如何在DolphinDB中将日期或数值转换为精确到毫秒的时间戳？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tmavg.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tmavg.md",
      "start_line": 1,
      "end_line": 61,
      "summary": "介绍DolphinDB中的tmavg函数，用于计算基于时间滑动窗口内元素的平均值。",
      "keywords": [
        "tmavg",
        "滑动窗口",
        "平均值",
        "时间序列",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中计算基于时间滑动窗口的平均值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tmbeta.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tmbeta.md",
      "start_line": 1,
      "end_line": 63,
      "summary": "tmbeta函数用于在给定时间长度的移动窗口中计算Y在X上的回归系数的最小二乘估计。",
      "keywords": [
        "tmbeta",
        "回归系数",
        "最小二乘估计",
        "移动窗口"
      ],
      "hypothetical_question": "如何在DolphinDB中使用tmbeta函数计算移动窗口中的回归系数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tmavgTopN.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tmavgTopN.md",
      "start_line": 1,
      "end_line": 46,
      "summary": "tmavgTopN函数用于在滑动窗口内根据指定排序方式计算前top个元素的平均值。",
      "keywords": [
        "tmavgTopN",
        "滑动窗口",
        "平均值",
        "排序"
      ],
      "hypothetical_question": "如何在DolphinDB中计算滑动窗口内前N个元素的平均值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tmbetaTopN.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tmbetaTopN.md",
      "start_line": 1,
      "end_line": 47,
      "summary": "tmbetaTopN函数用于在滑动窗口内根据排序规则选取前top个元素，计算Y在X上的回归系数的最小二乘估计。",
      "keywords": [
        "tmbetaTopN",
        "回归系数",
        "滑动窗口",
        "最小二乘估计"
      ],
      "hypothetical_question": "如何在DolphinDB中使用tmbetaTopN函数计算滑动窗口内Y对X的回归系数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tmcorr.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tmcorr.md",
      "start_line": 1,
      "end_line": 63,
      "summary": "介绍DolphinDB中的tmcorr函数，用于计算给定时间窗口内两个元素的相关性。",
      "keywords": [
        "tmcorr",
        "相关性计算",
        "滑动窗口",
        "时间序列"
      ],
      "hypothetical_question": "如何在DolphinDB中计算时间窗口内两个元素的相关性？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tmcorrTopN.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tmcorrTopN.md",
      "start_line": 1,
      "end_line": 48,
      "summary": "tmcorrTopN函数用于在滑动窗口内根据指定排序方式取前top个元素后计算X和Y的相关性。",
      "keywords": [
        "tmcorrTopN",
        "滑动窗口",
        "相关性计算",
        "排序"
      ],
      "hypothetical_question": "如何在DolphinDB中使用tmcorrTopN函数计算滑动窗口内前top个元素的相关性？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tmcount.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tmcount.md",
      "start_line": 1,
      "end_line": 61,
      "summary": "tmcount函数用于在给定时间窗口内统计非NULL元素的个数。",
      "keywords": [
        "tmcount",
        "滑动窗口",
        "非NULL元素",
        "时间序列"
      ],
      "hypothetical_question": "如何在DolphinDB中使用tmcount函数计算时间窗口内的非NULL元素个数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tmlast.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tmlast.md",
      "start_line": 1,
      "end_line": 61,
      "summary": "tmlast函数用于在给定时间长度的滑动窗口内计算指定列的最后一个元素。",
      "keywords": [
        "tmlast",
        "滑动窗口",
        "时间序列",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用tmlast函数计算滑动窗口内的最后一个元素？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tmcovar.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tmcovar.md",
      "start_line": 1,
      "end_line": 63,
      "summary": "介绍DolphinDB中的tmcovar函数，用于计算给定时间窗口内两个元素的协方差。",
      "keywords": [
        "tmcovar",
        "协方差",
        "滑动窗口",
        "时间序列"
      ],
      "hypothetical_question": "如何在DolphinDB中计算时间窗口内两个元素的协方差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tmfirst.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tmfirst.md",
      "start_line": 1,
      "end_line": 61,
      "summary": "tmfirst函数用于在给定时间长度的滑动窗口内计算序列的第一个元素。",
      "keywords": [
        "tmfirst",
        "滑动窗口",
        "时间序列",
        "DolphinDB"
      ],
      "hypothetical_question": "在DolphinDB中，如何使用tmfirst函数计算滑动窗口内的第一个元素？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tmcovarTopN.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tmcovarTopN.md",
      "start_line": 1,
      "end_line": 48,
      "summary": "tmcovarTopN函数用于在滑动窗口内根据指定排序方式取前top个元素后计算X和Y的协方差。",
      "keywords": [
        "tmcovarTopN",
        "协方差",
        "滑动窗口",
        "排序"
      ],
      "hypothetical_question": "如何在DolphinDB中使用tmcovarTopN函数计算滑动窗口内前top个元素的协方差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tmkurtosis.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tmkurtosis.md",
      "start_line": 1,
      "end_line": 73,
      "summary": "介绍DolphinDB中的tmkurtosis函数，用于计算滑动窗口内时间序列数据的峰度。",
      "keywords": [
        "tmkurtosis",
        "滑动窗口",
        "峰度",
        "时间序列",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用tmkurtosis函数计算时间序列数据的滑动窗口峰度？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tmlowrange.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tmlowrange.md",
      "start_line": 1,
      "end_line": 29,
      "summary": "tmLowRange函数用于在滑动窗口内统计每个元素左侧相邻且连续大于它的元素个数，NULL被视为最小值。",
      "keywords": [
        "tmLowRange",
        "滑动窗口",
        "NULL处理",
        "统计函数"
      ],
      "hypothetical_question": "DolphinDB中的tmLowRange函数有什么作用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tmmax.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tmmax.md",
      "start_line": 1,
      "end_line": 61,
      "summary": "tmmax函数用于在给定时间窗口内计算元素的最大值。",
      "keywords": [
        "tmmax",
        "滑动窗口",
        "最大值",
        "时间序列"
      ],
      "hypothetical_question": "如何在DolphinDB中使用tmmax函数计算时间窗口内的最大值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tmkurtosisTopN.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tmkurtosisTopN.md",
      "start_line": 1,
      "end_line": 54,
      "summary": "介绍DolphinDB函数tmkurtosisTopN的语法、参数、功能及示例，用于计算滑动窗口内前top个元素的峰度。",
      "keywords": [
        "tmkurtosisTopN",
        "峰度计算",
        "滑动窗口",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中使用tmkurtosisTopN函数计算滑动窗口内前top个元素的峰度？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tmmed.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tmmed.md",
      "start_line": 1,
      "end_line": 61,
      "summary": "tmmed函数用于在给定时间长度的滑动窗口内计算元素的中位数。",
      "keywords": [
        "tmmed",
        "滑动窗口",
        "中位数",
        "时间序列",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用tmmed函数计算滑动窗口内的中位数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tmmin.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tmmin.md",
      "start_line": 1,
      "end_line": 61,
      "summary": "tmmin函数用于在给定时间窗口内计算元素的最小值。",
      "keywords": [
        "tmmin",
        "滑动窗口",
        "最小值",
        "时间序列",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用tmmin函数计算时间窗口内的最小值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tmove.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tmove.md",
      "start_line": 1,
      "end_line": 72,
      "summary": "tmove函数用于返回向量X中元素，这些元素对应于向量T中时间向前偏移指定窗口后的时间点。",
      "keywords": [
        "tmove",
        "时间偏移",
        "向量操作",
        "窗口函数",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用tmove函数实现时间偏移并获取对应的向量元素？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tmprod.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tmprod.md",
      "start_line": 1,
      "end_line": 63,
      "summary": "tmprod函数用于在时间滑动窗口内计算元素的乘积。",
      "keywords": [
        "tmprod",
        "滑动窗口",
        "乘积",
        "时间序列"
      ],
      "hypothetical_question": "如何在DolphinDB中计算时间滑动窗口内元素的乘积？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tmovingWindowData.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tmovingWindowData.md",
      "start_line": 1,
      "end_line": 46,
      "summary": "介绍DolphinDB中的tmovingWindowData函数，用于返回指定时间窗口内的数据元素。",
      "keywords": [
        "tmovingWindowData",
        "滑动窗口",
        "时间窗口",
        "数组向量",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用tmovingWindowData函数获取滑动窗口内的数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tmpercentile.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tmpercentile.md",
      "start_line": 1,
      "end_line": 76,
      "summary": "介绍DolphinDB中的tmpercentile函数，用于计算时间滑动窗口内数据的百分位数。",
      "keywords": [
        "tmpercentile",
        "百分位数",
        "滑动窗口",
        "插值方法",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中计算时间滑动窗口内数据的百分位数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tmskew.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tmskew.md",
      "start_line": 1,
      "end_line": 34,
      "summary": "介绍DolphinDB中的tmskew函数，用于计算滑动窗口内数据的斜度。",
      "keywords": [
        "tmskew",
        "滑动窗口",
        "斜度",
        "DolphinDB",
        "时间序列"
      ],
      "hypothetical_question": "如何在DolphinDB中计算时间序列数据的滑动窗口斜度？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tmrank.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tmrank.md",
      "start_line": 1,
      "end_line": 49,
      "summary": "tmrank函数用于在给定时间窗口内计算元素的排名，支持升序或降序排序，并可处理NULL值和重复值。",
      "keywords": [
        "tmrank",
        "时间窗口",
        "排名",
        "NULL值处理",
        "重复值处理"
      ],
      "hypothetical_question": "如何在DolphinDB中使用tmrank函数计算时间窗口内元素的排名？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tmstd.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tmstd.md",
      "start_line": 1,
      "end_line": 63,
      "summary": "介绍DolphinDB中的tmstd函数，用于计算给定时间窗口内数据的样本标准差。",
      "keywords": [
        "tmstd",
        "样本标准差",
        "滑动窗口",
        "时间序列"
      ],
      "hypothetical_question": "如何在DolphinDB中计算时间窗口内数据的样本标准差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tmskewTopN.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tmskewTopN.md",
      "start_line": 1,
      "end_line": 50,
      "summary": "tmskewTopN函数用于在滑动窗口内对数据进行排序后计算前top个元素的斜度。",
      "keywords": [
        "tmskewTopN",
        "滑动窗口",
        "斜度计算",
        "排序"
      ],
      "hypothetical_question": "如何在DolphinDB中使用tmskewTopN函数计算滑动窗口内前top个元素的斜度？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tmstdTopN.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tmstdTopN.md",
      "start_line": 1,
      "end_line": 46,
      "summary": "介绍DolphinDB函数tmstdTopN，用于在滑动窗口内对数据进行排序后计算前top个元素的标准差。",
      "keywords": [
        "tmstdTopN",
        "滑动窗口",
        "标准差",
        "排序"
      ],
      "hypothetical_question": "如何在DolphinDB中计算滑动窗口内排序后前top个元素的标准差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tmstdp.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tmstdp.md",
      "start_line": 1,
      "end_line": 63,
      "summary": "该文档介绍了DolphinDB中的tmstdp函数，用于计算给定时间滑动窗口内数据的总体标准差。",
      "keywords": [
        "tmstdp",
        "总体标准差",
        "滑动窗口",
        "时间序列",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中计算时间滑动窗口内的总体标准差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tmstdpTopN.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tmstdpTopN.md",
      "start_line": 1,
      "end_line": 46,
      "summary": "该文档详细介绍了DolphinDB函数tmstdpTopN的语法、参数说明、功能详情、返回值类型以及使用示例。",
      "keywords": [
        "tmstdpTopN",
        "滑动窗口",
        "总体标准差",
        "排序",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用tmstdpTopN函数计算滑动窗口内前top个元素的总体标准差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tmsum.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tmsum.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "tmsum函数用于在给定时间长度的滑动窗口内计算元素的和。",
      "keywords": [
        "tmsum",
        "滑动窗口",
        "元素和",
        "时间窗口"
      ],
      "hypothetical_question": "如何在DolphinDB中使用tmsum函数计算滑动窗口内的元素和？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tmsum2.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tmsum2.md",
      "start_line": 1,
      "end_line": 32,
      "summary": "介绍DolphinDB函数tmsum2，用于计算滑动窗口内元素的平方和。",
      "keywords": [
        "tmsum2",
        "滑动窗口",
        "平方和",
        "DolphinDB",
        "时间序列"
      ],
      "hypothetical_question": "DolphinDB中如何使用tmsum2函数计算滑动窗口内元素的平方和？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tmsumTopN.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tmsumTopN.md",
      "start_line": 1,
      "end_line": 46,
      "summary": "tmsumTopN函数用于在滑动窗口内根据指定排序方式取前top个元素进行求和计算。",
      "keywords": [
        "tmsumTopN",
        "滑动窗口",
        "求和计算",
        "排序"
      ],
      "hypothetical_question": "如何在DolphinDB中使用tmsumTopN函数对滑动窗口内的前top个元素进行求和？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tmvar.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tmvar.md",
      "start_line": 1,
      "end_line": 63,
      "summary": "tmvar函数用于在给定时间窗口内计算样本方差。",
      "keywords": [
        "tmvar",
        "样本方差",
        "滑动窗口",
        "时间序列"
      ],
      "hypothetical_question": "如何在DolphinDB中计算时间窗口内的样本方差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tmvarTopN.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tmvarTopN.md",
      "start_line": 1,
      "end_line": 46,
      "summary": "tmvarTopN函数用于在滑动窗口内对数据进行排序后计算前top个元素的方差。",
      "keywords": [
        "tmvarTopN",
        "方差",
        "滑动窗口",
        "排序"
      ],
      "hypothetical_question": "如何在DolphinDB中计算滑动窗口内排序后的前top个元素的方差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tmtoprange.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tmtoprange.md",
      "start_line": 1,
      "end_line": 29,
      "summary": "tmTopRange函数用于在滑动窗口内统计每个元素左侧连续小于它的元素个数，NULL被视为最小值。",
      "keywords": [
        "tmTopRange",
        "滑动窗口",
        "NULL处理",
        "统计函数"
      ],
      "hypothetical_question": "DolphinDB中的tmTopRange函数有什么作用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tmvarp.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tmvarp.md",
      "start_line": 1,
      "end_line": 63,
      "summary": "tmvarp函数用于在给定时间窗口内计算总体方差。",
      "keywords": [
        "tmvarp",
        "总体方差",
        "滑动窗口",
        "时间序列",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用tmvarp函数计算时间窗口内的总体方差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tmvarpTopN.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tmvarpTopN.md",
      "start_line": 1,
      "end_line": 46,
      "summary": "tmvarpTopN函数用于在滑动窗口内根据指定排序方式计算前top个元素的总体方差。",
      "keywords": [
        "tmvarpTopN",
        "滑动窗口",
        "总体方差",
        "排序"
      ],
      "hypothetical_question": "如何在DolphinDB中使用tmvarpTopN函数计算滑动窗口内前top个元素的总体方差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tmwavg.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tmwavg.md",
      "start_line": 1,
      "end_line": 75,
      "summary": "DolphinDB中的tmwavg函数用于在时间滑动窗口内计算加权平均值。",
      "keywords": [
        "tmwavg",
        "加权平均",
        "滑动窗口",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中计算时间滑动窗口内的加权平均值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tmwsum.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tmwsum.md",
      "start_line": 1,
      "end_line": 75,
      "summary": "tmwsum函数用于在时间滑动窗口内计算两个向量的内积。",
      "keywords": [
        "tmwsum",
        "滑动窗口",
        "内积",
        "时间序列"
      ],
      "hypothetical_question": "如何在DolphinDB中计算时间滑动窗口内两个向量的内积？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/today.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/today.md",
      "start_line": 1,
      "end_line": 14,
      "summary": "today函数用于返回当前系统的日期。",
      "keywords": [
        "today",
        "日期",
        "函数"
      ],
      "hypothetical_question": "DolphinDB中如何获取当前系统的日期？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/toCharArray.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/toCharArray.md",
      "start_line": 1,
      "end_line": 54,
      "summary": "toCharArray函数用于将字符串或BLOB类型的数据拆分为字符向量，支持标量和向量输入，并提供了写入文件时的正确数据转换示例。",
      "keywords": [
        "toCharArray",
        "字符串拆分",
        "BLOB转换",
        "字符向量",
        "文件写入"
      ],
      "hypothetical_question": "如何使用toCharArray函数将字符串或BLOB数据拆分为字符向量并正确写入文件？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tmwsumTopN.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tmwsumTopN.md",
      "start_line": 1,
      "end_line": 48,
      "summary": "tmwsumTopN函数用于在滑动窗口内根据指定排序方式取前top个元素后计算X和Y的内积。",
      "keywords": [
        "tmwsumTopN",
        "滑动窗口",
        "内积",
        "排序"
      ],
      "hypothetical_question": "如何在DolphinDB中使用tmwsumTopN函数计算滑动窗口内前top个元素的内积？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/toJson.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/toJson.md",
      "start_line": 1,
      "end_line": 49,
      "summary": "toJson函数将DolphinDB对象转换为JSON字符串，包含变量名、数据结构、数据类型、长度和值等信息，并针对不同数据形式设定了最大转换长度限制。",
      "keywords": [
        "toJson",
        "JSON转换",
        "DolphinDB",
        "数据序列化"
      ],
      "hypothetical_question": "如何在DolphinDB中将对象转换为JSON字符串并了解其限制？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tokenize.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tokenize.md",
      "start_line": 1,
      "end_line": 47,
      "summary": "DolphinDB的tokenize函数用于根据指定的分词器对文本进行分词操作，并返回分词结果。",
      "keywords": [
        "tokenize",
        "分词器",
        "文本处理"
      ],
      "hypothetical_question": "如何在DolphinDB中使用tokenize函数对文本进行分词？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/toStdJson.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/toStdJson.md",
      "start_line": 1,
      "end_line": 51,
      "summary": "DolphinDB函数toStdJson用于将DolphinDB对象转换为标准JSON类型，并提供了转换规则和示例。",
      "keywords": [
        "toStdJson",
        "JSON转换",
        "DolphinDB函数",
        "数据类型转换"
      ],
      "hypothetical_question": "如何在DolphinDB中将对象转换为标准JSON格式？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/toUTF8.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/toUTF8.md",
      "start_line": 1,
      "end_line": 33,
      "summary": "toUTF8函数用于将字符串转换为UTF8编码，支持不同编码转换，但在Windows中仅支持gbk到utf-8的转换。",
      "keywords": [
        "toUTF8",
        "UTF8编码",
        "字符串转换",
        "编码转换",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中将字符串转换为UTF8编码？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/topRange.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/topRange.md",
      "start_line": 1,
      "end_line": 57,
      "summary": "topRange函数用于统计序列中每个元素左侧连续小于它的元素个数，常用于计算股票创几日新高。",
      "keywords": [
        "topRange",
        "统计",
        "序列",
        "股票新高"
      ],
      "hypothetical_question": "如何使用DolphinDB的topRange函数计算股票创几日新高？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/transDS_.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/transDS_.md",
      "start_line": 1,
      "end_line": 50,
      "summary": "transDS!函数用于将指定函数应用到数据源或数据源列表，实现数据转换。",
      "keywords": [
        "transDS!",
        "数据源",
        "数据转换",
        "分布式表",
        "函数应用"
      ],
      "hypothetical_question": "如何在DolphinDB中使用transDS!函数对数据源进行转换？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/transpose.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/transpose.md",
      "start_line": 1,
      "end_line": 155,
      "summary": "transpose函数用于转置元组、矩阵、表、字典、数组向量或列式元组，根据输入数据类型的不同返回相应的转置结果。",
      "keywords": [
        "transpose",
        "转置",
        "矩阵",
        "字典",
        "元组"
      ],
      "hypothetical_question": "DolphinDB中的transpose函数如何处理不同类型的输入数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/transFreq.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/transFreq.md",
      "start_line": 1,
      "end_line": 104,
      "summary": "transFreq函数用于将日期或时间变量转换为指定的时间格式或交易日，支持多种规则和参数配置。",
      "keywords": [
        "transFreq",
        "时间转换",
        "交易日历",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用transFreq函数将日期或时间转换为指定的时间格式？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/triggerNodeReport.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/triggerNodeReport.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "介绍如何使用 `triggerNodeReport` 命令强制触发节点向控制节点汇报信息以更新元数据。",
      "keywords": [
        "triggerNodeReport",
        "节点汇报",
        "chunk信息",
        "元数据更新",
        "DolphinDB"
      ],
      "hypothetical_question": "如何强制触发 DolphinDB 节点向控制节点汇报信息以更新元数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/treasuryconversionfactor.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/treasuryconversionfactor.md",
      "start_line": 1,
      "end_line": 53,
      "summary": "该文档详细介绍了DolphinDB中的treasuryConversionFactor函数，用于计算国债转换因子的估值，包括其语法、参数说明和示例。",
      "keywords": [
        "国债转换因子",
        "DolphinDB函数",
        "票面利率"
      ],
      "hypothetical_question": "如何在DolphinDB中计算国债转换因子的估值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/trim.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/trim.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "trim函数用于去除字符串首尾的空格。",
      "keywords": [
        "trim",
        "字符串处理",
        "空格去除"
      ],
      "hypothetical_question": "如何在DolphinDB中去除字符串首尾的空格？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/triggerPKEYCompaction.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/triggerPKEYCompaction.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "介绍如何使用triggerPKEYCompaction函数异步或同步触发指定chunk的compaction以提高读取效率。",
      "keywords": [
        "triggerPKEYCompaction",
        "compaction",
        "chunk",
        "asynchronous",
        "synchronous"
      ],
      "hypothetical_question": "如何强制触发指定chunk进行compaction以提高读取效率？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tril.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tril.md",
      "start_line": 1,
      "end_line": 63,
      "summary": "介绍DolphinDB中的`tril`函数，用于返回矩阵的下三角部分或指定对角线及其下方的元素。",
      "keywords": [
        "tril",
        "矩阵",
        "下三角",
        "对角线"
      ],
      "hypothetical_question": "如何在DolphinDB中获取矩阵的下三角部分或指定对角线及其下方的元素？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/triu.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/triu.md",
      "start_line": 1,
      "end_line": 63,
      "summary": "triu函数用于返回矩阵的上三角部分或指定对角线以上的元素，其余元素设为0。",
      "keywords": [
        "triu",
        "矩阵",
        "上三角",
        "对角线"
      ],
      "hypothetical_question": "如何在DolphinDB中提取矩阵的上三角部分？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/triggercheckpointforimoltp.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/triggercheckpointforimoltp.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "该文档详细介绍了triggerCheckpointForIMOLTP函数的语法、参数及其在手动创建OLTP检查点时的使用方法和注意事项。",
      "keywords": [
        "triggerCheckpointForIMOLTP",
        "checkpoint",
        "OLTP"
      ],
      "hypothetical_question": "如何在DolphinDB中手动触发OLTP的检查点创建？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/triggerTSDBCompaction.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/triggerTSDBCompaction.md",
      "start_line": 1,
      "end_line": 34,
      "summary": "介绍如何使用triggerTSDBCompaction函数强制触发TSDB存储引擎中指定chunk内指定层级的Level File合并操作。",
      "keywords": [
        "triggerTSDBCompaction",
        "TSDB",
        "Level File",
        "chunk",
        "合并操作"
      ],
      "hypothetical_question": "如何在DolphinDB中强制触发TSDB存储引擎中指定chunk的Level File合并操作？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/trima.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/trima.md",
      "start_line": 1,
      "end_line": 42,
      "summary": "介绍DolphinDB中的trima函数，用于计算三角移动平均（Triangular Moving Average）。",
      "keywords": [
        "trima",
        "三角移动平均",
        "TA-lib",
        "滑动窗口",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用trima函数计算三角移动平均？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/trueRange.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/trueRange.md",
      "start_line": 1,
      "end_line": 39,
      "summary": "介绍DolphinDB中的trueRange函数，用于计算真实波幅，即最高价、最低价和收盘价之间的最大差值。",
      "keywords": [
        "trueRange",
        "真实波幅",
        "DolphinDB",
        "金融计算",
        "技术指标"
      ],
      "hypothetical_question": "如何在DolphinDB中计算真实波幅？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/truncate.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/truncate.md",
      "start_line": 1,
      "end_line": 43,
      "summary": "truncate函数用于删除分布式表的所有数据但保留表结构，性能优于delete和dropPartition。",
      "keywords": [
        "truncate",
        "分布式表",
        "删除数据",
        "保留表结构",
        "性能"
      ],
      "hypothetical_question": "如何在DolphinDB中高效删除分布式表的所有数据但保留表结构？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/type.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/type.md",
      "start_line": 1,
      "end_line": 38,
      "summary": "介绍DolphinDB中`type`函数的语法、参数、功能及示例，用于返回变量的数据类型标识。",
      "keywords": [
        "type函数",
        "数据类型",
        "DolphinDB",
        "语法",
        "示例"
      ],
      "hypothetical_question": "在DolphinDB中如何获取变量的数据类型标识？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/tupleSum.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/tupleSum.md",
      "start_line": 1,
      "end_line": 41,
      "summary": "`tupleSum`函数用于从多个`map`调用中总结单个结果，返回与`map`调用结果相同格式的输出。",
      "keywords": [
        "tupleSum",
        "map",
        "元组",
        "总结",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中的`tupleSum`函数有什么作用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/themes/TopN.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/themes/TopN.md",
      "start_line": 1,
      "end_line": 121,
      "summary": "DolphinDB 的 mTopN 系列函数用于在滑动窗口内对数据进行排序并取前 top 个元素进行计算。",
      "keywords": [
        "mTopN",
        "滑动窗口",
        "排序",
        "TopN",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB 中 mTopN 系列函数的作用是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/t/typestr.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/t/typestr.md",
      "start_line": 1,
      "end_line": 14,
      "summary": "介绍DolphinDB函数typestr的语法、参数及功能，用于返回任意数据类型的字符串表示。",
      "keywords": [
        "typestr",
        "数据类型",
        "DolphinDB函数"
      ],
      "hypothetical_question": "DolphinDB中如何获取任意数据类型的字符串表示？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/themes/TAlib.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/themes/TAlib.md",
      "start_line": 1,
      "end_line": 79,
      "summary": "DolphinDB 提供了部分 TA-lib 功能函数，用于量化金融分析，并介绍了其函数模板、参数规则及窗口确定规则。",
      "keywords": [
        "TA-lib",
        "DolphinDB",
        "量化金融",
        "移动平均",
        "滑动窗口"
      ],
      "hypothetical_question": "DolphinDB 中如何使用 TA-lib 系列函数进行量化金融分析？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/themes/cumFunctions.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/themes/cumFunctions.md",
      "start_line": 1,
      "end_line": 76,
      "summary": "DolphinDB 提供了 cum 系列函数用于累计窗口计算，包括单目和双目函数，适用于标量、向量、矩阵等多种数据类型。",
      "keywords": [
        "cum 系列函数",
        "累计窗口计算",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB 中有哪些用于累计窗口计算的函数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/themes/mFunctions.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/themes/mFunctions.md",
      "start_line": 1,
      "end_line": 151,
      "summary": "DolphinDB的m系列函数用于滑动窗口内的聚合计算，提供了多种单目和双目函数，支持不同类型的数据输入和窗口规则。",
      "keywords": [
        "滑动窗口",
        "m系列函数",
        "聚合计算",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中的m系列函数有哪些用途和特点？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/themes/rowFunctions.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/themes/rowFunctions.md",
      "start_line": 1,
      "end_line": 140,
      "summary": "DolphinDB的row系列函数用于逐行计算，支持单目和双目函数，适用于向量、矩阵和表等数据结构。",
      "keywords": [
        "DolphinDB",
        "row系列函数",
        "逐行计算",
        "单目函数",
        "双目函数"
      ],
      "hypothetical_question": "DolphinDB中如何实现逐行计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/themes/themes.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/themes/themes.md",
      "start_line": 1,
      "end_line": 7,
      "summary": "系列函数主题页面提供了同类函数的总体介绍和使用方法。",
      "keywords": [
        "系列函数",
        "主题页面",
        "函数结构",
        "计算方法"
      ],
      "hypothetical_question": "系列函数主题页面的作用是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/themes/cumTopN.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/themes/cumTopN.md",
      "start_line": 1,
      "end_line": 83,
      "summary": "DolphinDB 的 cumTopN 系列函数用于在累积窗口内根据指定指标排序后取前 top 个元素进行计算。",
      "keywords": [
        "cumTopN",
        "DolphinDB",
        "排序",
        "累积窗口",
        "topN"
      ],
      "hypothetical_question": "DolphinDB 中的 cumTopN 系列函数有什么作用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/themes/streamingEngine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/themes/streamingEngine.md",
      "start_line": 1,
      "end_line": 11,
      "summary": "DolphinDB 提供了多种流计算引擎，支持增量计算和实时数据处理，可将结果输出到多种终端或构建复杂数据流拓扑。",
      "keywords": [
        "流计算引擎",
        "DolphinDB",
        "增量计算",
        "实时数据处理",
        "数据流拓扑"
      ],
      "hypothetical_question": "DolphinDB 的流计算引擎有哪些特点和应用场景？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/themes/tmFunctions.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/themes/tmFunctions.md",
      "start_line": 1,
      "end_line": 94,
      "summary": "DolphinDB 的 tm 系列函数用于时序数据的滑动窗口计算，支持单目和双目操作，并提供了优化的性能。",
      "keywords": [
        "时序数据",
        "滑动窗口",
        "tm 系列函数",
        "DolphinDB",
        "窗口计算"
      ],
      "hypothetical_question": "DolphinDB 中的 tm 系列函数有哪些用途和特点？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/themes/tmTopN.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/themes/tmTopN.md",
      "start_line": 1,
      "end_line": 90,
      "summary": "DolphinDB 的 tmTopN 系列函数用于在滑动时间窗口内对数据进行排序并取前 top 个元素进行计算。",
      "keywords": [
        "tmTopN",
        "滑动窗口",
        "排序",
        "topN",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB 中的 tmTopN 系列函数有什么作用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/u/undef.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/u/undef.md",
      "start_line": 1,
      "end_line": 45,
      "summary": "介绍DolphinDB中`undef`函数的语法、参数、用途及示例，用于从内存中释放变量和函数定义。",
      "keywords": [
        "undef",
        "变量释放",
        "函数定义",
        "内存管理"
      ],
      "hypothetical_question": "如何在DolphinDB中释放内存中的变量和函数定义？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/u/unifiedExpr.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/u/unifiedExpr.md",
      "start_line": 1,
      "end_line": 38,
      "summary": "unifiedExpr函数用于通过二元运算符连接多个元素生成多元运算表达式的元代码，可通过eval函数执行。",
      "keywords": [
        "unifiedExpr",
        "元代码",
        "二元运算符",
        "eval"
      ],
      "hypothetical_question": "如何使用DolphinDB的unifiedExpr函数生成并执行多元运算表达式？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/u/union.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/u/union.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "介绍DolphinDB中union函数的语法、参数和用法，用于返回两个集合的并集。",
      "keywords": [
        "union",
        "集合",
        "并集",
        "DolphinDB",
        "语法"
      ],
      "hypothetical_question": "如何在DolphinDB中获取两个集合的并集？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/u/ungroup.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/u/ungroup.md",
      "start_line": 1,
      "end_line": 100,
      "summary": "DolphinDB的ungroup函数用于展开表中包含数组向量或列式元组的列，并按元素数量复制填充其余列。",
      "keywords": [
        "ungroup",
        "数组向量",
        "列式元组",
        "表展开"
      ],
      "hypothetical_question": "DolphinDB中如何展开表中包含数组向量或列式元组的列？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/u/unpack.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/u/unpack.md",
      "start_line": 1,
      "end_line": 50,
      "summary": "DolphinDB的unpack函数用于根据指定的格式字符串将二进制字节流解包成数据元组。",
      "keywords": [
        "unpack",
        "二进制解包",
        "格式字符串",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中使用unpack函数解包二进制数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/u/unionAll.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/u/unionAll.md",
      "start_line": 1,
      "end_line": 183,
      "summary": "DolphinDB的unionAll函数用于合并两个或多个内存表，支持按列名或列顺序合并，并可选择是否进行顺序分区。",
      "keywords": [
        "unionAll",
        "内存表",
        "合并表",
        "分区"
      ],
      "hypothetical_question": "如何在DolphinDB中合并多个内存表并保持列名一致？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/u/unlockUser.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/u/unlockUser.md",
      "start_line": 1,
      "end_line": 22,
      "summary": "unlockUser函数用于解锁指定用户，仅限管理员在开启enhancedSecurityVerification配置项时调用。",
      "keywords": [
        "unlockUser",
        "管理员",
        "enhancedSecurityVerification",
        "用户管理",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中解锁一个被锁定的用户？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/u/unpivot.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/u/unpivot.md",
      "start_line": 1,
      "end_line": 147,
      "summary": "DolphinDB的unpivot函数用于将表中的多列数据转换为一列，支持保留指定列和应用自定义函数。",
      "keywords": [
        "unpivot",
        "数据转换",
        "DolphinDB",
        "列操作"
      ],
      "hypothetical_question": "如何在DolphinDB中将多列数据转换为一列并保留指定列？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/u/updateMarketHoliday.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/u/updateMarketHoliday.md",
      "start_line": 1,
      "end_line": 63,
      "summary": "updateMarketHoliday函数用于在线更新内存中的交易市场节假日或交易日文件，并同步更新至marketHolidayDir目录。",
      "keywords": [
        "updateMarketHoliday",
        "交易日历",
        "节假日"
      ],
      "hypothetical_question": "如何在DolphinDB中更新交易市场的节假日或交易日信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/u/unsubscribeTable.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/u/unsubscribeTable.md",
      "start_line": 1,
      "end_line": 57,
      "summary": "介绍DolphinDB中unsubscribeTable函数的语法、参数、功能及使用示例，用于取消订阅流数据表。",
      "keywords": [
        "unsubscribeTable",
        "流数据",
        "取消订阅",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中取消订阅流数据表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/u/updateLicense.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/u/updateLicense.md",
      "start_line": 1,
      "end_line": 48,
      "summary": "updateLicense函数用于在线更新DolphinDB的license文件而无需重启节点，并说明了升级条件和注意事项。",
      "keywords": [
        "updateLicense",
        "license",
        "DolphinDB",
        "online update",
        "cluster"
      ],
      "hypothetical_question": "如何在DolphinDB中在线更新license文件而不需要重启节点？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/u/updateOrderBookEngineParams.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/u/updateOrderBookEngineParams.md",
      "start_line": 1,
      "end_line": 63,
      "summary": "updateOrderBookEngineParams函数用于在线为OrderBook引擎设定参数值，必须在创建引擎后、注入数据前调用。",
      "keywords": [
        "updateOrderBookEngineParams",
        "OrderBook引擎",
        "参数设置"
      ],
      "hypothetical_question": "如何在DolphinDB中为OrderBook引擎在线设置参数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/u/updateRule.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/u/updateRule.md",
      "start_line": 1,
      "end_line": 67,
      "summary": "updateRule函数用于在规则引擎中更新或添加规则，根据指定的key修改或增加对应的rules。",
      "keywords": [
        "updateRule",
        "规则引擎",
        "规则更新",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用updateRule函数更新或添加规则引擎中的规则？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/u/upper.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/u/upper.md",
      "start_line": 1,
      "end_line": 29,
      "summary": "upper函数用于将字符串或字符串列表中的所有字符转换为大写。",
      "keywords": [
        "upper",
        "字符串转换",
        "大写"
      ],
      "hypothetical_question": "如何在DolphinDB中将字符串转换为大写？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/u/updatepkeydeletebitmap.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/u/updatepkeydeletebitmap.md",
      "start_line": 1,
      "end_line": 20,
      "summary": "updatePKEYDeleteBitmap函数用于更新PKEY引擎的delete bitmap并清空主键的暂存缓冲区。",
      "keywords": [
        "updatePKEYDeleteBitmap",
        "PKEY引擎",
        "delete bitmap",
        "主键缓冲区"
      ],
      "hypothetical_question": "如何更新PKEY引擎的delete bitmap并清空主键的暂存缓冲区？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/u/update_.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/u/update_.md",
      "start_line": 1,
      "end_line": 103,
      "summary": "DolphinDB中的update!函数用于就地更新表中的列，支持条件过滤和并行处理。",
      "keywords": [
        "update!",
        "DolphinDB",
        "元编程",
        "分区表",
        "并行处理"
      ],
      "hypothetical_question": "如何在DolphinDB中更新表中的列并应用条件过滤？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/u/uuid.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/u/uuid.md",
      "start_line": 1,
      "end_line": 35,
      "summary": "uuid函数用于将字符串转换为UUID类型，并可通过rand(uuid(), n)随机生成UUID数据。",
      "keywords": [
        "uuid",
        "字符串转换",
        "随机生成",
        "UUID类型"
      ],
      "hypothetical_question": "如何在DolphinDB中将字符串转换为UUID类型？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/u/upsert_.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/u/upsert_.md",
      "start_line": 1,
      "end_line": 196,
      "summary": "介绍DolphinDB中的`upsert!`函数，用于更新或插入数据到索引内存表、键值内存表或DFS表，支持参数如ignoreNull、keyColNames和sortColumns。",
      "keywords": [
        "upsert!",
        "DolphinDB",
        "数据更新",
        "DFS表",
        "键值内存表"
      ],
      "hypothetical_question": "如何在DolphinDB中使用`upsert!`函数更新或插入数据到不同的表类型？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/u/useOrcaStreamTable.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/u/useOrcaStreamTable.md",
      "start_line": 1,
      "end_line": 32,
      "summary": "介绍如何使用useOrcaStreamTable函数远程调用与操作流表相关的函数。",
      "keywords": [
        "useOrcaStreamTable",
        "流表",
        "远程调用",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中远程调用与操作流表相关的函数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/u/useOrcaStreamEngine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/u/useOrcaStreamEngine.md",
      "start_line": 1,
      "end_line": 52,
      "summary": "介绍如何使用useOrcaStreamEngine函数通过orca流引擎名称定位节点并远程执行相关函数。",
      "keywords": [
        "useOrcaStreamEngine",
        "orca流引擎",
        "远程调用"
      ],
      "hypothetical_question": "如何在DolphinDB中使用useOrcaStreamEngine函数远程调用orca流引擎相关函数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/v/values.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/v/values.md",
      "start_line": 1,
      "end_line": 32,
      "summary": "values函数用于返回字典中的所有值或以元组形式返回表中的所有列。",
      "keywords": [
        "values",
        "字典",
        "表",
        "元组",
        "列"
      ],
      "hypothetical_question": "在DolphinDB中，如何获取字典中的所有值或表中的所有列？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/v/vanillaoption.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/v/vanillaoption.md",
      "start_line": 1,
      "end_line": 186,
      "summary": "DolphinDB中的vanillaOption函数用于对香草期权进行估值计算，支持多种估值方法和参数设置。",
      "keywords": [
        "vanillaOption",
        "期权估值",
        "Black-Scholes",
        "Heston模型",
        "希腊字母"
      ],
      "hypothetical_question": "如何在DolphinDB中使用vanillaOption函数进行香草期权估值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/v/var.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/v/var.md",
      "start_line": 1,
      "end_line": 52,
      "summary": "var函数用于计算向量、矩阵或表的方差，忽略NULL值并返回无偏样本方差。",
      "keywords": [
        "var",
        "方差",
        "无偏样本方差",
        "聚合函数"
      ],
      "hypothetical_question": "DolphinDB中如何计算向量、矩阵或表的方差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/v/valueChanged.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/v/valueChanged.md",
      "start_line": 1,
      "end_line": 82,
      "summary": "valueChanged函数用于检测向量、矩阵、表或元组中元素值是否发生变化，并返回布尔值结果。",
      "keywords": [
        "valueChanged",
        "元素变化",
        "布尔检测",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中检测向量或表中元素值的变化？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/v/varp.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/v/varp.md",
      "start_line": 1,
      "end_line": 50,
      "summary": "varp函数用于计算向量、矩阵或表的总体方差，忽略NULL值。",
      "keywords": [
        "varp",
        "总体方差",
        "聚合函数",
        "NULL值"
      ],
      "hypothetical_question": "DolphinDB中如何计算向量、矩阵或表的总体方差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/v/var_0.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/v/var_0.md",
      "start_line": 1,
      "end_line": 37,
      "summary": "该文档详细介绍了DolphinDB中的valueAtRisk函数，用于计算在特定置信水平下的金融资产最大可能损失。",
      "keywords": [
        "valueAtRisk",
        "风险控制",
        "金融资产"
      ],
      "hypothetical_question": "如何在DolphinDB中使用valueAtRisk函数计算金融资产的最大可能损失？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/v/vectorar.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/v/vectorar.md",
      "start_line": 1,
      "end_line": 96,
      "summary": "介绍DolphinDB中的vectorAR函数，用于使用向量自回归模型分析多变量时间序列。",
      "keywords": [
        "vectorAR",
        "向量自回归模型",
        "多变量时间序列"
      ],
      "hypothetical_question": "如何在DolphinDB中使用vectorAR函数分析多变量时间序列？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/v/varma.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/v/varma.md",
      "start_line": 1,
      "end_line": 86,
      "summary": "DolphinDB中的varma函数用于使用向量自回归移动平均模型（VARMA）分析多变量时间序列，并返回包含模型参数和统计信息的字典。",
      "keywords": [
        "VARMA",
        "多变量时间序列",
        "向量自回归移动平均模型",
        "参数估计",
        "统计分析"
      ],
      "hypothetical_question": "如何在DolphinDB中使用varma函数分析多变量时间序列？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/v/vectornorm.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/v/vectornorm.md",
      "start_line": 1,
      "end_line": 117,
      "summary": "该文档详细介绍了DolphinDB中的vectorNorm函数，包括其语法、参数说明、不同参数组合下的计算方式以及具体示例。",
      "keywords": [
        "vectorNorm",
        "范数计算",
        "矩阵运算",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中使用vectorNorm函数计算矩阵或向量的范数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/v/volumeBar.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/v/volumeBar.md",
      "start_line": 1,
      "end_line": 93,
      "summary": "volumeBar函数用于对数值型向量进行累加并根据指定阈值分组，返回数据所属分组的组号。",
      "keywords": [
        "volumeBar",
        "分组",
        "累加",
        "阈值",
        "组号"
      ],
      "hypothetical_question": "如何使用volumeBar函数对数值型向量进行累加分组并返回组号？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/v/version.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/v/version.md",
      "start_line": 1,
      "end_line": 22,
      "summary": "介绍DolphinDB的version函数，用于返回版本、发布日期、操作系统版本、CPU指令集等信息。",
      "keywords": [
        "version",
        "DolphinDB",
        "版本信息",
        "操作系统",
        "CPU指令集"
      ],
      "hypothetical_question": "DolphinDB的version函数返回哪些信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/w/warmupOrcaStreamEngine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/w/warmupOrcaStreamEngine.md",
      "start_line": 1,
      "end_line": 49,
      "summary": "warmupOrcaStreamEngine函数用于将数据表写入目标流引擎进行预热处理，以加速后续计算。",
      "keywords": [
        "warmupOrcaStreamEngine",
        "流引擎",
        "预热处理"
      ],
      "hypothetical_question": "如何在DolphinDB中使用warmupOrcaStreamEngine函数预热流引擎？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/w/warmupStreamEngine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/w/warmupStreamEngine.md",
      "start_line": 1,
      "end_line": 39,
      "summary": "warmupStreamEngine函数用于将数据预加载到流数据引擎中，以加速后续计算，但不输出结果。",
      "keywords": [
        "warmupStreamEngine",
        "流数据引擎",
        "预加载"
      ],
      "hypothetical_question": "如何使用warmupStreamEngine函数预加载数据到流数据引擎以加速后续计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/w/wavg.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/w/wavg.md",
      "start_line": 1,
      "end_line": 31,
      "summary": "wavg函数用于计算以Y为权重的X的加权平均数，权重会自动调整使非NULL值对应的权重之和为1。",
      "keywords": [
        "wavg",
        "加权平均数",
        "权重",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中计算加权平均数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/w/warmupcomputenodecache.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/w/warmupcomputenodecache.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "介绍DolphinDB函数warmupComputeNodeCache的语法、参数、功能及使用示例，用于将指定数据缓存至计算组。",
      "keywords": [
        "warmupComputeNodeCache",
        "数据缓存",
        "计算组",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中预热数据到计算组缓存？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/w/wc.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/w/wc.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "DolphinDB的wc函数用于计算字符串或字符串向量中的单词数量。",
      "keywords": [
        "wc",
        "单词计数",
        "字符串处理",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中计算字符串中的单词数量？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/w/weekBegin.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/w/weekBegin.md",
      "start_line": 1,
      "end_line": 130,
      "summary": "weekBegin函数用于返回指定日期所在星期或上一个星期中指定星期几对应的日期，支持多种日期类型和可选参数。",
      "keywords": [
        "weekBegin",
        "日期函数",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用weekBegin函数获取指定日期所在星期的起始日期？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/w/wcovar.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/w/wcovar.md",
      "start_line": 1,
      "end_line": 28,
      "summary": "该文档介绍了DolphinDB中用于计算加权协方差的函数wcovar的语法、参数和用法示例。",
      "keywords": [
        "wcovar",
        "加权协方差",
        "DolphinDB函数"
      ],
      "hypothetical_question": "如何在DolphinDB中计算两个向量的加权协方差？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/w/weekOfMonth.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/w/weekOfMonth.md",
      "start_line": 1,
      "end_line": 65,
      "summary": "weekOfMonth函数用于返回指定日期所在月份或上一个月中特定星期和星期几对应的日期。",
      "keywords": [
        "weekOfMonth",
        "日期函数",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用weekOfMonth函数获取特定月份的第几个星期几的日期？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/w/weekEnd.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/w/weekEnd.md",
      "start_line": 1,
      "end_line": 129,
      "summary": "weekEnd函数用于返回指定日期所在星期或下一个星期中指定星期几对应的日期，支持多种日期类型和可选参数。",
      "keywords": [
        "weekEnd",
        "日期函数",
        "DolphinDB",
        "星期计算",
        "时间序列"
      ],
      "hypothetical_question": "如何在DolphinDB中计算指定日期所在星期或下一个星期中某一天的日期？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/w/wilder.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/w/wilder.md",
      "start_line": 1,
      "end_line": 47,
      "summary": "介绍DolphinDB中的wilder函数，用于计算给定滑动窗口内数据的Welles Wilder指数移动平均。",
      "keywords": [
        "wilder",
        "指数移动平均",
        "滑动窗口",
        "TA-lib"
      ],
      "hypothetical_question": "DolphinDB中的wilder函数是用来做什么的？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/w/winsorize.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/w/winsorize.md",
      "start_line": 1,
      "end_line": 66,
      "summary": "winsorize函数用于对向量中的极值进行掩盖处理，支持多种参数配置以控制掩盖行为。",
      "keywords": [
        "winsorize",
        "极值处理",
        "NULL值处理",
        "向量操作"
      ],
      "hypothetical_question": "如何在DolphinDB中使用winsorize函数对向量中的极值进行掩盖处理？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/w/weekOfYear.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/w/weekOfYear.md",
      "start_line": 1,
      "end_line": 49,
      "summary": "weekOfYear函数用于计算给定日期或时间类型的周数（1~53），并遵循特定的周数计算规则。",
      "keywords": [
        "weekOfYear",
        "周数计算",
        "日期函数"
      ],
      "hypothetical_question": "如何在DolphinDB中计算一个日期或时间类型的周数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/w/weekday.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/w/weekday.md",
      "start_line": 1,
      "end_line": 43,
      "summary": "weekday函数用于返回时间对应的一周中的日期编号，可选择从星期日或星期一开始计数。",
      "keywords": [
        "weekday",
        "日期编号",
        "时间函数",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中获取时间对应的一周中的日期编号？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/w/wls.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/w/wls.md",
      "start_line": 1,
      "end_line": 126,
      "summary": "DolphinDB中的wls函数用于计算加权最小二乘回归，支持多种输出模式和统计结果。",
      "keywords": [
        "加权最小二乘回归",
        "DolphinDB",
        "统计结果"
      ],
      "hypothetical_question": "DolphinDB中如何使用wls函数进行加权最小二乘回归分析？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/w/winsorize_.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/w/winsorize_.md",
      "start_line": 1,
      "end_line": 7,
      "summary": "winsorize! 是 winsorize 函数的别名。",
      "keywords": [
        "winsorize",
        "别名",
        "DolphinDB"
      ],
      "hypothetical_question": "winsorize! 函数在 DolphinDB 中有什么作用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/w/wma.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/w/wma.md",
      "start_line": 1,
      "end_line": 41,
      "summary": "介绍DolphinDB中的wma函数，用于计算加权移动平均。",
      "keywords": [
        "wma",
        "加权移动平均",
        "DolphinDB",
        "TA-lib"
      ],
      "hypothetical_question": "如何在DolphinDB中计算加权移动平均？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/w/writeLines.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/w/writeLines.md",
      "start_line": 1,
      "end_line": 44,
      "summary": "介绍DolphinDB中的writeLines函数，用于向句柄中写入指定行数，并提供了性能比较示例。",
      "keywords": [
        "writeLines",
        "DolphinDB",
        "文件操作",
        "性能比较"
      ],
      "hypothetical_question": "如何在DolphinDB中使用writeLines函数高效地写入多行数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/w/writeBytes.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/w/writeBytes.md",
      "start_line": 1,
      "end_line": 31,
      "summary": "writeBytes函数用于将整个缓冲区写入文件，并返回实际写入的字节数或抛出异常。",
      "keywords": [
        "writeBytes",
        "文件操作",
        "缓冲区",
        "IOException"
      ],
      "hypothetical_question": "如何使用DolphinDB的writeBytes函数将缓冲区写入文件？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/w/write.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/w/write.md",
      "start_line": 1,
      "end_line": 39,
      "summary": "DolphinDB的write函数用于将缓冲区数据转换为字节流并写入文件，支持不同大小端格式，并返回写入元素的个数。",
      "keywords": [
        "write",
        "DolphinDB",
        "字节流",
        "大小端"
      ],
      "hypothetical_question": "DolphinDB中如何使用write函数将数据写入文件并处理大小端问题？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/w/writeLine.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/w/writeLine.md",
      "start_line": 1,
      "end_line": 44,
      "summary": "DolphinDB函数writeLine用于在指定句柄中写入一行文本，并自动添加行分隔符。",
      "keywords": [
        "writeLine",
        "行分隔符",
        "句柄",
        "文件操作"
      ],
      "hypothetical_question": "如何在DolphinDB中使用writeLine函数向文件或套接字写入一行文本？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/w/writeLog.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/w/writeLog.md",
      "start_line": 1,
      "end_line": 28,
      "summary": "writeLog函数用于将字符串写入日志文件，每个字符串作为日志文件中的一行，需要用户登录后才能执行。",
      "keywords": [
        "writeLog",
        "日志文件",
        "字符串",
        "用户登录"
      ],
      "hypothetical_question": "如何在DolphinDB中将字符串写入日志文件？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/w/writeObject.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/w/writeObject.md",
      "start_line": 1,
      "end_line": 32,
      "summary": "介绍DolphinDB中的writeObject函数，用于将各种数据结构写入文件句柄。",
      "keywords": [
        "writeObject",
        "数据结构",
        "文件句柄",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中将不同类型的数据结构写入文件？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/w/writeRecord.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/w/writeRecord.md",
      "start_line": 1,
      "end_line": 42,
      "summary": "介绍DolphinDB中的writeRecord函数，用于将表或元组转换为二进制文件并写入指定行数。",
      "keywords": [
        "writeRecord",
        "二进制文件",
        "表",
        "元组",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中将表或元组数据写入二进制文件？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/w/writeloglevel.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/w/writeloglevel.md",
      "start_line": 1,
      "end_line": 32,
      "summary": "介绍DolphinDB中writeLogLevel函数的语法、参数、使用详情及示例，该函数用于在日志文件中写入指定等级的日志。",
      "keywords": [
        "writeLogLevel",
        "日志等级",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用writeLogLevel函数写入指定等级的日志？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/w/wsum2.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/w/wsum2.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "wsum2函数用于计算X和Y的加权平方和，返回结果为DOUBLE类型。",
      "keywords": [
        "wsum2",
        "加权平方和",
        "DOUBLE类型"
      ],
      "hypothetical_question": "DolphinDB中wsum2函数的作用是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/w/wslr.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/w/wslr.md",
      "start_line": 1,
      "end_line": 74,
      "summary": "wslr函数用于计算Y在X上的加权线性回归结果，返回回归系数、截距和残差均方差。",
      "keywords": [
        "wslr",
        "加权线性回归",
        "回归系数",
        "残差均方差"
      ],
      "hypothetical_question": "如何在DolphinDB中计算加权线性回归的结果？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/w/wsum.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/w/wsum.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "wsum函数用于计算两个参数X和Y的内积，返回结果为DOUBLE类型。",
      "keywords": [
        "wsum",
        "内积",
        "DOUBLE类型",
        "向量计算"
      ],
      "hypothetical_question": "DolphinDB中如何计算两个向量的内积？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/x/xor.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/x/xor.md",
      "start_line": 1,
      "end_line": 39,
      "summary": "xor函数用于按元素逐个返回两个输入参数的逻辑异或结果。",
      "keywords": [
        "xor",
        "逻辑异或",
        "DolphinDB",
        "函数",
        "元素运算"
      ],
      "hypothetical_question": "在DolphinDB中如何计算两个参数的逻辑异或？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/x/xdb.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/x/xdb.md",
      "start_line": 1,
      "end_line": 52,
      "summary": "介绍DolphinDB中xdb函数的语法、参数、详情及示例，用于连接远程节点。",
      "keywords": [
        "xdb",
        "远程连接",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用xdb函数连接远程节点？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/y/year.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/y/year.md",
      "start_line": 1,
      "end_line": 34,
      "summary": "year 函数用于从时间标量或向量中提取年份，返回整数类型的结果。",
      "keywords": [
        "year",
        "时间函数",
        "整数",
        "DolphinDB",
        "日期处理"
      ],
      "hypothetical_question": "如何在 DolphinDB 中从日期中提取年份？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/y/yearEnd.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/y/yearEnd.md",
      "start_line": 1,
      "end_line": 82,
      "summary": "yearEnd函数用于返回指定日期所在的以特定月份为结束月份的年份的最后一天，并可设置偏移量和间隔年数。",
      "keywords": [
        "yearEnd",
        "日期处理",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中获取指定日期所在年份的最后一天？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/y/yearBegin.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/y/yearBegin.md",
      "start_line": 1,
      "end_line": 83,
      "summary": "yearBegin函数用于返回指定日期所在年份的第一天，支持自定义起始月份和偏移量。",
      "keywords": [
        "yearBegin",
        "起始月份",
        "日期函数",
        "偏移量"
      ],
      "hypothetical_question": "DolphinDB中的yearBegin函数如何使用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/z/zTest.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/z/zTest.md",
      "start_line": 1,
      "end_line": 76,
      "summary": "DolphinDB中的zTest函数用于执行单样本或双样本Z检验，返回包含统计量、p值和置信区间等结果的字典。",
      "keywords": [
        "zTest",
        "Z检验",
        "统计检验",
        "置信区间",
        "p值"
      ],
      "hypothetical_question": "如何在DolphinDB中使用zTest函数进行单样本或双样本Z检验？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/z/zscore.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/z/zscore.md",
      "start_line": 1,
      "end_line": 45,
      "summary": "该文档介绍了DolphinDB中的zscore函数，用于计算向量、矩阵或表中元素的标准分数（z-score）。",
      "keywords": [
        "zscore",
        "标准分数",
        "向量",
        "矩阵",
        "表"
      ],
      "hypothetical_question": "如何在DolphinDB中计算向量或矩阵的标准分数（z-score）？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/z/zigzag.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/z/zigzag.md",
      "start_line": 1,
      "end_line": 55,
      "summary": "介绍DolphinDB中的zigzag函数，用于过滤较小波动的极值点，并详细说明其语法、参数和用法示例。",
      "keywords": [
        "zigzag",
        "极值点",
        "波动阈值",
        "DolphinDB函数",
        "数值过滤"
      ],
      "hypothetical_question": "如何在DolphinDB中使用zigzag函数过滤数值向量或矩阵中的较小波动极值点？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/getstarted/use_clients_server.md",
      "chunk_id": "0",
      "source_document": "./documentation/getstarted/use_clients_server.md",
      "start_line": 1,
      "end_line": 64,
      "summary": "介绍如何快速部署DolphinDB社区版服务器并使用WEB客户端进行登录和基本操作。",
      "keywords": [
        "DolphinDB",
        "部署",
        "WEB客户端",
        "登录",
        "社区版"
      ],
      "hypothetical_question": "如何快速部署DolphinDB社区版服务器并使用WEB客户端进行登录？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/getstarted/chap1_getstarted.md",
      "chunk_id": "0",
      "source_document": "./documentation/getstarted/chap1_getstarted.md",
      "start_line": 1,
      "end_line": 272,
      "summary": "DolphinDB快速上手指南，包括安装、启动、连接客户端、建库建表、导入数据和查询数据的基本操作。",
      "keywords": [
        "DolphinDB",
        "快速上手",
        "数据库",
        "数据导入",
        "数据查询"
      ],
      "hypothetical_question": "如何在DolphinDB中快速完成安装、建库建表、导入和查询数据的基本操作？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/modules/MarketHoliday/mkt_calendar.md",
      "chunk_id": "0",
      "source_document": "./documentation/modules/MarketHoliday/mkt_calendar.md",
      "start_line": 1,
      "end_line": 491,
      "summary": "DolphinDB 提供交易日历功能，支持查询和应用内置或自定义的交易日历，以及更新和自定义交易日历的方法。",
      "keywords": [
        "交易日历",
        "DolphinDB",
        "交易所",
        "自定义",
        "更新"
      ],
      "hypothetical_question": "如何在 DolphinDB 中使用和自定义交易日历？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/modules/MarketHoliday/release.md",
      "chunk_id": "0",
      "source_document": "./documentation/modules/MarketHoliday/release.md",
      "start_line": 1,
      "end_line": 149,
      "summary": "该文档详细列出了2024年和2025年国内外交易所的交易日历更新信息，包括新增和删除的日期，以及交易所的ISO代码调整。",
      "keywords": [
        "交易日历",
        "交易所",
        "ISO代码",
        "2024",
        "2025"
      ],
      "hypothetical_question": "2024年和2025年国内外交易所的交易日历有哪些更新？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/modules/easyNSQ/easynsq.md",
      "chunk_id": "0",
      "source_document": "./documentation/modules/easyNSQ/easynsq.md",
      "start_line": 1,
      "end_line": 853,
      "summary": "DolphinDB的easyNSQ模块用于自动化接收和存储上海和深圳市场的NSQ实时行情数据，支持逐笔委托、逐笔成交和L2快照行情数据的订阅和持久化存储。",
      "keywords": [
        "DolphinDB",
        "easyNSQ",
        "实时行情数据",
        "NSQ插件",
        "持久化存储"
      ],
      "hypothetical_question": "如何使用DolphinDB的easyNSQ模块自动化接收和存储上海和深圳市场的NSQ实时行情数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/modules/easyNSQ/easynsq_2.md",
      "chunk_id": "0",
      "source_document": "./documentation/modules/easyNSQ/easynsq_2.md",
      "start_line": 1,
      "end_line": 853,
      "summary": "DolphinDB的easyNSQ模块用于自动化接收和存储上海和深圳市场的NSQ实时行情数据，包括逐笔委托、逐笔成交和L2快照行情。",
      "keywords": [
        "DolphinDB",
        "easyNSQ",
        "实时行情",
        "NSQ插件",
        "数据存储"
      ],
      "hypothetical_question": "如何使用DolphinDB的easyNSQ模块接收和存储上海和深圳市场的实时行情数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/modules/ops/ops.md",
      "chunk_id": "0",
      "source_document": "./documentation/modules/ops/ops.md",
      "start_line": 1,
      "end_line": 914,
      "summary": "DolphinDB的ops模块提供了一系列运维函数，用于简化数据库的日常运维工作，包括作业管理、会话管理、磁盘使用监控等。",
      "keywords": [
        "DolphinDB",
        "运维函数",
        "数据库管理",
        "作业取消",
        "磁盘使用"
      ],
      "hypothetical_question": "DolphinDB的ops模块提供了哪些运维功能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/modules/gtja191Alpha/191alpha.md",
      "chunk_id": "0",
      "source_document": "./documentation/modules/gtja191Alpha/191alpha.md",
      "start_line": 1,
      "end_line": 198,
      "summary": "本文介绍了国泰君安191 Alpha因子库在DolphinDB中的实现，包括函数命名规则、批计算和流计算的使用范例以及注意事项。",
      "keywords": [
        "国泰君安191 Alpha因子",
        "DolphinDB",
        "批计算",
        "流计算",
        "因子库"
      ],
      "hypothetical_question": "如何在DolphinDB中使用国泰君安191 Alpha因子库进行批计算和流计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/modules/mytt/mytt.md",
      "chunk_id": "0",
      "source_document": "./documentation/modules/mytt/mytt.md",
      "start_line": 1,
      "end_line": 447,
      "summary": "DolphinDB mytt module是一个高性能的技术指标库，移植了Python MyTT库中的指标函数，支持批处理和流式计算，并提供了详细的性能对比、正确性验证和使用范例。",
      "keywords": [
        "DolphinDB",
        "技术指标",
        "流式计算",
        "性能对比",
        "MyTT"
      ],
      "hypothetical_question": "DolphinDB mytt module有哪些技术指标函数，性能如何？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/oxygen-webhelp/template/js/split.md",
      "chunk_id": "0",
      "source_document": "./documentation/oxygen-webhelp/template/js/split.md",
      "start_line": 1,
      "end_line": 1,
      "summary": "该文本片段为空，无具体内容。",
      "keywords": [],
      "hypothetical_question": "",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/omc/omc_connection_lost_guidelines.md",
      "chunk_id": "0",
      "source_document": "./documentation/omc/omc_connection_lost_guidelines.md",
      "start_line": 1,
      "end_line": 83,
      "summary": "本文档提供了无法连接 DolphinDB 服务器的常见原因及解决方法，包括网络故障和连接数不足的排查步骤。",
      "keywords": [
        "DolphinDB",
        "连接问题",
        "网络故障",
        "连接数不足",
        "排查方法"
      ],
      "hypothetical_question": "如何排查和解决无法连接 DolphinDB 服务器的问题？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/modules/ta/ta.md",
      "chunk_id": "0",
      "source_document": "./documentation/modules/ta/ta.md",
      "start_line": 1,
      "end_line": 527,
      "summary": "DolphinDB ta模块是一个技术分析指标库，实现了TA-Lib中的常用金融交易技术指标，支持高性能计算和流式增量计算，并提供了与Python TA-Lib的性能对比和正确性验证。",
      "keywords": [
        "DolphinDB",
        "技术分析",
        "TA-Lib",
        "金融交易",
        "流式计算"
      ],
      "hypothetical_question": "DolphinDB ta模块如何实现金融交易技术分析指标的高性能计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/modules/wq101alpha/wq101alpha.md",
      "chunk_id": "0",
      "source_document": "./documentation/modules/wq101alpha/wq101alpha.md",
      "start_line": 1,
      "end_line": 424,
      "summary": "DolphinDB实现了WorldQuant 101 Alpha因子指标库，提供高性能、批流一体的因子计算模块wq101alpha，并详细介绍了其使用方法、性能对比和正确性验证。",
      "keywords": [
        "DolphinDB",
        "WorldQuant",
        "Alpha因子",
        "量化金融",
        "性能对比"
      ],
      "hypothetical_question": "如何在DolphinDB中实现WorldQuant 101 Alpha因子的高性能计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/oxygen-webhelp/template/js/copycodeonly.md",
      "chunk_id": "0",
      "source_document": "./documentation/oxygen-webhelp/template/js/copycodeonly.md",
      "start_line": 1,
      "end_line": 8,
      "summary": "展示了在不同命令行环境中执行'Hello, World!'命令的输出示例。",
      "keywords": [
        "命令行",
        "Hello, World!",
        "输出示例"
      ],
      "hypothetical_question": "在不同命令行环境中执行'Hello, World!'命令会得到什么输出？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/omc/omc_server_hang_guidelines.md",
      "chunk_id": "0",
      "source_document": "./documentation/omc/omc_server_hang_guidelines.md",
      "start_line": 1,
      "end_line": 109,
      "summary": "该文档提供了DolphinDB系统卡死时的处理指南，包括采集栈信息和使用紧急通道释放资源的方法。",
      "keywords": [
        "DolphinDB",
        "系统卡死",
        "栈信息",
        "紧急通道",
        "资源释放"
      ],
      "hypothetical_question": "DolphinDB系统卡死时应该如何采集栈信息和使用紧急通道释放资源？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/EncoderDecoder.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/EncoderDecoder.md",
      "start_line": 1,
      "end_line": 410,
      "summary": "DolphinDB EncoderDecoder 插件用于高效解析和转换 JSON 及 protobuf 数据为 DolphinDB 表格格式，提供了详细的安装步骤、接口说明和示例。",
      "keywords": [
        "EncoderDecoder",
        "JSON",
        "protobuf",
        "DolphinDB",
        "数据解析"
      ],
      "hypothetical_question": "如何在 DolphinDB 中使用 EncoderDecoder 插件解析 JSON 和 protobuf 数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/modules/easyTLDataImport/easytl_data_import.md",
      "chunk_id": "0",
      "source_document": "./documentation/modules/easyTLDataImport/easytl_data_import.md",
      "start_line": 1,
      "end_line": 908,
      "summary": "DolphinDB的easyTLDataImport模块是一个用于自动化导入通联历史Level-2行情数据的工具，支持快照行情、逐笔委托和逐笔成交数据的批量导入，并提供了详细的模块使用说明、性能测试和二次开发指南。",
      "keywords": [
        "DolphinDB",
        "easyTLDataImport",
        "Level-2行情数据",
        "数据导入",
        "通联数据"
      ],
      "hypothetical_question": "如何使用DolphinDB的easyTLDataImport模块自动化导入通联历史Level-2行情数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/omc/omc_slow_io_guidelines.md",
      "chunk_id": "0",
      "source_document": "./documentation/omc/omc_slow_io_guidelines.md",
      "start_line": 1,
      "end_line": 169,
      "summary": "该文本片段详细介绍了DolphinDB中查询或写入慢的多种原因及解决方案，包括配置参数优化、查询/写入策略、库表设计和系统负载分析。",
      "keywords": [
        "DolphinDB",
        "查询优化",
        "写入性能",
        "系统负载",
        "配置参数"
      ],
      "hypothetical_question": "如何诊断和解决DolphinDB中查询或写入慢的问题？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/MDL.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/MDL.md",
      "start_line": 1,
      "end_line": 393,
      "summary": "DolphinDB MDL插件提供了从通联数据MDL服务器获取高频行情数据的功能，包括安装指南、用户接口说明、使用示例及常见问题解答。",
      "keywords": [
        "DolphinDB",
        "MDL插件",
        "高频行情数据",
        "通联数据",
        "数据订阅"
      ],
      "hypothetical_question": "如何使用DolphinDB MDL插件从通联数据MDL服务器获取高频行情数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/LDAP.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/LDAP.md",
      "start_line": 1,
      "end_line": 163,
      "summary": "DolphinDB 提供 LDAP 插件，用于搜索 LDAP 服务器内的条目信息，并支持在 DolphinDB 中进行 LDAP 第三方验证登录功能。",
      "keywords": [
        "LDAP",
        "DolphinDB",
        "第三方验证",
        "插件安装",
        "身份验证"
      ],
      "hypothetical_question": "如何在 DolphinDB 中配置和使用 LDAP 插件进行第三方验证登录？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/ctp.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/ctp.md",
      "start_line": 1,
      "end_line": 278,
      "summary": "DolphinDB CTP插件文档介绍了如何安装和使用该插件来连接CTP系统，订阅期货市场实时行情数据，并提供了详细的接口说明和使用示例。",
      "keywords": [
        "CTP",
        "DolphinDB",
        "期货市场",
        "实时行情",
        "插件"
      ],
      "hypothetical_question": "如何在DolphinDB中使用CTP插件连接期货市场并订阅实时行情数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/SSEQuotationFile.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/SSEQuotationFile.md",
      "start_line": 1,
      "end_line": 132,
      "summary": "DolphinDB的SSEQuotationFile插件用于解析上交所提供的行情文件，如港股通和中证指数行情，支持订阅、取消订阅、获取状态和表结构等功能。",
      "keywords": [
        "SSEQuotationFile",
        "DolphinDB",
        "行情文件",
        "上交所",
        "插件"
      ],
      "hypothetical_question": "如何使用DolphinDB的SSEQuotationFile插件解析上交所的行情文件？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/datafeed.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/datafeed.md",
      "start_line": 1,
      "end_line": 218,
      "summary": "DolphinDB DataFeed 插件通过集成中金所提供的 SDK 来接收非展示型行情源数据，并将数据存入 DolphinDB 的数据表，支持 TCP 和 UDB 组播两种方式接收数据。",
      "keywords": [
        "DolphinDB",
        "DataFeed",
        "行情数据",
        "TCP",
        "UDB"
      ],
      "hypothetical_question": "如何使用 DolphinDB DataFeed 插件接收和存储行情数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/ctp_2.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/ctp_2.md",
      "start_line": 1,
      "end_line": 278,
      "summary": "DolphinDB CTP插件文档介绍了如何安装和使用CTP插件来对接期货市场的CTP系统，包括连接服务器、订阅数据、查询合约信息等功能。",
      "keywords": [
        "DolphinDB",
        "CTP插件",
        "期货市场",
        "实时行情",
        "合约查询"
      ],
      "hypothetical_question": "如何在DolphinDB中安装和使用CTP插件来对接期货市场的CTP系统？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/ctp_best_practice.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/ctp_best_practice.md",
      "start_line": 1,
      "end_line": 678,
      "summary": "本文档详细介绍了如何使用DolphinDB CTP插件订阅期货市场实时行情数据，并将数据写入分布式数据库的最佳实践指南。",
      "keywords": [
        "DolphinDB",
        "CTP插件",
        "实时行情数据",
        "分布式数据库",
        "自动订阅"
      ],
      "hypothetical_question": "如何使用DolphinDB CTP插件将期货市场的实时行情数据写入分布式数据库？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/backtest.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/backtest.md",
      "start_line": 1,
      "end_line": 771,
      "summary": "DolphinDB的回测引擎插件提供了事件驱动的回测功能，支持多种资产类型和行情数据，包括股票、期货、期权、数字货币和银行间债券，并详细介绍了引擎配置、安装步骤、回调函数和回测示例。",
      "keywords": [
        "回测引擎",
        "DolphinDB",
        "事件驱动",
        "多资产支持",
        "回调函数"
      ],
      "hypothetical_question": "如何使用DolphinDB的回测引擎插件进行多资产策略回测？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/gurobi.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/gurobi.md",
      "start_line": 1,
      "end_line": 293,
      "summary": "DolphinDB Gurobi 插件文档，介绍了 Gurobi 优化求解器的安装步骤、接口说明及使用示例。",
      "keywords": [
        "Gurobi",
        "DolphinDB",
        "优化求解器",
        "线性规划",
        "二次规划"
      ],
      "hypothetical_question": "如何在 DolphinDB 中安装和使用 Gurobi 插件进行优化求解？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/efh.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/efh.md",
      "start_line": 1,
      "end_line": 296,
      "summary": "DolphinDB EFH 插件文档，介绍如何安装、配置及使用该插件对接盛立极速行情系统（EFH），以接入上交所和深交所的 Level-2 实时行情。",
      "keywords": [
        "EFH",
        "DolphinDB",
        "Level-2行情",
        "插件安装",
        "实时行情"
      ],
      "hypothetical_question": "如何使用 DolphinDB EFH 插件接入上交所和深交所的 Level-2 实时行情？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/lgbm.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/lgbm.md",
      "start_line": 1,
      "end_line": 171,
      "summary": "lgbm 插件用于调用 LightGBM 库，在 DolphinDB 中进行分类和回归，支持模型训练、预测、保存和加载。",
      "keywords": [
        "LightGBM",
        "DolphinDB",
        "机器学习",
        "回归分析",
        "插件"
      ],
      "hypothetical_question": "如何在 DolphinDB 中使用 lgbm 插件进行回归分析和模型预测？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/plg_dev_adv.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/plg_dev_adv.md",
      "start_line": 1,
      "end_line": 636,
      "summary": "本文详细解析了DolphinDB插件开发中的高级技巧，包括对象创建、高效读写数据、后台线程创建和用户权限设置等。",
      "keywords": [
        "插件开发",
        "高效读写",
        "后台线程",
        "用户权限",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB插件开发中高效读写数据和创建后台线程？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/plg_howtos.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/plg_howtos.md",
      "start_line": 1,
      "end_line": 168,
      "summary": "DolphinDB插件介绍、下载、加载、编译及故障排查指南。",
      "keywords": [
        "DolphinDB插件",
        "插件编译",
        "loadPlugin",
        "插件市场",
        "故障排查"
      ],
      "hypothetical_question": "如何在DolphinDB中加载和使用插件？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/orc.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/orc.md",
      "start_line": 1,
      "end_line": 244,
      "summary": "DolphinDB ORC 插件支持 ORC 文件的导入、导出及数据类型转换，适用于高效存储与提取数据。",
      "keywords": [
        "ORC",
        "DolphinDB",
        "插件",
        "数据类型转换",
        "文件导入导出"
      ],
      "hypothetical_question": "DolphinDB 如何支持 ORC 文件的导入和导出？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/excel_add_in.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/excel_add_in.md",
      "start_line": 1,
      "end_line": 298,
      "summary": "DolphinDB Excel Add-In 是一款插件，允许用户在 Excel 中直接使用 DolphinDB 的强大计算和分析功能，支持数据查询、订阅和函数调用。",
      "keywords": [
        "DolphinDB",
        "Excel Add-In",
        "数据查询",
        "数据订阅",
        "函数调用"
      ],
      "hypothetical_question": "如何在 Excel 中使用 DolphinDB 进行数据查询和分析？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/performance_comparison.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/performance_comparison.md",
      "start_line": 1,
      "end_line": 129,
      "summary": "DolphinDB在交易回测性能与功能上相比功夫量化、Backtrader、MetaTrader 4和VNPY具有显著优势。",
      "keywords": [
        "DolphinDB",
        "性能对比",
        "回测框架",
        "JIT",
        "高频交易"
      ],
      "hypothetical_question": "DolphinDB在交易回测性能与功能上相比其他平台有哪些优势？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/plg_mkt_inst.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/plg_mkt_inst.md",
      "start_line": 1,
      "end_line": 43,
      "summary": "介绍如何在DolphinDB插件市场安装插件，包括版本要求、zip插件安装（可选）及具体安装步骤。",
      "keywords": [
        "DolphinDB",
        "插件安装",
        "插件市场",
        "loadPlugin"
      ],
      "hypothetical_question": "如何在DolphinDB中安装插件市场的插件？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/plg_intro.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/plg_intro.md",
      "start_line": 1,
      "end_line": 63,
      "summary": "DolphinDB插件系统概述，包括插件分类、下载途径及安装方法。",
      "keywords": [
        "DolphinDB插件",
        "插件下载",
        "插件安装"
      ],
      "hypothetical_question": "如何在DolphinDB中下载和安装插件？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/plg_dev_tutorial.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/plg_dev_tutorial.md",
      "start_line": 1,
      "end_line": 868,
      "summary": "DolphinDB插件开发教程，详细介绍了如何用C++开发插件以扩展系统功能，包括基本概念、常用目录、创建变量、异常处理、调用内置函数、时间序列数据处理、分布式SQL聚合函数、流数据处理、外部数据源支持及常见问题。",
      "keywords": [
        "DolphinDB",
        "插件开发",
        "C++",
        "时间序列",
        "分布式计算"
      ],
      "hypothetical_question": "如何用C++开发DolphinDB插件以支持时间序列数据处理和分布式计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/redis.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/redis.md",
      "start_line": 1,
      "end_line": 347,
      "summary": "DolphinDB Redis插件文档介绍了如何安装、连接Redis服务器以及使用各种函数接口进行数据操作。",
      "keywords": [
        "DolphinDB",
        "Redis插件",
        "数据操作",
        "函数接口"
      ],
      "hypothetical_question": "如何在DolphinDB中使用Redis插件连接和操作Redis服务器？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/rabbitMQ.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/rabbitMQ.md",
      "start_line": 1,
      "end_line": 836,
      "summary": "DolphinDB RabbitMQ插件文档，详细介绍了插件的安装步骤、接口说明及使用方法，包括连接、通道管理、Exchange和Queue操作、消息发布与订阅等功能。",
      "keywords": [
        "RabbitMQ",
        "DolphinDB",
        "消息队列",
        "插件安装",
        "接口说明"
      ],
      "hypothetical_question": "如何在DolphinDB中安装和使用RabbitMQ插件进行消息队列操作？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/sevenzip.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/sevenzip.md",
      "start_line": 1,
      "end_line": 113,
      "summary": "DolphinDB的SevenZip插件支持多种格式的文件压缩和解压缩，并提供了详细的安装步骤和接口说明。",
      "keywords": [
        "SevenZip",
        "DolphinDB",
        "压缩",
        "解压缩",
        "插件"
      ],
      "hypothetical_question": "如何在DolphinDB中使用SevenZip插件进行文件压缩和解压缩？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/rocketMQ.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/rocketMQ.md",
      "start_line": 1,
      "end_line": 204,
      "summary": "DolphinDB 的 RocketMQ 插件支持发送和接收 RocketMQ 集群中的数据，提供了创建生产者、发送数据、创建订阅任务等功能的详细接口说明和配置参数。",
      "keywords": [
        "RocketMQ",
        "DolphinDB",
        "插件",
        "生产者",
        "订阅任务"
      ],
      "hypothetical_question": "如何在 DolphinDB 中使用 RocketMQ 插件发送和接收数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/slwriter.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/slwriter.md",
      "start_line": 1,
      "end_line": 152,
      "summary": "SchemalessWriter插件用于动态写入物联网日志型数据到DolphinDB分布式表，支持InfluxDB Line protocol、海康json和key/value格式。",
      "keywords": [
        "SchemalessWriter",
        "InfluxDB Line protocol",
        "海康json",
        "动态表结构",
        "userDefinedAppend"
      ],
      "hypothetical_question": "如何使用DolphinDB的SchemalessWriter插件动态写入不同格式的物联网日志数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/websocket.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/websocket.md",
      "start_line": 1,
      "end_line": 196,
      "summary": "DolphinDB的WebSocket插件提供了WebSocket客户端功能，支持双向通信、数据订阅和发送，以及响应头文件的提取。",
      "keywords": [
        "WebSocket",
        "DolphinDB",
        "插件",
        "双向通信",
        "数据订阅"
      ],
      "hypothetical_question": "DolphinDB的WebSocket插件有哪些功能和接口？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/tcpsocket.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/tcpsocket.md",
      "start_line": 1,
      "end_line": 210,
      "summary": "DolphinDB的TCPSocket插件提供了通过TCP连接进行数据接收和发送的功能，包括创建、管理和关闭TCP连接的方法。",
      "keywords": [
        "TCPSocket",
        "DolphinDB",
        "TCP连接",
        "数据接收",
        "插件安装"
      ],
      "hypothetical_question": "如何在DolphinDB中使用TCPSocket插件进行TCP连接和数据传输？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/windtdf.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/windtdf.md",
      "start_line": 1,
      "end_line": 294,
      "summary": "DolphinDB WindTDF 插件用于接收万得实时行情数据，支持股票、债券、期货等行情，并提供安装、订阅、取消订阅等功能。",
      "keywords": [
        "WindTDF",
        "DolphinDB",
        "实时行情",
        "订阅",
        "万得"
      ],
      "hypothetical_question": "如何使用 DolphinDB WindTDF 插件接收万得实时行情数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/Arrow/arrow.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/Arrow/arrow.md",
      "start_line": 1,
      "end_line": 112,
      "summary": "DolphinDB的Arrow插件支持将数据以Apache Arrow格式高效传输，并详细介绍了安装步骤、数据类型转换及使用示例。",
      "keywords": [
        "DolphinDB",
        "Arrow插件",
        "数据类型转换",
        "安装步骤",
        "Python API"
      ],
      "hypothetical_question": "如何在DolphinDB中使用Arrow插件进行高效数据传输？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/xtp.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/xtp.md",
      "start_line": 1,
      "end_line": 617,
      "summary": "DolphinDB XTP插件提供了接收上交所、深交所及北交所实时行情数据的功能，并详细介绍了安装步骤、接口说明及使用示例。",
      "keywords": [
        "DolphinDB",
        "XTP插件",
        "实时行情",
        "安装步骤",
        "接口说明"
      ],
      "hypothetical_question": "如何使用DolphinDB的XTP插件接收上交所、深交所及北交所的实时行情数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/amdquote/amdquote_2.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/amdquote/amdquote_2.md",
      "start_line": 1,
      "end_line": 432,
      "summary": "DolphinDB 的 amdQuote 插件用于接收华锐 AMD 的极速行情数据，支持多种行情数据类型，并提供连接、订阅、取消订阅等功能。",
      "keywords": [
        "DolphinDB",
        "amdQuote",
        "华锐 AMD",
        "行情数据",
        "插件"
      ],
      "hypothetical_question": "如何使用 DolphinDB 的 amdQuote 插件接收华锐 AMD 的行情数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/MatchingEngine/me.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/MatchingEngine/me.md",
      "start_line": 1,
      "end_line": 134,
      "summary": "DolphinDB MatchingEngine 插件模拟交易所行为，处理订单数据并输出成交结果和订单簿。",
      "keywords": [
        "MatchingEngine",
        "DolphinDB",
        "交易所模拟",
        "订单簿",
        "成交结果"
      ],
      "hypothetical_question": "如何在 DolphinDB 中使用 MatchingEngine 插件模拟交易所行为并处理订单数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/amdquote/amdquote.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/amdquote/amdquote.md",
      "start_line": 1,
      "end_line": 432,
      "summary": "DolphinDB 的 amdQuote 插件用于接收华锐 AMD 的极速行情数据，支持多种行情数据类型，并提供了安装、连接、订阅、取消订阅等接口的详细说明。",
      "keywords": [
        "DolphinDB",
        "amdQuote",
        "华锐AMD",
        "行情数据",
        "插件"
      ],
      "hypothetical_question": "如何使用 DolphinDB 的 amdQuote 插件接收华锐 AMD 的行情数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/amdquote/amdhistory.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/amdquote/amdhistory.md",
      "start_line": 1,
      "end_line": 205,
      "summary": "DolphinDB 的 amdHistory 插件用于导入华锐 AMD 历史行情数据，支持股票、期货、期权等多种数据类型，并提供连接、查询、获取表结构等功能接口。",
      "keywords": [
        "DolphinDB",
        "amdHistory",
        "历史行情数据",
        "华锐AMD",
        "插件"
      ],
      "hypothetical_question": "如何在 DolphinDB 中使用 amdHistory 插件导入华锐 AMD 的历史行情数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/aws/aws.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/aws/aws.md",
      "start_line": 1,
      "end_line": 352,
      "summary": "DolphinDB AWSS3 插件文档，详细介绍了如何安装和使用该插件与 Amazon S3 服务交互，包括接口说明和使用示例。",
      "keywords": [
        "DolphinDB",
        "AWSS3",
        "Amazon S3",
        "插件",
        "云存储"
      ],
      "hypothetical_question": "如何使用 DolphinDB 的 AWSS3 插件与 Amazon S3 服务进行交互？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/backtest/digital_currency.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/backtest/digital_currency.md",
      "start_line": 1,
      "end_line": 233,
      "summary": "DolphinDB数字货币回测平台支持多种行情数据类型和账户管理，提供详细的引擎配置和行情数据结构说明。",
      "keywords": [
        "数字货币",
        "回测平台",
        "行情数据",
        "引擎配置",
        "回调函数"
      ],
      "hypothetical_question": "DolphinDB数字货币回测平台支持哪些行情数据类型和账户管理功能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/backtest/interface_description.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/backtest/interface_description.md",
      "start_line": 1,
      "end_line": 1211,
      "summary": "DolphinDB回测引擎接口说明，包括创建回测引擎、设置回调函数、执行回测、获取回测结果等功能的详细描述。",
      "keywords": [
        "回测引擎",
        "DolphinDB",
        "接口说明",
        "回调函数",
        "策略回测"
      ],
      "hypothetical_question": "DolphinDB回测引擎的主要接口和功能有哪些？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/backtest/interbank_bonds.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/backtest/interbank_bonds.md",
      "start_line": 1,
      "end_line": 186,
      "summary": "DolphinDB回测平台支持银行间债券和上交所债券，提供了详细的引擎配置、行情数据结构和策略回调函数说明。",
      "keywords": [
        "债券",
        "回测平台",
        "银行间债券",
        "上交所债券",
        "引擎配置"
      ],
      "hypothetical_question": "DolphinDB回测平台如何配置和使用银行间债券和上交所债券的回测功能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/backtest/futures.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/backtest/futures.md",
      "start_line": 1,
      "end_line": 310,
      "summary": "该文档详细介绍了DolphinDB回测平台支持的期货资产行情数据类型、引擎配置参数、基本信息表字段说明以及快照和分钟频/日频行情的具体数据结构和策略回调函数。",
      "keywords": [
        "期货",
        "回测平台",
        "行情数据类型",
        "引擎配置",
        "回调函数"
      ],
      "hypothetical_question": "DolphinDB回测平台支持哪些期货行情数据类型以及如何进行引擎配置？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/backtest/performance_tuning.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/backtest/performance_tuning.md",
      "start_line": 1,
      "end_line": 10,
      "summary": "该文本片段是附录部分，列出了几个与回测相关的演示文件。",
      "keywords": [
        "附录",
        "回测",
        "演示文件"
      ],
      "hypothetical_question": "DolphinDB回测性能调优文档的附录部分包含了哪些演示文件？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/backtest/multi_asset.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/backtest/multi_asset.md",
      "start_line": 1,
      "end_line": 146,
      "summary": "DolphinDB回测平台支持多账户回测，包括股票、期权、期货等资产，并提供了详细的引擎配置、行情数据结构和建表说明。",
      "keywords": [
        "多账户回测",
        "引擎配置",
        "行情数据结构"
      ],
      "hypothetical_question": "DolphinDB回测平台如何配置多账户回测并处理不同资产的行情数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/backtest/stock.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/backtest/stock.md",
      "start_line": 1,
      "end_line": 805,
      "summary": "DolphinDB回测平台支持的股票资产行情数据类型及其配置、数据结构和回调函数的详细说明。",
      "keywords": [
        "股票回测",
        "行情数据类型",
        "回调函数",
        "引擎配置",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB回测平台支持哪些股票资产行情数据类型及其配置？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/backtest/option.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/backtest/option.md",
      "start_line": 1,
      "end_line": 339,
      "summary": "该文档详细介绍了DolphinDB回测平台中期权回测的配置参数、行情数据结构及策略回调函数说明。",
      "keywords": [
        "期权回测",
        "行情数据结构",
        "策略回调函数",
        "引擎配置",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB回测平台中配置期权回测的引擎参数和行情数据结构？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/backtest/release/3_00_2.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/backtest/release/3_00_2.md",
      "start_line": 1,
      "end_line": 86,
      "summary": "DolphinDB 3.00.2版本的回测插件更新，包括新增功能、功能优化和缺陷修复。",
      "keywords": [
        "回测引擎",
        "多资产回测",
        "JIT模式",
        "期权行权",
        "缺陷修复"
      ],
      "hypothetical_question": "DolphinDB 3.00.2版本的回测插件有哪些新功能和改进？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/dataxwriter/README_CN.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/dataxwriter/README_CN.md",
      "start_line": 1,
      "end_line": 353,
      "summary": "本文档介绍了基于DataX的DolphinDB数据导入工具dolphindbwriter的使用方法、配置项及常见场景示例。",
      "keywords": [
        "DataX",
        "DolphinDB",
        "数据导入",
        "插件",
        "配置"
      ],
      "hypothetical_question": "如何使用DataX将数据从Oracle导入到DolphinDB？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/feather/feather.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/feather/feather.md",
      "start_line": 1,
      "end_line": 195,
      "summary": "DolphinDB Feather插件支持高效导入导出Apache Arrow Feather文件，并提供了详细的安装步骤、接口说明和数据类型转换规则。",
      "keywords": [
        "DolphinDB",
        "Feather插件",
        "Apache Arrow",
        "数据类型转换",
        "列式存储"
      ],
      "hypothetical_question": "如何在DolphinDB中使用Feather插件导入导出Apache Arrow Feather文件？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/gp/gp.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/gp/gp.md",
      "start_line": 1,
      "end_line": 85,
      "summary": "DolphinDB的gp插件允许用户使用vector和table类型的数据进行绘图，并将结果保存为eps、png或jpeg格式的文件。",
      "keywords": [
        "DolphinDB",
        "gp插件",
        "绘图",
        "数据可视化",
        "gnuplot"
      ],
      "hypothetical_question": "如何在DolphinDB中使用gp插件进行数据绘图并保存为图片文件？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/backtest/release/3_00_3.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/backtest/release/3_00_3.md",
      "start_line": 1,
      "end_line": 18,
      "summary": "DolphinDB 3.00.3版本在回测功能中新增了多资产期权行权支持、扩展行情字段使用、新增配置项和函数，并进行了功能优化和缺陷修复。",
      "keywords": [
        "DolphinDB",
        "回测引擎",
        "期权行权",
        "功能优化",
        "缺陷修复"
      ],
      "hypothetical_question": "DolphinDB 3.00.3版本在回测功能方面有哪些更新和改进？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/hbase/hbase.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/hbase/hbase.md",
      "start_line": 1,
      "end_line": 213,
      "summary": "DolphinDB HBase插件通过Thrift接口连接HBase，提供安装、连接、表操作及数据加载等功能。",
      "keywords": [
        "DolphinDB",
        "HBase",
        "Thrift",
        "插件",
        "数据加载"
      ],
      "hypothetical_question": "如何在DolphinDB中安装和使用HBase插件？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/hdf5/hdf5.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/hdf5/hdf5.md",
      "start_line": 1,
      "end_line": 607,
      "summary": "DolphinDB HDF5插件提供了查看、读写HDF5文件的功能，支持多种数据类型转换，并详细介绍了安装步骤、用户接口、支持的数据类型及性能测试。",
      "keywords": [
        "HDF5",
        "DolphinDB",
        "数据类型转换",
        "插件安装",
        "性能测试"
      ],
      "hypothetical_question": "如何在DolphinDB中使用HDF5插件读写HDF5文件并转换数据类型？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/kafka/kafka.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/kafka/kafka.md",
      "start_line": 1,
      "end_line": 988,
      "summary": "DolphinDB Kafka插件文档，详细介绍了插件的安装、配置、接口使用及常见问题解答。",
      "keywords": [
        "Kafka插件",
        "DolphinDB",
        "消息队列",
        "生产者消费者",
        "SASL认证"
      ],
      "hypothetical_question": "如何在DolphinDB中安装和配置Kafka插件以实现消息队列的生产和消费？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/httpClient/httpclient.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/httpClient/httpclient.md",
      "start_line": 1,
      "end_line": 274,
      "summary": "DolphinDB的httpClient插件提供了发送HTTP请求和邮件的功能，支持GET、POST、PUT、DELETE等HTTP方法以及SMTP邮件发送。",
      "keywords": [
        "httpClient",
        "HTTP请求",
        "SMTP",
        "DolphinDB插件",
        "邮件发送"
      ],
      "hypothetical_question": "如何在DolphinDB中使用httpClient插件发送HTTP请求和邮件？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/hdfs/hdfs.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/hdfs/hdfs.md",
      "start_line": 1,
      "end_line": 434,
      "summary": "DolphinDB HDFS插件支持与Hadoop分布式文件系统交互，实现数据读写、文件操作及格式转换功能。",
      "keywords": [
        "HDFS",
        "DolphinDB",
        "插件",
        "数据读写",
        "Parquet"
      ],
      "hypothetical_question": "如何使用DolphinDB的HDFS插件与Hadoop分布式文件系统进行交互？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/insight/insight.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/insight/insight.md",
      "start_line": 1,
      "end_line": 252,
      "summary": "DolphinDB的insight插件用于连接华泰证券的INSIGHT金融数据服务，支持接入多种证券市场与期货市场的实时行情数据，并提供安装、接口说明及使用示例。",
      "keywords": [
        "DolphinDB",
        "insight插件",
        "华泰证券",
        "实时行情",
        "金融数据服务"
      ],
      "hypothetical_question": "如何使用DolphinDB的insight插件连接华泰证券的INSIGHT金融数据服务？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/insight/insight_2.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/insight/insight_2.md",
      "start_line": 1,
      "end_line": 252,
      "summary": "DolphinDB的insight插件用于连接华泰证券的INSIGHT金融数据服务，支持接入多种证券市场与期货市场的实时行情数据，并提供了安装、接口使用及示例说明。",
      "keywords": [
        "DolphinDB",
        "INSIGHT",
        "华泰证券",
        "实时行情",
        "插件"
      ],
      "hypothetical_question": "如何使用DolphinDB的insight插件接入华泰证券的INSIGHT金融数据服务？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/libtorch/libtorch.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/libtorch/libtorch.md",
      "start_line": 1,
      "end_line": 229,
      "summary": "DolphinDB的LibTorch插件允许用户在DolphinDB环境中直接加载和使用TorchScript模型，结合数据处理与深度学习功能。",
      "keywords": [
        "LibTorch",
        "DolphinDB",
        "TorchScript",
        "深度学习",
        "模型预测"
      ],
      "hypothetical_question": "如何在DolphinDB中使用LibTorch插件加载和预测TorchScript模型？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/kdb/kdb.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/kdb/kdb.md",
      "start_line": 1,
      "end_line": 546,
      "summary": "DolphinDB的kdb+插件支持从kdb+数据库导入数据到DolphinDB，提供了多种接口和方法来处理不同类型的数据表和数据类型转换。",
      "keywords": [
        "DolphinDB",
        "kdb+插件",
        "数据导入",
        "数据类型转换",
        "列式数据库"
      ],
      "hypothetical_question": "如何在DolphinDB中使用kdb+插件从kdb+数据库导入数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/mat/mat.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/mat/mat.md",
      "start_line": 1,
      "end_line": 184,
      "summary": "DolphinDB的mat插件支持与MATLAB文件的数据交互，包括读取mat文件到DolphinDB或将DolphinDB变量写入mat文件，并提供数据类型转换功能。",
      "keywords": [
        "DolphinDB",
        "mat插件",
        "MATLAB",
        "数据类型转换",
        "文件交互"
      ],
      "hypothetical_question": "如何在DolphinDB中安装和使用mat插件进行MATLAB文件的数据交互？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/matchingEngineSimulator/rn.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/matchingEngineSimulator/rn.md",
      "start_line": 1,
      "end_line": 109,
      "summary": "DolphinDB模拟撮合引擎插件的版本更新说明，包括新功能、功能优化和故障修复。",
      "keywords": [
        "模拟撮合引擎",
        "版本说明",
        "新功能",
        "功能优化",
        "故障修复"
      ],
      "hypothetical_question": "DolphinDB模拟撮合引擎插件在3.00.3版本中有哪些新功能和优化？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/mseed/mseed.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/mseed/mseed.md",
      "start_line": 1,
      "end_line": 242,
      "summary": "DolphinDB 的 mseed 插件支持读取和写入 miniSEED 格式的地震学时间序列数据，并提供了多个接口用于解析和转换数据。",
      "keywords": [
        "miniSEED",
        "DolphinDB",
        "地震学",
        "时间序列",
        "插件"
      ],
      "hypothetical_question": "DolphinDB 的 mseed 插件有哪些功能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/mqtt/mqtt.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/mqtt/mqtt.md",
      "start_line": 1,
      "end_line": 438,
      "summary": "DolphinDB MQTT 插件文档，详细介绍了插件的安装步骤、接口功能及使用方法，包括连接管理、消息发布与订阅等功能。",
      "keywords": [
        "MQTT",
        "DolphinDB",
        "插件"
      ],
      "hypothetical_question": "如何在 DolphinDB 中使用 MQTT 插件进行消息的发布和订阅？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/mongodb/mongodb.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/mongodb/mongodb.md",
      "start_line": 1,
      "end_line": 275,
      "summary": "DolphinDB的MongoDB插件允许用户连接MongoDB服务器并导入数据到DolphinDB内存表中，支持多种数据类型转换和查询操作。",
      "keywords": [
        "MongoDB",
        "DolphinDB",
        "插件",
        "数据导入",
        "数据类型转换"
      ],
      "hypothetical_question": "如何使用DolphinDB的MongoDB插件导入MongoDB数据到DolphinDB内存表中？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/matchingEngineSimulator/mes.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/matchingEngineSimulator/mes.md",
      "start_line": 1,
      "end_line": 749,
      "summary": "DolphinDB的MatchingEngineSimulator插件用于模拟证券交易撮合引擎，支持多种行情数据和订单类型，提供详细的撮合结果输出和配置选项。",
      "keywords": [
        "MatchingEngineSimulator",
        "DolphinDB",
        "证券交易",
        "撮合引擎",
        "行情数据"
      ],
      "hypothetical_question": "如何在DolphinDB中使用MatchingEngineSimulator插件模拟证券交易撮合过程？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/mysql/mysql.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/mysql/mysql.md",
      "start_line": 1,
      "end_line": 394,
      "summary": "DolphinDB MySQL 插件支持将 MySQL 数据高效导入 DolphinDB，提供安装指南、函数接口及数据类型转换说明。",
      "keywords": [
        "DolphinDB",
        "MySQL插件",
        "数据导入",
        "数据类型转换",
        "函数接口"
      ],
      "hypothetical_question": "如何将MySQL数据高效导入DolphinDB并处理数据类型转换？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/odbc/odbc_faq.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/odbc/odbc_faq.md",
      "start_line": 1,
      "end_line": 16,
      "summary": "提供了Oracle ODBC驱动中SQLDriverConnectW的实现验证方法，并列出了常见数据库在不同操作系统下的推荐ODBC驱动。",
      "keywords": [
        "ODBC驱动",
        "Oracle",
        "SQLDriverConnectW"
      ],
      "hypothetical_question": "在不同操作系统下，哪些ODBC驱动适用于常见的数据库？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/opc/opc.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/opc/opc.md",
      "start_line": 1,
      "end_line": 272,
      "summary": "DolphinDB OPC 插件提供了访问和采集自动化行业 OPC 服务器数据的功能，支持 OPC DA 2.05A 版本规范，并详细介绍了插件的安装步骤和接口使用方法。",
      "keywords": [
        "DolphinDB",
        "OPC 插件",
        "自动化行业",
        "数据采集",
        "OPC DA"
      ],
      "hypothetical_question": "如何使用 DolphinDB 的 OPC 插件访问和采集自动化行业 OPC 服务器的数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/nsq/nsq_2.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/nsq/nsq_2.md",
      "start_line": 1,
      "end_line": 285,
      "summary": "DolphinDB NSQ插件文档，介绍如何安装、配置和使用该插件对接恒生NSQ极速行情服务，包括连接、订阅、取消订阅等接口函数的详细说明。",
      "keywords": [
        "DolphinDB",
        "NSQ插件",
        "行情服务",
        "恒生",
        "订阅"
      ],
      "hypothetical_question": "如何使用DolphinDB的NSQ插件对接恒生NSQ极速行情服务？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/odbc/odbc.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/odbc/odbc.md",
      "start_line": 1,
      "end_line": 340,
      "summary": "该文档详细介绍了如何在DolphinDB中安装和使用ODBC插件，包括连接数据库、执行查询和写入数据的方法，以及常见问题的解决方案。",
      "keywords": [
        "DolphinDB",
        "ODBC插件",
        "数据库连接",
        "SQL查询",
        "数据类型映射"
      ],
      "hypothetical_question": "如何在DolphinDB中安装和使用ODBC插件进行数据库操作？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/nsq/nsq.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/nsq/nsq.md",
      "start_line": 1,
      "end_line": 285,
      "summary": "DolphinDB NSQ插件文档介绍了如何安装、配置和使用该插件来对接恒生NSQ极速行情服务，包括连接、订阅、取消订阅行情数据等操作。",
      "keywords": [
        "DolphinDB",
        "NSQ插件",
        "行情服务",
        "恒生HSNsqApi",
        "流数据"
      ],
      "hypothetical_question": "如何使用DolphinDB的NSQ插件对接恒生NSQ极速行情服务？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/parquet/parquet.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/parquet/parquet.md",
      "start_line": 1,
      "end_line": 340,
      "summary": "DolphinDB Parquet插件支持将Parquet文件导入和导出DolphinDB，并提供数据类型转换功能。",
      "keywords": [
        "Parquet",
        "DolphinDB",
        "数据类型转换",
        "插件"
      ],
      "hypothetical_question": "如何在DolphinDB中使用Parquet插件导入和导出数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/signal/signal.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/signal/signal.md",
      "start_line": 1,
      "end_line": 114,
      "summary": "该文本片段提供了DolphinDB signal插件的10个示例，展示了如何进行离散余弦变换、离散正弦变换、离散小波变换、快速傅立叶变换等信号处理操作。",
      "keywords": [
        "signal插件",
        "离散余弦变换",
        "快速傅立叶变换"
      ],
      "hypothetical_question": "DolphinDB signal插件支持哪些信号处理操作的示例？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/py/py.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/py/py.md",
      "start_line": 1,
      "end_line": 527,
      "summary": "DolphinDB的Py插件允许用户在DolphinDB中调用Python环境中的第三方库，支持Python 3.6和3.7版本，并提供了详细的数据类型转换和接口说明。",
      "keywords": [
        "DolphinDB",
        "Python插件",
        "数据类型转换",
        "numpy",
        "pandas"
      ],
      "hypothetical_question": "如何在DolphinDB中安装和使用Py插件来调用Python的第三方库？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/opcua/opcua.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/opcua/opcua.md",
      "start_line": 1,
      "end_line": 383,
      "summary": "DolphinDB OPCUA插件文档，介绍了插件的安装步骤、接口功能及使用示例，支持与OPC UA服务器的数据传输、连接、读写和订阅操作。",
      "keywords": [
        "OPCUA",
        "DolphinDB",
        "插件安装",
        "数据传输",
        "订阅功能"
      ],
      "hypothetical_question": "如何在DolphinDB中安装并使用OPCUA插件与OPC UA服务器进行数据传输？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/svm/svm.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/svm/svm.md",
      "start_line": 1,
      "end_line": 209,
      "summary": "DolphinDB SVM插件提供了基于libsvm的支持向量机算法实现，支持分类和回归问题的训练、预测和模型评估。",
      "keywords": [
        "SVM",
        "DolphinDB",
        "libsvm",
        "分类",
        "回归"
      ],
      "hypothetical_question": "如何在DolphinDB中使用SVM插件进行模型的训练和预测？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/signal/sipui2.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/signal/sipui2.md",
      "start_line": 1,
      "end_line": 228,
      "summary": "DolphinDB SipUI2 插件通过中畅原生 API 订阅沪深市场的股票、基金、债券的快照和逐笔行情，并将数据存入 DolphinDB 的数据表。",
      "keywords": [
        "DolphinDB",
        "SipUI2",
        "实时行情",
        "沪深市场",
        "插件"
      ],
      "hypothetical_question": "如何使用 DolphinDB SipUI2 插件订阅沪深市场的实时行情数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/zip/zip.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/zip/zip.md",
      "start_line": 1,
      "end_line": 100,
      "summary": "DolphinDB的zip插件提供了对zip文件进行解压和压缩的功能，支持不同操作系统和版本，并详细介绍了安装步骤和接口使用方法。",
      "keywords": [
        "zip插件",
        "解压",
        "压缩",
        "DolphinDB",
        "安装步骤"
      ],
      "hypothetical_question": "如何在DolphinDB中使用zip插件进行文件的解压和压缩？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/quantlib/quantlib.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/quantlib/quantlib.md",
      "start_line": 1,
      "end_line": 3673,
      "summary": "DolphinDB QuantLib插件文档，详细介绍了QuantLib插件的安装步骤、函数接口及其在金融计算中的应用。",
      "keywords": [
        "QuantLib",
        "DolphinDB",
        "金融计算",
        "衍生品定价",
        "插件安装"
      ],
      "hypothetical_question": "如何在DolphinDB中安装和使用QuantLib插件进行金融计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/xgboost/xgboost.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/xgboost/xgboost.md",
      "start_line": 1,
      "end_line": 192,
      "summary": "DolphinDB的xgboost插件提供了调用XGBoost库函数的功能，支持训练、预测、模型保存和加载，并详细介绍了安装步骤、用户接口及示例。",
      "keywords": [
        "XGBoost",
        "DolphinDB",
        "机器学习",
        "插件"
      ],
      "hypothetical_question": "如何在DolphinDB中使用xgboost插件进行机器学习模型的训练和预测？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/attributes.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/attributes.md",
      "start_line": 1,
      "end_line": 30,
      "summary": "介绍DolphinDB中成员变量的定义、声明方法及不同类型变量的声明语法。",
      "keywords": [
        "成员变量",
        "声明",
        "标量",
        "常规向量",
        "数组向量"
      ],
      "hypothetical_question": "在DolphinDB中如何声明不同类型的成员变量？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/zlib/zlib.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/zlib/zlib.md",
      "start_line": 1,
      "end_line": 83,
      "summary": "DolphinDB的zlib插件提供了文件到文件的zlib压缩与解压缩功能，包括安装步骤和接口说明。",
      "keywords": [
        "DolphinDB",
        "zlib插件",
        "文件压缩",
        "文件解压缩",
        "安装步骤"
      ],
      "hypothetical_question": "如何在DolphinDB中安装和使用zlib插件进行文件压缩和解压缩？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/anonym_func.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/anonym_func.md",
      "start_line": 1,
      "end_line": 80,
      "summary": "DolphinDB中匿名函数的定义、语法、使用场景及示例。",
      "keywords": [
        "匿名函数",
        "DolphinDB",
        "语法",
        "使用场景",
        "示例"
      ],
      "hypothetical_question": "DolphinDB中匿名函数有哪些使用场景和语法示例？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/zmq/zmq.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/zmq/zmq.md",
      "start_line": 1,
      "end_line": 505,
      "summary": "DolphinDB的zmq插件提供了ZeroMQ消息通信的功能，包括创建socket、消息发送和订阅等操作，支持CSV和JSON格式的数据打包与解包。",
      "keywords": [
        "DolphinDB",
        "zmq插件",
        "ZeroMQ",
        "消息通信",
        "数据打包"
      ],
      "hypothetical_question": "如何在DolphinDB中使用zmq插件进行消息通信？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/class_objects.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/class_objects.md",
      "start_line": 1,
      "end_line": 74,
      "summary": "介绍DolphinDB中类和对象的定义、语法规则及实例化方法。",
      "keywords": [
        "类",
        "对象",
        "DolphinDB",
        "成员变量",
        "构造方法"
      ],
      "hypothetical_question": "如何在DolphinDB中定义和实例化一个类？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/closure.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/closure.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "闭包是一个能保存其作用域值的函数对象，即使在作用域失效后仍可访问父函数作用域中的变量。",
      "keywords": [
        "闭包",
        "lambda表达式",
        "函数对象",
        "作用域"
      ],
      "hypothetical_question": "什么是闭包，它在DolphinDB中如何工作？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/application.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/application.md",
      "start_line": 1,
      "end_line": 288,
      "summary": "DolphinDB中面向对象编程（OOP）在开发响应式状态引擎算子和复杂事件处理（CEP）中的应用示例。",
      "keywords": [
        "OOP",
        "响应式状态引擎",
        "复杂事件处理",
        "DolphinDB",
        "算子开发"
      ],
      "hypothetical_question": "DolphinDB中如何使用面向对象编程（OOP）开发响应式状态引擎算子和处理复杂事件（CEP）？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/constructor.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/constructor.md",
      "start_line": 1,
      "end_line": 14,
      "summary": "构造函数在面向对象编程中用于初始化类的成员变量，确保对象创建时处于有效状态。",
      "keywords": [
        "构造函数",
        "面向对象编程",
        "初始化",
        "成员变量"
      ],
      "hypothetical_question": "面向对象编程中构造函数的作用是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/data_forms.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/data_forms.md",
      "start_line": 1,
      "end_line": 45,
      "summary": "DolphinDB支持的数据形式及其示例和函数参考。",
      "keywords": [
        "DolphinDB",
        "数据形式",
        "标量",
        "向量",
        "矩阵"
      ],
      "hypothetical_question": "DolphinDB支持哪些数据形式？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/func_progr.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/func_progr.md",
      "start_line": 1,
      "end_line": 7,
      "summary": "介绍函数化编程的概念及其在DolphinDB中的应用，包括自定义函数、匿名函数、lambda表达式等高级功能。",
      "keywords": [
        "函数化编程",
        "自定义函数",
        "匿名函数",
        "lambda表达式",
        "高阶函数"
      ],
      "hypothetical_question": "DolphinDB中函数化编程包含哪些主要内容？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/data_types_forms_intro.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/data_types_forms_intro.md",
      "start_line": 1,
      "end_line": 7,
      "summary": "DolphinDB根据变量的数据类型分配内存并决定存储内容，本章介绍不同的数据类型和数据形式。",
      "keywords": [
        "DolphinDB",
        "数据类型",
        "内存分配",
        "数据形式"
      ],
      "hypothetical_question": "DolphinDB如何根据数据类型处理内存分配和存储内容？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/data_types.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/data_types.md",
      "start_line": 1,
      "end_line": 259,
      "summary": "DolphinDB 数据类型的详细分类、特性、范围及使用说明。",
      "keywords": [
        "数据类型",
        "DolphinDB",
        "符号",
        "范围",
        "溢出"
      ],
      "hypothetical_question": "DolphinDB 中有哪些数据类型及其特性和使用限制？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/inheritance.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/inheritance.md",
      "start_line": 1,
      "end_line": 104,
      "summary": "DolphinDB脚本支持单继承和多态，派生类可以继承基类的属性和方法，但属性名必须唯一，方法覆盖需要相同的函数签名。",
      "keywords": [
        "继承",
        "多态",
        "派生类",
        "基类",
        "方法覆盖"
      ],
      "hypothetical_question": "DolphinDB中如何实现类的继承和多态？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/member_function.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/member_function.md",
      "start_line": 1,
      "end_line": 128,
      "summary": "DolphinDB中成员方法的定义、声明分离、变量解析顺序、self引用、部分应用及特殊成员方法的详细说明。",
      "keywords": [
        "成员方法",
        "变量解析顺序",
        "self引用",
        "部分应用",
        "特殊成员方法"
      ],
      "hypothetical_question": "DolphinDB中成员方法的变量解析顺序是怎样的？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/lambda.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/lambda.md",
      "start_line": 1,
      "end_line": 154,
      "summary": "DolphinDB中Lambda表达式的语法、用法及示例。",
      "keywords": [
        "Lambda表达式",
        "匿名函数",
        "高阶函数",
        "语法",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中Lambda表达式有哪些语法和用法？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/lang_intro.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/lang_intro.md",
      "start_line": 1,
      "end_line": 7,
      "summary": "DolphinDB脚本语言文档介绍了编程相关概念，包括数据类型、运算符、编程语句等。",
      "keywords": [
        "DolphinDB",
        "脚本语言",
        "编程概念",
        "数据类型"
      ],
      "hypothetical_question": "DolphinDB脚本语言包含哪些编程相关概念？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/metaProgr_func.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/metaProgr_func.md",
      "start_line": 1,
      "end_line": 103,
      "summary": "DolphinDB中的函数元编程技术，包括动态获取函数定义、动态函数调用以及动态产生函数调用代码的方法。",
      "keywords": [
        "函数元编程",
        "动态函数调用",
        "DolphinDB",
        "makeCall",
        "parseExpr"
      ],
      "hypothetical_question": "如何在DolphinDB中动态获取和调用函数定义？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/partial_app.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/partial_app.md",
      "start_line": 1,
      "end_line": 170,
      "summary": "部分应用是指固定一个函数的部分参数，产生一个参数较少的函数，并详细介绍了其语法、使用细节和示例。",
      "keywords": [
        "部分应用",
        "函数参数",
        "高阶函数",
        "语法",
        "示例"
      ],
      "hypothetical_question": "如何在DolphinDB中使用部分应用来固定函数的部分参数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/progr_intro.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/progr_intro.md",
      "start_line": 1,
      "end_line": 13,
      "summary": "本章节介绍了DolphinDB的编程语言特性，包括脚本编程语言、SQL兼容性和Python语法解析器。",
      "keywords": [
        "DolphinDB",
        "编程语言",
        "SQL",
        "Python",
        "语法解析器"
      ],
      "hypothetical_question": "DolphinDB的编程语言章节包含哪些主要内容？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/macrovariations.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/macrovariations.md",
      "start_line": 1,
      "end_line": 174,
      "summary": "DolphinDB 提供了两种 SQL 元编程方法：基于函数的元编程和基于宏变量的元编程，用于动态生成和执行 SQL 语句。",
      "keywords": [
        "SQL 元编程",
        "DolphinDB",
        "基于函数的元编程",
        "基于宏变量的元编程",
        "动态 SQL"
      ],
      "hypothetical_question": "DolphinDB 中有哪些方法可以实现 SQL 元编程？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/named_func.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/named_func.md",
      "start_line": 1,
      "end_line": 211,
      "summary": "DolphinDB中命名函数的定义、语法、参数传递规则及示例，包括用户自定义聚合函数的介绍。",
      "keywords": [
        "命名函数",
        "默认参数",
        "可变参数",
        "用户自定义聚合函数",
        "函数参数"
      ],
      "hypothetical_question": "如何在DolphinDB中定义和使用命名函数以及用户自定义聚合函数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/rfc.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/rfc.md",
      "start_line": 1,
      "end_line": 55,
      "summary": "介绍了DolphinDB中远程函数调用的两种方式及其语法和示例。",
      "keywords": [
        "远程函数调用",
        "DolphinDB",
        "remoteRun",
        "远程连接",
        "用户定义函数"
      ],
      "hypothetical_question": "如何在DolphinDB中进行远程函数调用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/oop.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/oop.md",
      "start_line": 1,
      "end_line": 8,
      "summary": "DolphinDB通过引入类实现了面向对象编程，提高了代码的可读性、可维护性和复用性。",
      "keywords": [
        "面向对象编程",
        "DolphinDB",
        "类",
        "代码复用",
        "可维护性"
      ],
      "hypothetical_question": "DolphinDB如何实现面向对象编程及其优势是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/tensor.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/tensor.md",
      "start_line": 1,
      "end_line": 18,
      "summary": "DolphinDB引入了张量（tensor）数据结构，用于表示多维数据并与深度学习框架集成，但目前不支持直接存储、计算和元素访问。",
      "keywords": [
        "张量",
        "tensor",
        "DolphinDB",
        "多维数组",
        "深度学习"
      ],
      "hypothetical_question": "DolphinDB中的tensor数据结构有哪些主要特性和限制？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/data_mani/create_strings.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/data_mani/create_strings.md",
      "start_line": 1,
      "end_line": 243,
      "summary": "介绍在DolphinDB中创建字符串的多种方法，包括使用引号、函数和转义字符。",
      "keywords": [
        "字符串创建",
        "DolphinDB",
        "format函数",
        "转义字符",
        "decimalFormat"
      ],
      "hypothetical_question": "在DolphinDB中有哪些方法可以创建字符串？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/utility.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/utility.md",
      "start_line": 1,
      "end_line": 91,
      "summary": "介绍了DolphinDB中的工具函数，包括生成方法调用元代码的函数和对象属性操作函数。",
      "keywords": [
        "工具函数",
        "元代码",
        "OOP",
        "对象属性",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中有哪些工具函数可以用于生成方法调用元代码和操作对象属性？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/data_mani/detect_null.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/data_mani/detect_null.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "介绍如何使用isNull和hasNull函数检查数据中的空值。",
      "keywords": [
        "空值检查",
        "isNull",
        "hasNull",
        "DolphinDB",
        "函数"
      ],
      "hypothetical_question": "如何在DolphinDB中检查数据是否包含空值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/data_mani/dm_intro.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/data_mani/dm_intro.md",
      "start_line": 1,
      "end_line": 7,
      "summary": "介绍DolphinDB中关于字符串对象、时间序列对象和NULL值操作的数据操作内容。",
      "keywords": [
        "DolphinDB",
        "数据操作",
        "字符串对象",
        "时间序列对象",
        "NULL值操作"
      ],
      "hypothetical_question": "DolphinDB中的数据操作包括哪些内容？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/data_mani/func_null.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/data_mani/func_null.md",
      "start_line": 1,
      "end_line": 109,
      "summary": "DolphinDB中函数和运算符处理空值的规则及其在不同配置下的行为。",
      "keywords": [
        "空值处理",
        "二元运算符",
        "逻辑运算符",
        "聚合函数",
        "比较运算符"
      ],
      "hypothetical_question": "DolphinDB中如何处理二元运算符和逻辑运算符中的空值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/data_mani/format_temp_obj.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/data_mani/format_temp_obj.md",
      "start_line": 1,
      "end_line": 182,
      "summary": "该文档详细介绍了DolphinDB中日期和时间数据的格式调整及转换方法，包括temporalParse和temporalFormat函数的使用，以及不同格式的说明和示例。",
      "keywords": [
        "DolphinDB",
        "日期时间格式",
        "temporalParse",
        "temporalFormat",
        "数据转换"
      ],
      "hypothetical_question": "如何在DolphinDB中转换和格式化日期和时间数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/data_mani/init_null.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/data_mani/init_null.md",
      "start_line": 1,
      "end_line": 118,
      "summary": "介绍DolphinDB中VOID类型和特定数值类型的空值初始化方法。",
      "keywords": [
        "空值初始化",
        "VOID类型",
        "数值类型",
        "NULL",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中初始化VOID类型和特定数值类型的空值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/data_mani/null_in_tb.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/data_mani/null_in_tb.md",
      "start_line": 1,
      "end_line": 79,
      "summary": "该文档展示了如何在DolphinDB表中处理空值，包括设置空值条件、查询过滤以及基于组平均值的筛选操作。",
      "keywords": [
        "空值处理",
        "DolphinDB",
        "数据筛选",
        "组平均值"
      ],
      "hypothetical_question": "如何在DolphinDB中处理表中的空值并进行筛选？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/data_mani/null_scalar.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/data_mani/null_scalar.md",
      "start_line": 1,
      "end_line": 38,
      "summary": "该文本片段展示了DolphinDB中空值标量的使用和比较操作。",
      "keywords": [
        "空值标量",
        "NULL",
        "比较操作",
        "DolphinDB"
      ],
      "hypothetical_question": "在DolphinDB中如何进行空值标量的比较和运算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/data_mani/null_in_vst.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/data_mani/null_in_vst.md",
      "start_line": 1,
      "end_line": 79,
      "summary": "本文档介绍了在DolphinDB中处理向量、集合和元组中的空值（NULL）的操作方法和结果。",
      "keywords": [
        "空值",
        "向量",
        "集合",
        "元组",
        "DolphinDB"
      ],
      "hypothetical_question": "在DolphinDB中如何处理向量、集合和元组中的空值（NULL）？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/data_mani/null_oper.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/data_mani/null_oper.md",
      "start_line": 1,
      "end_line": 63,
      "summary": "DolphinDB中空值的表示、初始化、处理方法及其在不同函数中的使用。",
      "keywords": [
        "空值操作",
        "VOID类型",
        "isNull函数",
        "DolphinDB",
        "数据清洗"
      ],
      "hypothetical_question": "DolphinDB中如何处理和检查空值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/data_mani/process_null.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/data_mani/process_null.md",
      "start_line": 1,
      "end_line": 69,
      "summary": "该文档详细介绍了DolphinDB中空值在不同运算和函数中的处理方式及其特殊情况。",
      "keywords": [
        "空值运算",
        "比较运算符",
        "聚合函数",
        "逻辑函数",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中空值在比较运算符和聚合函数中是如何处理的？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/data_mani/replace_null.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/data_mani/replace_null.md",
      "start_line": 1,
      "end_line": 163,
      "summary": "DolphinDB提供了四种填充空值的方法：bfill、ffill、lfill和nullFill，并通过示例展示了它们的用法。",
      "keywords": [
        "空值填充",
        "bfill",
        "ffill",
        "lfill",
        "nullFill"
      ],
      "hypothetical_question": "DolphinDB中有哪些方法可以用于填充空值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/data_mani/string_oper.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/data_mani/string_oper.md",
      "start_line": 1,
      "end_line": 269,
      "summary": "DolphinDB中常用的字符串操作函数及其用法示例。",
      "keywords": [
        "字符串操作",
        "DolphinDB",
        "函数"
      ],
      "hypothetical_question": "DolphinDB中有哪些常用的字符串操作函数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/data_mani/sort_null.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/data_mani/sort_null.md",
      "start_line": 1,
      "end_line": 66,
      "summary": "DolphinDB中空值的排序规则及其在SQL语句中的显式控制方法。",
      "keywords": [
        "空值排序",
        "NULLS FIRST",
        "NULLS LAST",
        "升序降序",
        "负无穷"
      ],
      "hypothetical_question": "在DolphinDB中如何控制空值在排序中的位置？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/data_mani/string_obj.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/data_mani/string_obj.md",
      "start_line": 1,
      "end_line": 11,
      "summary": "DolphinDB中的字符串使用UTF-8编码，并提供了与正则表达式相关的函数。",
      "keywords": [
        "DolphinDB",
        "字符串",
        "UTF-8",
        "正则表达式",
        "字符串函数"
      ],
      "hypothetical_question": "DolphinDB中字符串使用什么编码方式，并提供了哪些与正则表达式相关的函数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/data_mani/temp_type_conv.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/data_mani/temp_type_conv.md",
      "start_line": 1,
      "end_line": 39,
      "summary": "DolphinDB支持九种时序数据类型，并提供了类型转换函数用于不同时序类型之间的转换。",
      "keywords": [
        "DolphinDB",
        "时序数据类型",
        "类型转换"
      ],
      "hypothetical_question": "DolphinDB支持哪些时序数据类型以及如何进行类型转换？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/data_mani/temporal_obj.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/data_mani/temporal_obj.md",
      "start_line": 1,
      "end_line": 5,
      "summary": "介绍时间序列对象及其版权信息。",
      "keywords": [
        "时间序列对象",
        "DolphinDB",
        "版权"
      ],
      "hypothetical_question": "DolphinDB中时间序列对象的版权信息是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/data_mani/search_in_string.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/data_mani/search_in_string.md",
      "start_line": 1,
      "end_line": 54,
      "summary": "DolphinDB提供了三种搜索字符串的方法：like/ilike函数、strpos函数和regexFind函数，分别支持通配符匹配、子字符串查找和正则表达式匹配。",
      "keywords": [
        "DolphinDB",
        "字符串搜索",
        "正则表达式",
        "like函数",
        "strpos函数"
      ],
      "hypothetical_question": "DolphinDB中有哪些方法可以用于搜索字符串？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/data_types_forms/BigArray.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/data_types_forms/BigArray.md",
      "start_line": 1,
      "end_line": 86,
      "summary": "大数组（bigarray）是为大数据分析设计的，由多个小块内存组成，有助于缓解内存碎片问题，但可能在某些操作中带来轻微性能损失。",
      "keywords": [
        "大数组",
        "bigarray",
        "内存碎片",
        "性能",
        "大数据分析"
      ],
      "hypothetical_question": "DolphinDB中的大数组（bigarray）有什么特点和用途？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/data_mani/temp_obj_mani.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/data_mani/temp_obj_mani.md",
      "start_line": 1,
      "end_line": 270,
      "summary": "介绍了DolphinDB中时序对象的基本操作，包括获取时间变量的部分信息、调整时间变量值、合并日期与时间以及与DateOffset相关的函数。",
      "keywords": [
        "DolphinDB",
        "时序对象",
        "时间变量",
        "DateOffset",
        "时间操作"
      ],
      "hypothetical_question": "如何在DolphinDB中操作和调整时序对象？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/data_types_forms/Matrix.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/data_types_forms/Matrix.md",
      "start_line": 1,
      "end_line": 1140,
      "summary": "DolphinDB中矩阵的创建、操作和函数使用指南。",
      "keywords": [
        "矩阵",
        "DolphinDB",
        "创建矩阵",
        "矩阵操作",
        "矩阵函数"
      ],
      "hypothetical_question": "如何在DolphinDB中创建和操作矩阵？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/data_mani/tzone_conv.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/data_mani/tzone_conv.md",
      "start_line": 1,
      "end_line": 48,
      "summary": "DolphinDB中的时间序列对象不包含时区信息，但提供了localtime、gmtime和convertTZ函数来实现时区转换，包括自动处理夏令时。",
      "keywords": [
        "时区转换",
        "localtime",
        "gmtime",
        "convertTZ",
        "夏令时"
      ],
      "hypothetical_question": "DolphinDB中如何实现不同时区之间的时间转换？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/data_types_forms/Pair.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/data_types_forms/Pair.md",
      "start_line": 1,
      "end_line": 40,
      "summary": "介绍了如何访问和修改DolphinDB中的数据对（Pair）类型数据。",
      "keywords": [
        "数据对",
        "访问",
        "修改",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中访问和修改数据对（Pair）类型的数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/data_types_forms/Dictionary.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/data_types_forms/Dictionary.md",
      "start_line": 1,
      "end_line": 370,
      "summary": "DolphinDB中的字典是一种容器类型，包含唯一的键值对列表，分为无序字典和有序字典，支持创建、访问、修改、检索以及转换为表等操作。",
      "keywords": [
        "字典",
        "键值对",
        "有序字典",
        "无序字典",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中创建和操作字典？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/data_types_forms/Scalar.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/data_types_forms/Scalar.md",
      "start_line": 1,
      "end_line": 53,
      "summary": "本文介绍了DolphinDB中标量的定义、示例及其计算方法。",
      "keywords": [
        "标量",
        "数据形式",
        "标量计算"
      ],
      "hypothetical_question": "DolphinDB中的标量是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/data_types_forms/Set.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/data_types_forms/Set.md",
      "start_line": 1,
      "end_line": 172,
      "summary": "DolphinDB中集合的创建、操作、修改及查询方法。",
      "keywords": [
        "集合",
        "操作符",
        "哈希表",
        "查询"
      ],
      "hypothetical_question": "如何在DolphinDB中创建和操作集合？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/data_types_forms/Table.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/data_types_forms/Table.md",
      "start_line": 1,
      "end_line": 297,
      "summary": "DolphinDB中的表类型、创建、访问、更新和删除操作。",
      "keywords": [
        "DolphinDB",
        "表",
        "内存表",
        "分布式表",
        "SQL"
      ],
      "hypothetical_question": "DolphinDB中有哪些类型的表以及如何创建和操作它们？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/data_types_forms/TupleANYVector.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/data_types_forms/TupleANYVector.md",
      "start_line": 1,
      "end_line": 305,
      "summary": "DolphinDB中的元组（tuple）是一种可以存储不同类型数据的向量，支持多种创建、访问、修改和计算方法，并适用于函数返回多个值和特殊场景下的浅拷贝问题。",
      "keywords": [
        "元组",
        "ANY向量",
        "数据存储",
        "浅拷贝",
        "函数返回值"
      ],
      "hypothetical_question": "如何在DolphinDB中创建和操作元组（tuple）？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/data_types_forms/arrayVector.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/data_types_forms/arrayVector.md",
      "start_line": 1,
      "end_line": 344,
      "summary": "DolphinDB中的数组向量是一种特殊的向量，用于存储可变长度的二维数组，支持多种操作和计算。",
      "keywords": [
        "数组向量",
        "DolphinDB",
        "数据存储",
        "向量计算",
        "矩阵转换"
      ],
      "hypothetical_question": "DolphinDB中的数组向量是什么，以及如何使用它进行数据存储和计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/data_types_forms/subarray.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/data_types_forms/subarray.md",
      "start_line": 1,
      "end_line": 54,
      "summary": "DolphinDB中的subarray函数用于创建原向量的视图而非复制数据，提高性能并支持只读操作。",
      "keywords": [
        "subarray",
        "向量视图",
        "性能优化"
      ],
      "hypothetical_question": "DolphinDB中如何高效地处理向量的子集而不进行数据复制？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/data_types_forms/columnarTuple.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/data_types_forms/columnarTuple.md",
      "start_line": 1,
      "end_line": 191,
      "summary": "列式元组（columnar tuple）是DolphinDB中的一种特殊元组类型，支持标量和向量元素，具有特定的创建、访问、修改和计算方法，并能存储为内存表的列。",
      "keywords": [
        "列式元组",
        "columnar tuple",
        "DolphinDB",
        "数组向量",
        "内存表"
      ],
      "hypothetical_question": "如何在DolphinDB中创建和使用列式元组？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/data_types_forms/data_type_conv.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/data_types_forms/data_type_conv.md",
      "start_line": 1,
      "end_line": 1060,
      "summary": "DolphinDB支持多种数据类型转换函数及cast方法，用于创建变量、转换字符串和其他数据类型。",
      "keywords": [
        "数据类型转换",
        "DolphinDB",
        "cast函数",
        "decimal类型",
        "符号转换"
      ],
      "hypothetical_question": "DolphinDB中如何进行数据类型转换？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/data_types_forms/vector.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/data_types_forms/vector.md",
      "start_line": 1,
      "end_line": 746,
      "summary": "DolphinDB中的向量是一种强类型容器，支持多种创建、访问、修改和操作方法，包括元素搜索、排序及与运算符的结合使用。",
      "keywords": [
        "向量",
        "DolphinDB",
        "强类型",
        "元素操作",
        "函数"
      ],
      "hypothetical_question": "如何在DolphinDB中创建和操作强类型向量？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/file_io/file_oper.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/file_io/file_oper.md",
      "start_line": 1,
      "end_line": 106,
      "summary": "DolphinDB中的文件操作包括列出文件清单、打开/关闭文件以及移动文件读写游标的方法。",
      "keywords": [
        "文件操作",
        "文件清单",
        "读写游标"
      ],
      "hypothetical_question": "如何在DolphinDB中进行文件操作，包括列出文件清单、打开/关闭文件和移动读写游标？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/file_io/process_txt.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/file_io/process_txt.md",
      "start_line": 1,
      "end_line": 87,
      "summary": "介绍DolphinDB中处理文本文件的五个基本函数及其使用方法，包括单行和多行读写的性能比较。",
      "keywords": [
        "文本文件处理",
        "readLine",
        "writeLine",
        "readLines",
        "writeLines"
      ],
      "hypothetical_question": "DolphinDB中有哪些处理文本文件的基本函数，它们的性能如何比较？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/file_io/process_bin.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/file_io/process_bin.md",
      "start_line": 1,
      "end_line": 261,
      "summary": "DolphinDB提供了一系列函数用于处理二进制文件，包括原始字节读写、多字节整型和浮点数处理，以及高层次对象的读写操作。",
      "keywords": [
        "二进制文件处理",
        "readBytes",
        "writeObject",
        "大小端模式",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中如何处理二进制文件的读写操作？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/objs/dyn_tuple.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/objs/dyn_tuple.md",
      "start_line": 1,
      "end_line": 12,
      "summary": "动态元组是包含变量的元组，可以通过变量动态生成元组内容。",
      "keywords": [
        "动态元组",
        "变量",
        "元组",
        "DolphinDB"
      ],
      "hypothetical_question": "什么是动态元组？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/file_io/tb_io.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/file_io/tb_io.md",
      "start_line": 1,
      "end_line": 60,
      "summary": "介绍了DolphinDB中表数据的保存和加载方法，包括二进制和文本格式的效率比较。",
      "keywords": [
        "saveTable",
        "loadTable",
        "saveText",
        "loadText",
        "数据存储"
      ],
      "hypothetical_question": "在DolphinDB中如何高效地保存和加载表数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/objs/col_ref.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/objs/col_ref.md",
      "start_line": 1,
      "end_line": 159,
      "summary": "该文本片段详细介绍了DolphinDB中列引用的使用方式、限制条件以及在SQL语句中的歧义消除规则。",
      "keywords": [
        "列引用",
        "SQL语句",
        "歧义消除"
      ],
      "hypothetical_question": "在DolphinDB中如何正确引用和操作表中的列？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/objs/const.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/objs/const.md",
      "start_line": 1,
      "end_line": 125,
      "summary": "DolphinDB中常量的定义、类型和使用方法，包括标量、向量、内置常量以及常量的不可变性。",
      "keywords": [
        "常量",
        "标量",
        "向量",
        "内置常量",
        "不可变性"
      ],
      "hypothetical_question": "DolphinDB中有哪些类型的常量以及如何使用它们？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/objs/objects.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/objs/objects.md",
      "start_line": 1,
      "end_line": 7,
      "summary": "对象是DolphinDB中表达式的基本构成元素之一，支持多种类型。",
      "keywords": [
        "对象",
        "DolphinDB",
        "表达式",
        "基本构成元素"
      ],
      "hypothetical_question": "DolphinDB中的对象是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/objs/named_obj.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/objs/named_obj.md",
      "start_line": 1,
      "end_line": 48,
      "summary": "介绍DolphinDB中命名对象的概念、语法及其在表创建、SQL语句和绘图中的应用示例。",
      "keywords": [
        "命名对象",
        "向量",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中什么是命名对象以及如何使用它？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/objs/func_call.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/objs/func_call.md",
      "start_line": 1,
      "end_line": 117,
      "summary": "该文档详细介绍了DolphinDB中函数的定义、调用方式以及参数传递规则，包括内置函数和用户自定义函数的使用方法。",
      "keywords": [
        "函数定义",
        "函数调用",
        "参数传递",
        "内置函数",
        "用户自定义函数"
      ],
      "hypothetical_question": "如何在DolphinDB中定义和调用函数，并处理参数传递？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/objs/meta_progr.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/objs/meta_progr.md",
      "start_line": 1,
      "end_line": 40,
      "summary": "DolphinDB中的元编程是一种高级编程范式，允许代码在运行时动态生成和修改，包括函数元编程和SQL元编程两种主要方法。",
      "keywords": [
        "元编程",
        "函数元编程",
        "SQL元编程",
        "DolphinDB",
        "动态代码生成"
      ],
      "hypothetical_question": "DolphinDB中的元编程是什么，它有哪些主要类型和应用场景？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/objs/expr.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/objs/expr.md",
      "start_line": 1,
      "end_line": 252,
      "summary": "该文档详细介绍了DolphinDB中的表达式和正则表达式的使用，包括基本语法、元字符、字符类、量词、锚点以及在不同操作系统下的正则表达式标准差异。",
      "keywords": [
        "表达式",
        "正则表达式",
        "DolphinDB",
        "POSIX",
        "C++标准库"
      ],
      "hypothetical_question": "DolphinDB中如何使用正则表达式进行文本匹配和处理？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/objs/sql_query.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/objs/sql_query.md",
      "start_line": 1,
      "end_line": 41,
      "summary": "介绍如何在DolphinDB中使用SQL语句进行数据查询和计算。",
      "keywords": [
        "SQL查询",
        "DolphinDB",
        "数据计算",
        "表操作"
      ],
      "hypothetical_question": "如何在DolphinDB中使用SQL语句进行数据查询和计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/objs/undef_var.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/objs/undef_var.md",
      "start_line": 1,
      "end_line": 41,
      "summary": "该文档介绍了如何使用`undef`函数取消变量或函数的定义，以释放内存或重新使用名称。",
      "keywords": [
        "undef",
        "变量取消",
        "内存释放",
        "函数定义"
      ],
      "hypothetical_question": "如何在DolphinDB中取消变量或函数的定义？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/objs/var.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/objs/var.md",
      "start_line": 1,
      "end_line": 91,
      "summary": "DolphinDB中变量的命名规则、使用方法及系统保留字与关键字的介绍。",
      "keywords": [
        "变量",
        "命名规则",
        "保留字",
        "关键字",
        "数据类型"
      ],
      "hypothetical_question": "DolphinDB中变量的命名规则和系统保留字有哪些？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/operators/and.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/operators/and.md",
      "start_line": 1,
      "end_line": 90,
      "summary": "介绍了DolphinDB中的逻辑与操作符`and(&&)`的语法、参数、详情及示例。",
      "keywords": [
        "逻辑与",
        "and",
        "&&",
        "操作符",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中的逻辑与操作符`and(&&)`如何使用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/operators/cast.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/operators/cast.md",
      "start_line": 1,
      "end_line": 93,
      "summary": "介绍DolphinDB中的cast操作符$，用于数据类型转换和矩阵变换。",
      "keywords": [
        "cast",
        "数据类型转换",
        "矩阵变换",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中进行数据类型转换和矩阵变换？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/operators/chainingComparison.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/operators/chainingComparison.md",
      "start_line": 1,
      "end_line": 34,
      "summary": "DolphinDB支持链式比较操作符的使用，允许在同一行中进行多个比较操作，适用于标量、数据对、向量、矩阵或集合。",
      "keywords": [
        "链式比较",
        "比较操作符",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中如何使用链式比较操作符？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/operators/at.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/operators/at.md",
      "start_line": 1,
      "end_line": 86,
      "summary": "DolphinDB中的`at`运算符用于根据索引或条件表达式从各种数据类型中提取元素，支持多种数据形式和索引类型。",
      "keywords": [
        "at运算符",
        "索引",
        "条件表达式",
        "数据提取"
      ],
      "hypothetical_question": "在DolphinDB中如何使用`at`运算符从向量或表中提取满足条件的元素？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/operators/add.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/operators/add.md",
      "start_line": 1,
      "end_line": 82,
      "summary": "DolphinDB中的加法运算符`add(+)`用于对X和Y中的对应元素逐个求和，支持标量、数据对、向量或矩阵。",
      "keywords": [
        "加法运算符",
        "add",
        "DolphinDB",
        "矩阵运算",
        "向量运算"
      ],
      "hypothetical_question": "DolphinDB中如何使用加法运算符进行矩阵或向量的元素逐个求和？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/operators/div.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/operators/div.md",
      "start_line": 1,
      "end_line": 113,
      "summary": "DolphinDB中的div运算符用于执行元素级别的除法操作，支持标量、数据对、向量和矩阵，并详细说明了整数除法的行为和示例。",
      "keywords": [
        "div",
        "整数除法",
        "运算符",
        "矩阵运算",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中div运算符的功能和使用方法是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/operators/eachAt.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/operators/eachAt.md",
      "start_line": 1,
      "end_line": 101,
      "summary": "介绍了DolphinDB中的eachAt操作符的语法、参数、详细用法及与at操作符的区别，并提供了多个示例。",
      "keywords": [
        "eachAt",
        "DolphinDB",
        "操作符",
        "索引"
      ],
      "hypothetical_question": "DolphinDB中的eachAt操作符如何使用，它与at操作符有什么区别？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/operators/dot.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/operators/dot.md",
      "start_line": 1,
      "end_line": 81,
      "summary": "介绍DolphinDB中dot(**)运算符的语法、参数、详情及示例，用于矩阵乘法和向量内积。",
      "keywords": [
        "dot运算符",
        "矩阵乘法",
        "向量内积",
        "DolphinDB",
        "**运算符"
      ],
      "hypothetical_question": "DolphinDB中dot(**)运算符的用法和示例是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/operators/eq.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/operators/eq.md",
      "start_line": 1,
      "end_line": 81,
      "summary": "介绍了DolphinDB中eq(==)运算符的语法、参数、详情及使用示例。",
      "keywords": [
        "eq",
        "运算符",
        "比较",
        "集合",
        "矩阵"
      ],
      "hypothetical_question": "DolphinDB中的eq(==)运算符如何使用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/operators/ge.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/operators/ge.md",
      "start_line": 1,
      "end_line": 95,
      "summary": "介绍DolphinDB中ge(>=)操作符的语法、参数、详细规则及示例，包括标量、向量、矩阵和集合的比较。",
      "keywords": [
        "ge",
        "比较操作符",
        "集合运算",
        "矩阵比较",
        "子集检查"
      ],
      "hypothetical_question": "在DolphinDB中如何使用ge(>=)操作符进行标量、向量、矩阵和集合的比较？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/operators/intersectionsetbitAnd.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/operators/intersectionsetbitAnd.md",
      "start_line": 1,
      "end_line": 34,
      "summary": "介绍了DolphinDB中交集运算符`&`的两种用法：集合运算（返回交集）和位运算（返回按位与结果）。",
      "keywords": [
        "交集运算符",
        "集合运算",
        "位运算",
        "按位与",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中的`&`运算符有哪些用途？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/operators/join.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/operators/join.md",
      "start_line": 1,
      "end_line": 110,
      "summary": "该文档详细介绍了DolphinDB中的join操作符（<-），包括其语法、参数、功能以及在不同数据类型（标量、向量、矩阵、表）上的应用示例。",
      "keywords": [
        "join",
        "DolphinDB",
        "操作符",
        "数据合并"
      ],
      "hypothetical_question": "DolphinDB中如何使用join操作符合并不同数据类型？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/operators/gt.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/operators/gt.md",
      "start_line": 1,
      "end_line": 95,
      "summary": "该文档详细介绍了DolphinDB中的gt(>)操作符的语法、参数、功能及示例，包括对非集合元素的逐个比较和集合的真子集检查。",
      "keywords": [
        "gt操作符",
        "比较操作",
        "集合运算",
        "真子集",
        "DolphinDB"
      ],
      "hypothetical_question": "在DolphinDB中，如何使用gt(>)操作符进行元素比较和集合的真子集检查？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/operators/member.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/operators/member.md",
      "start_line": 1,
      "end_line": 50,
      "summary": "介绍DolphinDB中member(.)运算符的语法、参数、功能及使用示例。",
      "keywords": [
        "member运算符",
        "对象属性",
        "DolphinDB语法",
        "链式调用",
        "表操作"
      ],
      "hypothetical_question": "DolphinDB中的member(.)运算符如何使用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/operators/mod.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/operators/mod.md",
      "start_line": 1,
      "end_line": 69,
      "summary": "DolphinDB中的mod(%)操作符用于计算两个数相除的余数，支持标量、向量和矩阵，并详细说明了不同情况下的结果规则。",
      "keywords": [
        "mod",
        "取模",
        "余数",
        "DolphinDB",
        "操作符"
      ],
      "hypothetical_question": "DolphinDB中如何使用mod操作符计算余数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/operators/le.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/operators/le.md",
      "start_line": 1,
      "end_line": 81,
      "summary": "该文档详细介绍了DolphinDB中的小于等于运算符(<=)的语法、参数、使用详情及示例，包括对非集合和集合类型的操作。",
      "keywords": [
        "小于等于运算符",
        "集合运算",
        "子集检查"
      ],
      "hypothetical_question": "在DolphinDB中如何使用小于等于运算符(<=)进行元素比较和子集检查？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/operators/lt.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/operators/lt.md",
      "start_line": 1,
      "end_line": 95,
      "summary": "该文档详细介绍了DolphinDB中的小于运算符（<）的语法、参数、功能及示例，包括对非集合元素的逐个比较和对集合的真子集检查。",
      "keywords": [
        "小于运算符",
        "真子集",
        "DolphinDB"
      ],
      "hypothetical_question": "在DolphinDB中如何使用小于运算符（<）进行元素比较和集合的真子集检查？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/operators/lshift.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/operators/lshift.md",
      "start_line": 1,
      "end_line": 37,
      "summary": "lshift(<<) 是一个用于将数值按二进制展开后左移指定位数的操作符，右侧以0填充。",
      "keywords": [
        "lshift",
        "左移操作符",
        "二进制操作",
        "位运算",
        "DolphinDB"
      ],
      "hypothetical_question": "在DolphinDB中，如何使用lshift操作符进行二进制左移运算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/operators/mul.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/operators/mul.md",
      "start_line": 1,
      "end_line": 72,
      "summary": "DolphinDB中的mul(*)运算符用于计算X和Y逐个元素相乘的积，支持标量、数据对、向量或矩阵。",
      "keywords": [
        "mul",
        "乘法运算符",
        "DolphinDB",
        "向量运算",
        "矩阵运算"
      ],
      "hypothetical_question": "DolphinDB中如何使用mul(*)运算符进行向量或矩阵的逐个元素乘法运算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/operators/oper_list.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/operators/oper_list.md",
      "start_line": 1,
      "end_line": 7,
      "summary": "介绍DolphinDB编程语言中运算符的定义和用法。",
      "keywords": [
        "DolphinDB",
        "运算符",
        "编程语言"
      ],
      "hypothetical_question": "DolphinDB编程语言中的运算符是如何定义和使用的？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/operators/neg.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/operators/neg.md",
      "start_line": 1,
      "end_line": 45,
      "summary": "介绍DolphinDB中的neg(-)操作符，用于返回输入值的负数。",
      "keywords": [
        "neg",
        "负数",
        "操作符",
        "DolphinDB",
        "语法"
      ],
      "hypothetical_question": "DolphinDB中如何计算一个值的负数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/operators/ne.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/operators/ne.md",
      "start_line": 1,
      "end_line": 103,
      "summary": "该文档详细介绍了DolphinDB中的不等于运算符（ne、!=或<>）的语法、参数、使用详情及示例。",
      "keywords": [
        "不等于运算符",
        "ne",
        "!=",
        "<>",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中不等于运算符（ne、!=或<>）的使用方法和示例是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/operators/not.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/operators/not.md",
      "start_line": 1,
      "end_line": 72,
      "summary": "DolphinDB中的not(!)运算符用于逻辑非运算，支持标量、数据对、向量或矩阵，并可与SQL谓词搭配使用。",
      "keywords": [
        "not运算符",
        "逻辑非",
        "DolphinDB",
        "SQL谓词",
        "布尔运算"
      ],
      "hypothetical_question": "DolphinDB中的not(!)运算符如何使用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/operators/operators.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/operators/operators.md",
      "start_line": 1,
      "end_line": 78,
      "summary": "DolphinDB支持多种运算符，包括一元、二元和三元运算符，涵盖算术、布尔、关系等类型，并提供了运算符的详细列表和使用示例。",
      "keywords": [
        "运算符",
        "DolphinDB",
        "一元运算符",
        "二元运算符",
        "三元运算符"
      ],
      "hypothetical_question": "DolphinDB支持哪些类型的运算符及其使用示例？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/operators/pair.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/operators/pair.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "介绍了DolphinDB中的pair操作符`:`, 用于生成数据对。",
      "keywords": [
        "pair",
        "操作符",
        "数据对",
        "语法"
      ],
      "hypothetical_question": "DolphinDB中如何使用冒号操作符生成数据对？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/operators/or.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/operators/or.md",
      "start_line": 1,
      "end_line": 88,
      "summary": "该文档详细介绍了DolphinDB中的逻辑或运算符(||)的语法、参数、使用详情及多个示例。",
      "keywords": [
        "逻辑或",
        "运算符",
        "DolphinDB",
        "NULL处理",
        "矩阵运算"
      ],
      "hypothetical_question": "在DolphinDB中如何使用逻辑或运算符(||)处理标量、向量或矩阵？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/operators/precedence.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/operators/precedence.md",
      "start_line": 1,
      "end_line": 117,
      "summary": "DolphinDB的运算符优先级规则及其常见示例。",
      "keywords": [
        "运算符优先级",
        "DolphinDB",
        "一元运算符",
        "二元运算符",
        "用户定义函数"
      ],
      "hypothetical_question": "DolphinDB中的运算符优先级是如何规定的？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/operators/ratio.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/operators/ratio.md",
      "start_line": 1,
      "end_line": 89,
      "summary": "ratio()函数用于计算X与Y中每个元素的比例，并总是返回浮点数。",
      "keywords": [
        "ratio",
        "除法",
        "浮点数",
        "运算符"
      ],
      "hypothetical_question": "DolphinDB中如何计算两个向量或矩阵中每个元素的比例？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/operators/sub.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/operators/sub.md",
      "start_line": 1,
      "end_line": 87,
      "summary": "介绍DolphinDB中的减法运算符sub(-)的语法、参数、功能及示例。",
      "keywords": [
        "减法运算符",
        "sub",
        "DolphinDB",
        "集合运算",
        "矩阵运算"
      ],
      "hypothetical_question": "DolphinDB中的减法运算符sub(-)如何使用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/operators/rshift.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/operators/rshift.md",
      "start_line": 1,
      "end_line": 33,
      "summary": "rshift(>>) 是一个按二进制展开后将数据整体右移指定位数的操作符。",
      "keywords": [
        "rshift",
        "二进制右移",
        "操作符",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB 中的 rshift 操作符有什么作用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/operators/seq.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/operators/seq.md",
      "start_line": 1,
      "end_line": 45,
      "summary": "介绍DolphinDB中seq(..)操作符的语法、参数、功能及示例，用于生成从a到b的序列。",
      "keywords": [
        "seq",
        "序列生成",
        "DolphinDB",
        "操作符",
        "时间序列"
      ],
      "hypothetical_question": "在DolphinDB中如何使用seq(..)操作符生成一个整数或时间序列？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/py_parser/compatibility.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/py_parser/compatibility.md",
      "start_line": 1,
      "end_line": 8,
      "summary": "Python Parser解析DolphinDB内置函数时遵循Python语法规则，pandas库函数兼容性在各自页面说明。",
      "keywords": [
        "Python Parser",
        "DolphinDB",
        "pandas",
        "兼容性",
        "内置函数"
      ],
      "hypothetical_question": "Python Parser解析DolphinDB内置函数时遵循什么规则？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/operators/symmetricDifferencesetbitXor.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/operators/symmetricDifferencesetbitXor.md",
      "start_line": 1,
      "end_line": 40,
      "summary": "介绍DolphinDB中对称差集（symmetricDifference）和位异或（bitXor）操作的语法、参数、详情及示例。",
      "keywords": [
        "symmetricDifference",
        "bitXor",
        "集合运算",
        "位运算",
        "异或"
      ],
      "hypothetical_question": "DolphinDB中如何计算两个集合的对称差集或进行位异或运算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/py_parser/how-to-use.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/py_parser/how-to-use.md",
      "start_line": 1,
      "end_line": 54,
      "summary": "介绍如何在 DolphinDB 中配置和使用 Python Parser Session，包括通过 GUI 和 VSCode 连接的步骤。",
      "keywords": [
        "Python Parser",
        "DolphinDB",
        "Session",
        "GUI",
        "VSCode"
      ],
      "hypothetical_question": "如何在 DolphinDB 中配置 Python Parser Session？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/operators/ternary_operator.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/operators/ternary_operator.md",
      "start_line": 1,
      "end_line": 150,
      "summary": "DolphinDB的三元运算符(?:)用于根据布尔条件选择执行两个表达式中的一个，支持标量和向量条件，并可在SQL和非SQL环境中使用。",
      "keywords": [
        "三元运算符",
        "条件运算符",
        "布尔表达式",
        "SQL",
        "向量条件"
      ],
      "hypothetical_question": "DolphinDB中如何使用三元运算符根据条件选择执行不同的表达式？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/operators/unionsetbitOr.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/operators/unionsetbitOr.md",
      "start_line": 1,
      "end_line": 37,
      "summary": "介绍了DolphinDB中集合运算（union）和位运算（bitOr）的语法、参数、详情及示例。",
      "keywords": [
        "集合运算",
        "位运算",
        "union",
        "bitOr",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中进行集合的并集运算和按位或运算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/py_parser/datastructure/data_structure.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/py_parser/datastructure/data_structure.md",
      "start_line": 1,
      "end_line": 40,
      "summary": "介绍了Python Parser中支持的基础数据结构及其与DolphinDB数据结构的对比和转换方法。",
      "keywords": [
        "Python Parser",
        "数据结构",
        "DolphinDB",
        "转换方法",
        "内置函数"
      ],
      "hypothetical_question": "Python Parser支持哪些基础数据结构以及如何与DolphinDB数据结构进行转换？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/py_parser/py_par_intro.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/py_parser/py_par_intro.md",
      "start_line": 1,
      "end_line": 47,
      "summary": "Python Parser是DolphinDB实现的Python执行环境，不受GIL限制，支持多核和分布式计算，并能直接使用DolphinDB的内置函数和存储引擎。",
      "keywords": [
        "Python Parser",
        "DolphinDB",
        "GIL",
        "分布式计算",
        "SQL"
      ],
      "hypothetical_question": "Python Parser与传统的Python环境有什么不同？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/py_parser/datatype.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/py_parser/datatype.md",
      "start_line": 1,
      "end_line": 135,
      "summary": "本文档详细介绍了Python Parser支持的数据类型及其与DolphinDB和Python数据类型的对比，以及如何查看数据类型和使用保留字。",
      "keywords": [
        "Python Parser",
        "数据类型",
        "DolphinDB",
        "保留字",
        "type函数"
      ],
      "hypothetical_question": "Python Parser支持哪些数据类型，它们如何与DolphinDB和Python的数据类型对应？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/py_parser/datastructure/list.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/py_parser/datastructure/list.md",
      "start_line": 1,
      "end_line": 100,
      "summary": "介绍了在DolphinDB的Python Parser中如何创建、访问、更新、删除列表以及列表的属性和操作符。",
      "keywords": [
        "列表",
        "Python Parser",
        "DolphinDB",
        "数据结构",
        "操作符"
      ],
      "hypothetical_question": "如何在DolphinDB的Python Parser中使用列表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/py_parser/datastructure/dict.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/py_parser/datastructure/dict.md",
      "start_line": 1,
      "end_line": 72,
      "summary": "该文本片段介绍了在DolphinDB中如何使用Python字典，包括创建、访问、更新、删除字典以及特有的`toddb`方法。",
      "keywords": [
        "字典",
        "Python",
        "DolphinDB",
        "toddb",
        "更新"
      ],
      "hypothetical_question": "如何在DolphinDB中使用Python字典并进行操作？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/py_parser/datastructure/set.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/py_parser/datastructure/set.md",
      "start_line": 1,
      "end_line": 90,
      "summary": "该文档详细介绍了Python Parser中集合(set)的创建、访问、更新方法以及特有的toddb方法。",
      "keywords": [
        "set",
        "Python Parser",
        "toddb",
        "集合操作",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在Python Parser中创建和操作集合(set)？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/py_parser/datastructure/tuple.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/py_parser/datastructure/tuple.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "该文本片段介绍了Python Parser中元组的可用属性、方法（特别是toddb方法）以及支持的操作符。",
      "keywords": [
        "元组",
        "Python Parser",
        "toddb方法",
        "操作符"
      ],
      "hypothetical_question": "Python Parser中的元组有哪些可用的方法和操作符？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/py_parser/pandas/dataframe.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/py_parser/pandas/dataframe.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "介绍如何使用at和iat方法修改DataFrame中的单个元素值，以及使用drop方法删除数据。",
      "keywords": [
        "DataFrame",
        "at方法",
        "iat方法",
        "drop方法",
        "修改元素"
      ],
      "hypothetical_question": "如何在Pandas DataFrame中修改单个元素的值或删除数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/py_parser/pandas/ddb_pandas.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/py_parser/pandas/ddb_pandas.md",
      "start_line": 1,
      "end_line": 31,
      "summary": "DolphinDB pandas是DolphinDB Python Parser基于pandas库开发的版本，支持惰性和非惰性两种计算模式，并与DolphinDB server无缝集成。",
      "keywords": [
        "DolphinDB pandas",
        "惰性模式",
        "非惰性模式",
        "Series",
        "DataFrame"
      ],
      "hypothetical_question": "DolphinDB pandas与传统Python pandas有哪些主要区别？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/py_parser/pandas/series.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/py_parser/pandas/series.md",
      "start_line": 1,
      "end_line": 362,
      "summary": "DolphinDB pandas 中的 Series 数据结构及其构造、属性、转换、索引、运算、函数应用等功能的详细介绍。",
      "keywords": [
        "Series",
        "DolphinDB",
        "pandas",
        "数据结构",
        "索引"
      ],
      "hypothetical_question": "DolphinDB pandas 中的 Series 数据结构有哪些主要功能和限制？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/py_parser/pandas/window.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/py_parser/pandas/window.md",
      "start_line": 1,
      "end_line": 20,
      "summary": "DolphinDB pandas 的 Window 类提供了处理时间序列和滑动窗口操作的功能，包括多种滚动窗口函数。",
      "keywords": [
        "Window",
        "滚动窗口函数",
        "DolphinDB pandas",
        "时间序列"
      ],
      "hypothetical_question": "DolphinDB pandas 的 Window 类支持哪些滚动窗口函数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/py_parser/pandas/groupby.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/py_parser/pandas/groupby.md",
      "start_line": 1,
      "end_line": 33,
      "summary": "DolphinDB pandas GroupBy 类用于数据分组和聚合操作，支持多种函数但存在部分兼容性限制。",
      "keywords": [
        "GroupBy",
        "聚合操作",
        "数据分组",
        "兼容性",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB pandas GroupBy 类支持哪些函数及其兼容性如何？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/py_parser/programming/class.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/py_parser/programming/class.md",
      "start_line": 1,
      "end_line": 58,
      "summary": "Python Parser中的类机制支持函数封装和运算符重载，但不支持继承和在函数中定义类。",
      "keywords": [
        "Python Parser",
        "类",
        "函数封装",
        "运算符重载"
      ],
      "hypothetical_question": "Python Parser中的类机制支持哪些功能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/py_parser/programming/assignment.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/py_parser/programming/assignment.md",
      "start_line": 1,
      "end_line": 22,
      "summary": "介绍如何通过变量赋值修改单层索引元素值以及使用undef函数释放变量。",
      "keywords": [
        "变量赋值",
        "单层索引",
        "undef函数",
        "释放变量"
      ],
      "hypothetical_question": "如何在DolphinDB中修改单层索引元素值并释放变量？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/py_parser/programming/comprehension.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/py_parser/programming/comprehension.md",
      "start_line": 1,
      "end_line": 25,
      "summary": "Python Parser 目前仅支持列表推导式，包括基本语法和带条件的变体。",
      "keywords": [
        "Python Parser",
        "列表推导式",
        "语法",
        "条件"
      ],
      "hypothetical_question": "Python Parser 支持哪些类型的推导式？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/Select.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/Select.md",
      "start_line": 1,
      "end_line": 282,
      "summary": "DolphinDB中select语句的用法和示例，包括读取列数据、生成新列、处理NULL值以及使用字段序列选择多列。",
      "keywords": [
        "select",
        "SQL",
        "DolphinDB",
        "字段序列",
        "NULL值"
      ],
      "hypothetical_question": "在DolphinDB中如何使用select语句读取表中的数据并生成新列？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/py_parser/programming/extension.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/py_parser/programming/extension.md",
      "start_line": 1,
      "end_line": 59,
      "summary": "介绍DolphinDB中SQL脚本语法、元编程、timer语句和字符串创建方式的扩展特性。",
      "keywords": [
        "DolphinDB",
        "元编程",
        "timer语句",
        "SQL语法",
        "字符串创建"
      ],
      "hypothetical_question": "DolphinDB中如何实现元编程和使用timer语句？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/py_parser/programming/statement.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/py_parser/programming/statement.md",
      "start_line": 1,
      "end_line": 60,
      "summary": "介绍了DolphinDB和Python Parser中模块的使用方法，包括模块的创建、导入、路径设置和清除。",
      "keywords": [
        "模块",
        "Python Parser",
        "DolphinDB",
        "import",
        "sys.path"
      ],
      "hypothetical_question": "如何在DolphinDB和Python Parser中使用模块？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/alter.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/alter.md",
      "start_line": 1,
      "end_line": 89,
      "summary": "该文档详细介绍了DolphinDB中alter语句的语法、参数和用法，用于添加、删除或重命名表中的列。",
      "keywords": [
        "alter",
        "DolphinDB",
        "SQL",
        "表修改",
        "列操作"
      ],
      "hypothetical_question": "如何在DolphinDB中使用alter语句添加、删除或重命名表中的列？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/py_parser/programming/syntax.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/py_parser/programming/syntax.md",
      "start_line": 1,
      "end_line": 15,
      "summary": "DolphinDB Python Parser 的语法与标准 Python 相似，但在某些方面存在差异，如推导式支持不完善、不支持生成器表达式等。",
      "keywords": [
        "DolphinDB",
        "Python Parser",
        "语法差异",
        "列表推导式",
        "dolphindb库"
      ],
      "hypothetical_question": "DolphinDB Python Parser 与标准 Python 在语法上有哪些主要差异？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/py_parser/programming/function.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/py_parser/programming/function.md",
      "start_line": 1,
      "end_line": 164,
      "summary": "介绍了在Python Parser中使用DolphinDB函数的方法，包括内置函数、命名函数、聚合函数、lambda函数、高阶函数、嵌套函数以及函数调用的注意事项和限制。",
      "keywords": [
        "DolphinDB函数",
        "Python Parser",
        "内置函数",
        "命名函数",
        "lambda函数"
      ],
      "hypothetical_question": "如何在Python Parser中使用DolphinDB的内置函数和自定义函数？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/any.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/any.md",
      "start_line": 1,
      "end_line": 92,
      "summary": "介绍了DolphinDB中SQL的any和all关键字的用法、区别及示例。",
      "keywords": [
        "any",
        "all",
        "SQL",
        "DolphinDB",
        "比较运算符"
      ],
      "hypothetical_question": "DolphinDB中SQL的any和all关键字有什么区别及如何使用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/analyticFunction.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/analyticFunction.md",
      "start_line": 1,
      "end_line": 405,
      "summary": "DolphinDB分析函数（窗口函数）的详细指南，包括OVER子句、PARTITION BY、ORDER BY、窗口帧定义及多种分析函数的应用示例。",
      "keywords": [
        "分析函数",
        "OVER子句",
        "PARTITION BY",
        "ORDER BY",
        "窗口帧"
      ],
      "hypothetical_question": "如何在DolphinDB中使用分析函数（窗口函数）进行数据分析和处理？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/between.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/between.md",
      "start_line": 1,
      "end_line": 38,
      "summary": "介绍DolphinDB中between...and操作符的语法和用法，用于匹配指定范围内的值，包括起始值和终止值。",
      "keywords": [
        "between",
        "SQL",
        "DolphinDB",
        "范围查询",
        "语法"
      ],
      "hypothetical_question": "在DolphinDB中如何使用between...and操作符进行范围查询？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/case.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/case.md",
      "start_line": 1,
      "end_line": 105,
      "summary": "DolphinDB SQL中的case语句用于条件判断，支持分布式查询，语法包含when-then-else结构，并提供了多个使用示例。",
      "keywords": [
        "case语句",
        "SQL条件判断",
        "分布式查询",
        "when-then-else"
      ],
      "hypothetical_question": "DolphinDB SQL中如何使用case语句进行条件判断？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/asofjoin.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/asofjoin.md",
      "start_line": 1,
      "end_line": 210,
      "summary": "DolphinDB的asof join（AJ）函数用于在时间或其他有序字段上执行连接操作，获取右表中与左表时间点匹配或最近的前一条记录。",
      "keywords": [
        "asof join",
        "时间连接",
        "DolphinDB",
        "SQL函数",
        "数据匹配"
      ],
      "hypothetical_question": "如何在DolphinDB中使用asof join函数来获取右表中与左表时间点匹配或最近的前一条记录？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/cgroupby.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/cgroupby.md",
      "start_line": 1,
      "end_line": 75,
      "summary": "DolphinDB中的cgroup by子句用于进行累计分组计算，必须与order by子句一起使用，并支持特定的聚合函数。",
      "keywords": [
        "cgroup by",
        "累计分组计算",
        "聚合函数",
        "order by",
        "DolphinDB"
      ],
      "hypothetical_question": "在DolphinDB中如何使用cgroup by进行累计分组计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/coalesce.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/coalesce.md",
      "start_line": 1,
      "end_line": 59,
      "summary": "DolphinDB的coalesce函数用于填充数据中的空值，支持多参数检查并返回第一个非空值。",
      "keywords": [
        "coalesce",
        "空值填充",
        "SQL函数",
        "分布式查询"
      ],
      "hypothetical_question": "如何在DolphinDB中使用coalesce函数来填充数据中的空值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/delete.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/delete.md",
      "start_line": 1,
      "end_line": 187,
      "summary": "delete语句用于删除DolphinDB表中的记录，支持内存表和DFS表，并介绍了其语法、使用限制及示例。",
      "keywords": [
        "delete语句",
        "DolphinDB",
        "SQL",
        "内存表",
        "DFS表"
      ],
      "hypothetical_question": "如何在DolphinDB中使用delete语句删除表中的记录？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/create.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/create.md",
      "start_line": 1,
      "end_line": 455,
      "summary": "DolphinDB中create语句的用法，包括创建分布式数据库、数据表、临时内存表、点位管理表及其相关参数和示例。",
      "keywords": [
        "create",
        "分布式数据库",
        "数据表",
        "临时内存表",
        "点位管理表"
      ],
      "hypothetical_question": "如何在DolphinDB中使用create语句创建分布式数据库和数据表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/crossjoin.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/crossjoin.md",
      "start_line": 1,
      "end_line": 89,
      "summary": "DolphinDB中的cross join函数用于返回两张表的笛卡尔积结果集，兼容SQL语法，并提供了具体的使用示例。",
      "keywords": [
        "cross join",
        "笛卡尔积",
        "DolphinDB",
        "SQL语法",
        "表连接"
      ],
      "hypothetical_question": "在DolphinDB中如何使用cross join函数获取两张表的笛卡尔积？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/drop.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/drop.md",
      "start_line": 1,
      "end_line": 92,
      "summary": "介绍如何使用drop语句删除数据库、分布式表、维度表、catalog中的数据库和数据表以及内存表。",
      "keywords": [
        "drop",
        "数据库",
        "分布式表",
        "内存表",
        "catalog"
      ],
      "hypothetical_question": "如何在DolphinDB中使用drop语句删除数据库或数据表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/distinct.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/distinct.md",
      "start_line": 1,
      "end_line": 46,
      "summary": "DolphinDB中的distinct关键字用于在select/exec语句中去除重复值并返回唯一值，支持分布式查询，但不支持与group by等子句配合使用。",
      "keywords": [
        "distinct",
        "DolphinDB",
        "SQL",
        "唯一值",
        "分布式查询"
      ],
      "hypothetical_question": "在DolphinDB中如何使用distinct关键字去除重复值并返回唯一值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/contextBy.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/contextBy.md",
      "start_line": 1,
      "end_line": 285,
      "summary": "DolphinDB的context by子句是对标准SQL的拓展，用于简化时间序列数据的操作，支持分组内顺序敏感的聚合和向量函数，与group by不同，它返回与组内元素数量相同的向量，并可与多种函数和子句配合使用。",
      "keywords": [
        "context by",
        "时间序列",
        "DolphinDB",
        "SQL拓展",
        "分组操作"
      ],
      "hypothetical_question": "DolphinDB中的context by子句与标准SQL的group by有何不同？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/equijoin.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/equijoin.md",
      "start_line": 1,
      "end_line": 324,
      "summary": "介绍了DolphinDB中的等值连接（equi join）和有序等值连接（sorted equi join）的语法、参数、使用详情及多个示例。",
      "keywords": [
        "等值连接",
        "ej",
        "sej",
        "DolphinDB",
        "SQL"
      ],
      "hypothetical_question": "如何在DolphinDB中使用等值连接（equi join）进行表连接？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/exe_order.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/exe_order.md",
      "start_line": 1,
      "end_line": 238,
      "summary": "DolphinDB中SQL语句各部分的执行顺序及其特殊情况下（如使用context by子句时）的执行顺序变化。",
      "keywords": [
        "DolphinDB",
        "SQL执行顺序",
        "context by",
        "csort",
        "limit"
      ],
      "hypothetical_question": "DolphinDB中SQL语句各部分的执行顺序是怎样的，特别是当使用context by子句时？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/exec.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/exec.md",
      "start_line": 1,
      "end_line": 113,
      "summary": "exec子句用于生成标量或向量，而select子句总是生成表，当exec选择多列时结果与select一致。",
      "keywords": [
        "exec",
        "select",
        "标量",
        "向量",
        "DolphinDB"
      ],
      "hypothetical_question": "在DolphinDB中，exec和select子句有什么区别？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/hint.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/hint.md",
      "start_line": 1,
      "end_line": 23,
      "summary": "DolphinDB支持的HINT关键字及其使用说明和示例。",
      "keywords": [
        "HINT关键字",
        "SQL优化",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中有哪些HINT关键字及其用途？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/exists.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/exists.md",
      "start_line": 1,
      "end_line": 94,
      "summary": "介绍DolphinDB中exists子句的语法、使用详情及示例，说明其如何与where子句搭配使用通过子查询过滤外查询结果。",
      "keywords": [
        "exists",
        "子查询",
        "where子句",
        "DolphinDB",
        "SQL"
      ],
      "hypothetical_question": "DolphinDB中exists子句如何与where子句搭配使用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/getTraces.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/getTraces.md",
      "start_line": 1,
      "end_line": 34,
      "summary": "介绍DolphinDB中的getTraces函数，用于获取SQL跟踪信息，包括时间、脚本、traceId和sessionId等列。",
      "keywords": [
        "getTraces",
        "SQL Trace",
        "跟踪信息",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中获取SQL跟踪信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/fulljoin.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/fulljoin.md",
      "start_line": 1,
      "end_line": 84,
      "summary": "DolphinDB中full join/full outer join的语法、参数、SQL兼容性、详情及使用示例。",
      "keywords": [
        "full join",
        "DolphinDB",
        "SQL语法",
        "连接操作",
        "示例"
      ],
      "hypothetical_question": "如何在DolphinDB中使用full join进行表连接？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/having.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/having.md",
      "start_line": 1,
      "end_line": 100,
      "summary": "DolphinDB中having子句的用法及示例，用于在group by或context by后过滤结果。",
      "keywords": [
        "having",
        "group by",
        "context by",
        "聚合函数",
        "过滤"
      ],
      "hypothetical_question": "DolphinDB中having子句的用法是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/groupby.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/groupby.md",
      "start_line": 1,
      "end_line": 201,
      "summary": "该文档详细介绍了DolphinDB中SQL的group by子句的使用方法，包括基本语法、与top子句和order by的配合使用，以及如何处理非标量函数输出。",
      "keywords": [
        "group by",
        "SQL",
        "DolphinDB",
        "聚合函数",
        "数据分析"
      ],
      "hypothetical_question": "如何在DolphinDB中使用group by子句进行数据分组和聚合操作？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/in.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/in.md",
      "start_line": 1,
      "end_line": 52,
      "summary": "DolphinDB SQL 中 in 谓词的用法，用于简化 where 子句中的多个 or 条件。",
      "keywords": [
        "in",
        "SQL",
        "where",
        "DolphinDB",
        "谓词"
      ],
      "hypothetical_question": "在 DolphinDB SQL 中如何使用 in 谓词来简化 where 子句中的多个 or 条件？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/innerjoin.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/innerjoin.md",
      "start_line": 1,
      "end_line": 147,
      "summary": "该文档详细介绍了DolphinDB中的inner join（内连接）语法、参数、注意事项及多个示例。",
      "keywords": [
        "inner join",
        "等值连接",
        "DolphinDB",
        "SQL",
        "分布式表"
      ],
      "hypothetical_question": "如何在DolphinDB中使用inner join进行等值连接？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/hint_explain.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/hint_explain.md",
      "start_line": 1,
      "end_line": 695,
      "summary": "DolphinDB的[HINT_EXPLAIN]功能用于显示SQL语句的执行过程，帮助用户分析查询性能和优化SQL语句。",
      "keywords": [
        "HINT_EXPLAIN",
        "SQL执行计划",
        "查询优化",
        "分布式查询",
        "分区表"
      ],
      "hypothetical_question": "如何使用DolphinDB的[HINT_EXPLAIN]功能来分析SQL查询的执行过程？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/insertInto.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/insertInto.md",
      "start_line": 1,
      "end_line": 116,
      "summary": "介绍如何使用`insert into`语句通过`VALUES`子句向表中插入数据，并提供多种插入方式的示例。",
      "keywords": [
        "insert into",
        "VALUES",
        "SQL",
        "数据插入",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用`insert into`语句向表中插入数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/interval.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/interval.md",
      "start_line": 1,
      "end_line": 179,
      "summary": "DolphinDB的interval函数用于在SQL的group by子句中构建连续窗口进行数据计算，支持多种填充方式和参数配置。",
      "keywords": [
        "interval",
        "SQL",
        "group by",
        "窗口计算",
        "填充方式"
      ],
      "hypothetical_question": "如何在DolphinDB中使用interval函数进行时间窗口计算并填充缺失值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/isnull.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/isnull.md",
      "start_line": 1,
      "end_line": 36,
      "summary": "介绍了DolphinDB中is null和is not null谓词的用法及其在分布式查询中的应用，并提供了相应的SQL示例。",
      "keywords": [
        "is null",
        "is not null",
        "DolphinDB",
        "SQL",
        "分布式查询"
      ],
      "hypothetical_question": "在DolphinDB中如何使用is null和is not null谓词来检测空值和非空值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/join.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/join.md",
      "start_line": 1,
      "end_line": 59,
      "summary": "介绍DolphinDB中JOIN操作的语法、参数、使用详情及示例。",
      "keywords": [
        "JOIN",
        "SQL",
        "DolphinDB",
        "CROSS JOIN",
        "INNER JOIN"
      ],
      "hypothetical_question": "在DolphinDB中如何使用JOIN操作连接两个表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/leftjoin.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/leftjoin.md",
      "start_line": 1,
      "end_line": 286,
      "summary": "该文档详细介绍了DolphinDB中左连接（left join/left outer join）和左半连接（left semijoin）的语法、参数、使用详情及多个示例。",
      "keywords": [
        "左连接",
        "左半连接",
        "DolphinDB",
        "SQL语法",
        "连接列"
      ],
      "hypothetical_question": "如何在DolphinDB中使用左连接和左半连接？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/like.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/like.md",
      "start_line": 1,
      "end_line": 55,
      "summary": "介绍DolphinDB中like/LIKE操作符的语法、参数、用法及示例，用于模式匹配查询。",
      "keywords": [
        "like",
        "模式匹配",
        "通配符",
        "SQL查询",
        "DolphinDB"
      ],
      "hypothetical_question": "在DolphinDB中如何使用like操作符进行模式匹配查询？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/limit.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/limit.md",
      "start_line": 1,
      "end_line": 79,
      "summary": "limit子句用于限制SQL查询返回的记录数量，可与context by子句结合使用，支持负整数以获取每组最后几条记录。",
      "keywords": [
        "limit子句",
        "SQL查询",
        "context by",
        "记录限制",
        "DolphinDB"
      ],
      "hypothetical_question": "在DolphinDB中如何使用limit子句限制查询结果的数量？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/map.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/map.md",
      "start_line": 1,
      "end_line": 99,
      "summary": "DolphinDB中的map关键字用于在每个分区内分别执行SQL语句，适用于分区内查询、分组查询性能提升及支持where子句中使用聚合函数的场景。",
      "keywords": [
        "map关键字",
        "分区计算",
        "分组查询",
        "性能优化",
        "聚合函数"
      ],
      "hypothetical_question": "在DolphinDB中如何使用map关键字优化分区内的SQL查询性能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/notin.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/notin.md",
      "start_line": 1,
      "end_line": 58,
      "summary": "DolphinDB中的notIn/NOTIN操作符用于检查值是否不在子查询或列表中，支持内存表和分布式表。",
      "keywords": [
        "notIn",
        "SQL",
        "DolphinDB",
        "查询",
        "子查询"
      ],
      "hypothetical_question": "如何在DolphinDB中使用notIn操作符查询不在指定列表或子查询中的记录？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/notbetween.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/notbetween.md",
      "start_line": 1,
      "end_line": 57,
      "summary": "介绍DolphinDB中notBetween/NOTBETWEEN操作符的语法、参数及使用示例，用于查询不在指定范围内的数据。",
      "keywords": [
        "notBetween",
        "SQL",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用notBetween查询不在指定范围内的数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/notlike.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/notlike.md",
      "start_line": 1,
      "end_line": 67,
      "summary": "NOTLIKE 是用于确定字符串是否与指定模式不匹配的操作，支持内存表和分布式表，并可与 WHERE 子句搭配使用进行数据过滤。",
      "keywords": [
        "NOTLIKE",
        "通配符",
        "字符串匹配",
        "WHERE子句"
      ],
      "hypothetical_question": "如何在 DolphinDB 中使用 NOTLIKE 操作符来过滤不匹配特定模式的数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/predicates.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/predicates.md",
      "start_line": 1,
      "end_line": 18,
      "summary": "DolphinDB自2.00.9版本起支持的SQL谓词列表。",
      "keywords": [
        "DolphinDB",
        "SQL谓词",
        "not",
        "is null",
        "between and"
      ],
      "hypothetical_question": "DolphinDB支持哪些SQL谓词？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/partition.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/partition.md",
      "start_line": 1,
      "end_line": 77,
      "summary": "DolphinDB 的 `partition` 函数用于在 where 子句中筛选分区表中的特定分区，支持多种分区方案。",
      "keywords": [
        "partition",
        "分区表",
        "where 子句",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在 DolphinDB 中使用 partition 函数筛选分区表中的特定分区？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/orderby.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/orderby.md",
      "start_line": 1,
      "end_line": 104,
      "summary": "该文档详细介绍了DolphinDB中SQL的order by子句的用法、语法规则和示例，包括升序降序排序、空值处理以及在分布式表中的限制。",
      "keywords": [
        "order by",
        "排序",
        "SQL",
        "DolphinDB",
        "空值处理"
      ],
      "hypothetical_question": "在DolphinDB中如何使用order by子句对查询结果进行排序？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/prefixjoin.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/prefixjoin.md",
      "start_line": 1,
      "end_line": 90,
      "summary": "prefix join 是一种将左表中连接列以右表连接列内容开头的记录与右表记录连接的操作。",
      "keywords": [
        "prefix join",
        "连接操作",
        "STRING类型",
        "SYMBOL类型",
        "分布式表"
      ],
      "hypothetical_question": "DolphinDB中的prefix join是什么，如何使用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/rightjoin.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/rightjoin.md",
      "start_line": 1,
      "end_line": 226,
      "summary": "该文档详细介绍了DolphinDB中RIGHT JOIN的语法、参数、使用限制及多个实际应用示例。",
      "keywords": [
        "RIGHT JOIN",
        "DolphinDB",
        "SQL语法",
        "连接操作",
        "示例"
      ],
      "hypothetical_question": "在DolphinDB中如何使用RIGHT JOIN进行表连接？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/setTraceMode.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/setTraceMode.md",
      "start_line": 1,
      "end_line": 21,
      "summary": "介绍如何使用setTraceMode命令控制DolphinDB中SQL Trace功能的开启和关闭。",
      "keywords": [
        "setTraceMode",
        "SQL Trace",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中开启和关闭SQL Trace功能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/pivotBy.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/pivotBy.md",
      "start_line": 1,
      "end_line": 360,
      "summary": "DolphinDB的`pivot by`功能是对标准SQL的扩展，用于将表中的列按照两个维度重新排列，并可配合数据转换函数使用，支持多种优化和聚合操作。",
      "keywords": [
        "pivot by",
        "DolphinDB",
        "SQL扩展",
        "数据转换",
        "聚合函数"
      ],
      "hypothetical_question": "DolphinDB中的`pivot by`功能有哪些用途和优化？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/sample.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/sample.md",
      "start_line": 1,
      "end_line": 38,
      "summary": "介绍DolphinDB中sample函数的语法、参数、使用详情及示例，用于随机抽取分区表中的分区。",
      "keywords": [
        "sample",
        "分区表",
        "随机抽取",
        "DolphinDB",
        "SQL"
      ],
      "hypothetical_question": "如何在DolphinDB中随机抽取分区表中的分区？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/sql_ddl.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/sql_ddl.md",
      "start_line": 1,
      "end_line": 7,
      "summary": "介绍DolphinDB中的数据定义语言（DDL）。",
      "keywords": [
        "DolphinDB",
        "DDL",
        "数据定义语言"
      ],
      "hypothetical_question": "DolphinDB中的数据定义语言（DDL）是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/sql_dml.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/sql_dml.md",
      "start_line": 1,
      "end_line": 7,
      "summary": "介绍DolphinDB中的数据描述语言（DML）。",
      "keywords": [
        "DolphinDB",
        "DML",
        "数据描述语言"
      ],
      "hypothetical_question": "DolphinDB中的数据描述语言（DML）是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/sql_dql.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/sql_dql.md",
      "start_line": 1,
      "end_line": 7,
      "summary": "该文本片段简要介绍了DolphinDB中的数据查询语言（DQL）。",
      "keywords": [
        "DQL",
        "数据查询",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中的数据查询语言是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/sql_trace.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/sql_trace.md",
      "start_line": 1,
      "end_line": 40,
      "summary": "SQL Trace 是 DolphinDB 提供的用于跟踪和分析 SQL 查询执行过程的工具，帮助优化查询性能。",
      "keywords": [
        "SQL Trace",
        "setTraceMode",
        "getTraces",
        "viewTraceInfo",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在 DolphinDB 中使用 SQL Trace 来分析和优化 SQL 查询性能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/sql_intro.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/sql_intro.md",
      "start_line": 1,
      "end_line": 68,
      "summary": "DolphinDB 中的 SQL 语句基本语法、对 ANSI SQL 92 标准的支持、与 SQL 92 的区别以及 SQL 方言兼容性。",
      "keywords": [
        "DolphinDB",
        "SQL",
        "ANSI SQL 92",
        "SQL 方言",
        "语法差异"
      ],
      "hypothetical_question": "DolphinDB 中的 SQL 语句有哪些特点和与 ANSI SQL 92 的区别？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/union.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/union.md",
      "start_line": 1,
      "end_line": 53,
      "summary": "介绍DolphinDB中union和union all操作符的用法、注意事项及示例。",
      "keywords": [
        "union",
        "union all",
        "SQL",
        "DolphinDB",
        "查询合并"
      ],
      "hypothetical_question": "DolphinDB中union和union all有什么区别？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/top.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/top.md",
      "start_line": 1,
      "end_line": 55,
      "summary": "top 子句用于返回表中指定数量的记录，支持标量值或范围，但不允许使用变量或表达式。",
      "keywords": [
        "top 子句",
        "SQL",
        "DolphinDB"
      ],
      "hypothetical_question": "在DolphinDB中如何使用top子句返回指定数量的记录？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/tb_joiner_intro.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/tb_joiner_intro.md",
      "start_line": 1,
      "end_line": 124,
      "summary": "DolphinDB中表连接的基础用法和类型介绍，包括内连接、左连接、右连接、全连接、等值连接、交叉连接、时序连接、窗口连接和前缀连接。",
      "keywords": [
        "表连接",
        "DolphinDB",
        "SQL",
        "内连接",
        "时序连接"
      ],
      "hypothetical_question": "DolphinDB支持哪些类型的表连接？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/update.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/update.md",
      "start_line": 1,
      "end_line": 530,
      "summary": "DolphinDB的update语句用于更新内存表和DFS表中的记录，支持多版本事务、分区更新、数组向量列更新，并提供了丰富的语法和示例。",
      "keywords": [
        "update",
        "DolphinDB",
        "SQL",
        "分区更新",
        "数组向量"
      ],
      "hypothetical_question": "如何在DolphinDB中使用update语句更新内存表和DFS表中的数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/where.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/where.md",
      "start_line": 1,
      "end_line": 225,
      "summary": "该文档详细介绍了DolphinDB中where子句的使用方法、优化技巧及多种应用场景示例。",
      "keywords": [
        "where子句",
        "SQL查询",
        "条件过滤",
        "DolphinDB",
        "查询优化"
      ],
      "hypothetical_question": "在DolphinDB中如何使用where子句进行条件过滤和查询优化？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/statements/assert.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/statements/assert.md",
      "start_line": 1,
      "end_line": 38,
      "summary": "assert语句的语法、参数和用法，主要用于单元测试。",
      "keywords": [
        "assert",
        "单元测试",
        "布尔表达式",
        "语法",
        "参数"
      ],
      "hypothetical_question": "DolphinDB中assert语句的语法和用途是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/viewTraceInfo.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/viewTraceInfo.md",
      "start_line": 1,
      "end_line": 113,
      "summary": "该文档详细介绍了DolphinDB中viewTraceInfo函数的语法、参数、返回信息及其各列含义，用于展示SQL Trace的跟踪信息。",
      "keywords": [
        "viewTraceInfo",
        "SQL Trace",
        "跟踪信息",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用viewTraceInfo函数查看SQL Trace的跟踪信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/with.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/with.md",
      "start_line": 1,
      "end_line": 47,
      "summary": "DolphinDB中的`with`语句用于子查询重构，通过临时表存储子查询结果以提高代码可读性和查询性能。",
      "keywords": [
        "with语句",
        "子查询重构",
        "临时表",
        "SQL性能优化"
      ],
      "hypothetical_question": "DolphinDB中的`with`语句有什么作用和使用方法？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/statements/Include.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/statements/Include.md",
      "start_line": 1,
      "end_line": 52,
      "summary": "DolphinDB中的#include语句用于导入服务器端的脚本文件，不能在命令行中使用。",
      "keywords": [
        "DolphinDB",
        "#include",
        "脚本导入",
        "文件路径"
      ],
      "hypothetical_question": "如何在DolphinDB中导入服务器端的脚本文件？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/sql/windowjoin.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/sql/windowjoin.md",
      "start_line": 1,
      "end_line": 246,
      "summary": "该文档详细介绍了DolphinDB中的window join和prevailing window join的语法、参数、功能区别及使用示例。",
      "keywords": [
        "window join",
        "pwj",
        "asof join",
        "聚合函数",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中的window join和prevailing window join有什么区别？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/statements/blockStatement.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/statements/blockStatement.md",
      "start_line": 1,
      "end_line": 21,
      "summary": "DolphinDB使用花括号{}来定义语句块，并在控制语句和多条语句执行时使用。",
      "keywords": [
        "DolphinDB",
        "语句块",
        "花括号",
        "控制语句",
        "语法"
      ],
      "hypothetical_question": "DolphinDB中如何定义和使用语句块？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/statements/annotate.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/statements/annotate.md",
      "start_line": 1,
      "end_line": 32,
      "summary": "介绍了DolphinDB中注解的语法和使用场景，主要用于单元测试中生成数据对和输出测试用例细节。",
      "keywords": [
        "注解",
        "单元测试",
        "语法",
        "测试用例",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中的注解是如何在单元测试中使用的？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/statements/break.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/statements/break.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "break语句用于在DolphinDB中跳出一层循环，并提供示例代码说明其用法。",
      "keywords": [
        "break",
        "循环",
        "DolphinDB",
        "控制流"
      ],
      "hypothetical_question": "在DolphinDB中如何使用break语句跳出一层循环？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/statements/comment.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/statements/comment.md",
      "start_line": 1,
      "end_line": 21,
      "summary": "介绍了DolphinDB中单行和多行注释的语法和使用方法。",
      "keywords": [
        "注释",
        "单行注释",
        "多行注释",
        "语法",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中如何编写单行和多行注释？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/statements/continue.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/statements/continue.md",
      "start_line": 1,
      "end_line": 24,
      "summary": "continue语句用于提前结束当前循环的本次迭代。",
      "keywords": [
        "continue",
        "循环控制",
        "DolphinDB",
        "编程语句",
        "循环迭代"
      ],
      "hypothetical_question": "在DolphinDB中如何使用continue语句提前结束当前循环的本次迭代？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/statements/doWhile.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/statements/doWhile.md",
      "start_line": 1,
      "end_line": 40,
      "summary": "介绍DolphinDB中do-while循环的语法、使用详情及示例。",
      "keywords": [
        "do-while",
        "循环",
        "语法",
        "条件",
        "示例"
      ],
      "hypothetical_question": "DolphinDB中do-while循环的语法和使用方法是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/statements/for.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/statements/for.md",
      "start_line": 1,
      "end_line": 89,
      "summary": "DolphinDB中的for语句用于循环遍历向量、矩阵或表中的元素，并详细介绍了其语法、使用细节及示例。",
      "keywords": [
        "for语句",
        "循环遍历",
        "向量",
        "矩阵",
        "表"
      ],
      "hypothetical_question": "DolphinDB中如何使用for语句遍历向量、矩阵或表中的元素？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/statements/go.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/statements/go.md",
      "start_line": 1,
      "end_line": 152,
      "summary": "DolphinDB中的`go`语句用于分段解析和执行代码，确保动态注册的变量或函数在后续代码中可被识别。",
      "keywords": [
        "go语句",
        "动态注册",
        "语法解析",
        "DolphinDB"
      ],
      "hypothetical_question": "在DolphinDB中如何使用`go`语句来确保动态注册的变量或函数在后续代码中可被识别？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/statements/ifElse.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/statements/ifElse.md",
      "start_line": 1,
      "end_line": 49,
      "summary": "DolphinDB中if-else语句的语法、使用规则及示例。",
      "keywords": [
        "if-else",
        "DolphinDB",
        "条件语句",
        "语法",
        "示例"
      ],
      "hypothetical_question": "DolphinDB中如何使用if-else语句？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/statements/mapr.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/statements/mapr.md",
      "start_line": 1,
      "end_line": 99,
      "summary": "mapr语句用于在分布式环境中定义用户自定义聚合函数（UDAF）的map reduce实现，并支持cgroup by操作。",
      "keywords": [
        "mapr",
        "用户自定义聚合函数",
        "分布式计算",
        "cgroup by"
      ],
      "hypothetical_question": "如何在DolphinDB中使用mapr语句定义用户自定义聚合函数的map reduce实现？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/statements/return.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/statements/return.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "介绍DolphinDB中return语句的语法、功能及示例。",
      "keywords": [
        "return",
        "函数",
        "语法",
        "终止",
        "执行结果"
      ],
      "hypothetical_question": "DolphinDB中return语句的作用是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/statements/module.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/statements/module.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "DolphinDB中的模块是包含函数定义的脚本文件，通过module语句声明并按目录结构组织。",
      "keywords": [
        "module",
        "DolphinDB",
        "脚本文件",
        "函数定义"
      ],
      "hypothetical_question": "DolphinDB中的模块是什么，如何声明和组织？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/statements/timer.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/statements/timer.md",
      "start_line": 1,
      "end_line": 36,
      "summary": "timer语句用于计算DolphinDB中代码块的执行时间，支持单次和多次执行计时。",
      "keywords": [
        "timer",
        "执行时间",
        "DolphinDB",
        "性能测试"
      ],
      "hypothetical_question": "如何在DolphinDB中测量代码块的执行时间？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/statements/statements_intro.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/statements/statements_intro.md",
      "start_line": 1,
      "end_line": 7,
      "summary": "编程语句定义了对象操作的顺序和方式，并通过分号或换行符分隔。",
      "keywords": [
        "编程语句",
        "分号分隔",
        "命令行执行"
      ],
      "hypothetical_question": "编程语句是如何分隔和执行的？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/statements/tryCatch.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/statements/tryCatch.md",
      "start_line": 1,
      "end_line": 35,
      "summary": "DolphinDB中的try-catch语句用于捕获和处理执行过程中的异常。",
      "keywords": [
        "try-catch",
        "异常处理",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中捕获和处理异常？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/statements/share.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/statements/share.md",
      "start_line": 1,
      "end_line": 126,
      "summary": "DolphinDB中的share命令用于实现表或引擎的共享，包括节点内会话共享、节点间分布式表共享以及为引擎添加写入锁。",
      "keywords": [
        "share",
        "DolphinDB",
        "分布式表",
        "会话共享",
        "引擎写入锁"
      ],
      "hypothetical_question": "DolphinDB中如何使用share命令实现表或引擎的共享？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/statements/throw.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/statements/throw.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "throw语句用于在DolphinDB中抛出用户定义的异常。",
      "keywords": [
        "throw",
        "异常",
        "用户定义",
        "DolphinDB",
        "错误处理"
      ],
      "hypothetical_question": "在DolphinDB中如何抛出用户定义的异常？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/statements/assignments/assign_intro.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/statements/assignments/assign_intro.md",
      "start_line": 1,
      "end_line": 7,
      "summary": "赋值语句的基本概念及其作用。",
      "keywords": [
        "赋值",
        "语句",
        "变量",
        "绑定",
        "修改"
      ],
      "hypothetical_question": "什么是赋值语句及其作用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/statements/transaction.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/statements/transaction.md",
      "start_line": 1,
      "end_line": 55,
      "summary": "DolphinDB中的transaction语句用于将多个SQL操作封装为一个事务，确保原子性、一致性和隔离性，但不支持create、alter和insert into语句。",
      "keywords": [
        "transaction",
        "SQL",
        "原子性",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中的transaction语句有什么作用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/statements/use.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/statements/use.md",
      "start_line": 1,
      "end_line": 42,
      "summary": "DolphinDB中use语句的用法及其规则，包括模块调用和版本更新后的功能扩展。",
      "keywords": [
        "use语句",
        "模块调用",
        "DolphinDB",
        "命名空间",
        "版本更新"
      ],
      "hypothetical_question": "在DolphinDB中如何使用use语句调用模块及其规则是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/statements/assignments/assign_by_ref.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/statements/assignments/assign_by_ref.md",
      "start_line": 1,
      "end_line": 70,
      "summary": "DolphinDB中的引用赋值使用\"&\"符号，直接引用原值的内存地址而不拷贝，能有效节约内存并提高效率。",
      "keywords": [
        "引用赋值",
        "内存效率",
        "DolphinDB",
        "语法"
      ],
      "hypothetical_question": "DolphinDB中如何使用引用赋值以及它有什么优势？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/statements/assignments/assign_multi.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/statements/assignments/assign_multi.md",
      "start_line": 1,
      "end_line": 84,
      "summary": "DolphinDB中多变量赋值的语法和示例，包括通过函数、矩阵和表进行多变量赋值。",
      "keywords": [
        "多变量赋值",
        "DolphinDB",
        "函数返回值",
        "矩阵赋值",
        "表赋值"
      ],
      "hypothetical_question": "在DolphinDB中如何一次性给多个变量赋值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/rn/compact_report_2410.md",
      "chunk_id": "0",
      "source_document": "./documentation/rn/compact_report_2410.md",
      "start_line": 1,
      "end_line": 403,
      "summary": "DolphinDB 3.00.2版本中多个函数的缺陷修复及其对系统行为的影响。",
      "keywords": [
        "DolphinDB",
        "函数变更",
        "缺陷修复",
        "系统影响",
        "版本更新"
      ],
      "hypothetical_question": "DolphinDB 3.00.2版本中有哪些函数的缺陷修复及其对系统行为的影响？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/statements/assignments/assign_by_value.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/statements/assignments/assign_by_value.md",
      "start_line": 1,
      "end_line": 104,
      "summary": "DolphinDB中按值赋值的语法、示例及扩展赋值操作符的使用方法。",
      "keywords": [
        "赋值",
        "按值赋值",
        "DolphinDB",
        "语法",
        "扩展赋值"
      ],
      "hypothetical_question": "DolphinDB中如何使用按值赋值及其扩展赋值操作符？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/progr/statements/assignments/undef.md",
      "chunk_id": "0",
      "source_document": "./documentation/progr/statements/assignments/undef.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "介绍如何在DolphinDB中使用undef命令取消变量或函数定义以释放内存。",
      "keywords": [
        "undef",
        "变量取消",
        "内存释放",
        "函数定义",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中取消变量或函数定义以释放内存？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/rn/compact_report_3003.md",
      "chunk_id": "0",
      "source_document": "./documentation/rn/compact_report_3003.md",
      "start_line": 1,
      "end_line": 222,
      "summary": "DolphinDB 3.00.3版本修复了多个缺陷并引入了系统行为变更，涉及函数参数校验、返回值类型、数据压缩算法、权限管理、SQL查询限制等方面。",
      "keywords": [
        "DolphinDB",
        "缺陷修复",
        "系统变更",
        "SQL查询",
        "权限管理"
      ],
      "hypothetical_question": "DolphinDB 3.00.3版本有哪些主要的缺陷修复和系统行为变更？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/rn/compat1.md",
      "chunk_id": "0",
      "source_document": "./documentation/rn/compat1.md",
      "start_line": 1,
      "end_line": 21,
      "summary": "DolphinDB Server的一级兼容性标准确保旧版本数据和脚本在新版本中运行，允许部分不兼容的插件和SDK更新。",
      "keywords": [
        "兼容性标准",
        "DolphinDB Server",
        "插件",
        "SDK",
        "升级指南"
      ],
      "hypothetical_question": "DolphinDB Server的一级兼容性标准有哪些具体要求？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/rn/compat4.md",
      "chunk_id": "0",
      "source_document": "./documentation/rn/compat4.md",
      "start_line": 1,
      "end_line": 18,
      "summary": "四级兼容性标准要求在三级标准基础上支持有条件回退和滚动升级，确保数据格式、传输协议等完全兼容。",
      "keywords": [
        "四级兼容性标准",
        "滚动升级",
        "数据兼容性"
      ],
      "hypothetical_question": "DolphinDB的四级兼容性标准有哪些具体要求？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/rn/compat2.md",
      "chunk_id": "0",
      "source_document": "./documentation/rn/compat2.md",
      "start_line": 1,
      "end_line": 20,
      "summary": "DolphinDB的二级兼容性标准确保全面向后兼容，包括函数、脚本、插件、SDK和数据存储的兼容性。",
      "keywords": [
        "DolphinDB",
        "兼容性标准",
        "插件",
        "SDK",
        "数据存储"
      ],
      "hypothetical_question": "DolphinDB的二级兼容性标准包括哪些具体要求？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/rn/compat3.md",
      "chunk_id": "0",
      "source_document": "./documentation/rn/compat3.md",
      "start_line": 1,
      "end_line": 18,
      "summary": "三级兼容性标准在二级标准基础上确保插件和SDK的二进制兼容性，并详细列出具体要求和升级指南。",
      "keywords": [
        "三级兼容性标准",
        "二进制兼容",
        "升级指南"
      ],
      "hypothetical_question": "DolphinDB的三级兼容性标准具体包括哪些要求？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/rn/compat5.md",
      "chunk_id": "0",
      "source_document": "./documentation/rn/compat5.md",
      "start_line": 1,
      "end_line": 16,
      "summary": "DolphinDB的五级兼容性标准是最高等级的兼容性标准，支持滚动升级和无条件回退到旧版本。",
      "keywords": [
        "五级兼容性标准",
        "滚动升级",
        "无条件回退",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB的五级兼容性标准有哪些具体要求？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/rn/compat_def.md",
      "chunk_id": "0",
      "source_document": "./documentation/rn/compat_def.md",
      "start_line": 1,
      "end_line": 42,
      "summary": "DolphinDB定义了版本兼容性等级标准，包括向后兼容、向前兼容、版本回退和滚动升级等概念，并详细说明了各兼容性等级的要求。",
      "keywords": [
        "DolphinDB",
        "版本兼容性",
        "滚动升级",
        "版本回退",
        "兼容性等级"
      ],
      "hypothetical_question": "DolphinDB的版本兼容性等级标准包括哪些内容？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/rn/compat_report_3000.md",
      "chunk_id": "0",
      "source_document": "./documentation/rn/compat_report_3000.md",
      "start_line": 1,
      "end_line": 53,
      "summary": "DolphinDB 3.00.0版本的兼容性报告，包括管理员权限变更和函数别名处理行为的修改。",
      "keywords": [
        "DolphinDB",
        "兼容性",
        "函数别名"
      ],
      "hypothetical_question": "DolphinDB 3.00.0版本有哪些兼容性变化？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/rn/compat_lv.md",
      "chunk_id": "0",
      "source_document": "./documentation/rn/compat_lv.md",
      "start_line": 1,
      "end_line": 10,
      "summary": "DolphinDB版本升级的兼容性等级约定，包括大版本和小版本升级的不同兼容性标准及注意事项。",
      "keywords": [
        "DolphinDB",
        "版本兼容性",
        "升级",
        "兼容性标准",
        "回退"
      ],
      "hypothetical_question": "DolphinDB不同版本升级时的兼容性等级标准是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/rn/compat_report_3001.md",
      "chunk_id": "0",
      "source_document": "./documentation/rn/compat_report_3001.md",
      "start_line": 1,
      "end_line": 122,
      "summary": "DolphinDB 3.00.1版本的兼容性报告，详细说明了影响存储或版本回退的修改以及缺陷修复带来的系统影响。",
      "keywords": [
        "DolphinDB",
        "版本兼容性",
        "缺陷修复",
        "存储引擎",
        "SQL语句"
      ],
      "hypothetical_question": "DolphinDB 3.00.1版本有哪些影响存储或版本回退的修改和缺陷修复？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/rn/rn_gui.md",
      "chunk_id": "0",
      "source_document": "./documentation/rn/rn_gui.md",
      "start_line": 1,
      "end_line": 210,
      "summary": "DolphinDB GUI 客户端的版本更新日志，包括新增功能、功能优化和故障修复。",
      "keywords": [
        "DolphinDB GUI",
        "版本更新",
        "故障修复",
        "功能优化",
        "新增功能"
      ],
      "hypothetical_question": "DolphinDB GUI 客户端有哪些版本更新和功能改进？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/rn/rn_vscode.md",
      "chunk_id": "0",
      "source_document": "./documentation/rn/rn_vscode.md",
      "start_line": 1,
      "end_line": 140,
      "summary": "DolphinDB VS Code插件的版本更新日志，包括新增功能、功能优化和故障修复的详细说明。",
      "keywords": [
        "VS Code插件",
        "DolphinDB",
        "版本更新",
        "功能优化",
        "故障修复"
      ],
      "hypothetical_question": "DolphinDB VS Code插件的最新版本有哪些新增功能和优化？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/rn/plugin/3_00_2.md",
      "chunk_id": "0",
      "source_document": "./documentation/rn/plugin/3_00_2.md",
      "start_line": 1,
      "end_line": 234,
      "summary": "DolphinDB 3.00.2版本插件更新日志，包括新功能、功能优化和故障修复。",
      "keywords": [
        "DolphinDB",
        "插件更新",
        "新功能",
        "功能优化",
        "故障修复"
      ],
      "hypothetical_question": "DolphinDB 3.00.2版本有哪些插件更新？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/rn/rn_web.md",
      "chunk_id": "0",
      "source_document": "./documentation/rn/rn_web.md",
      "start_line": 1,
      "end_line": 409,
      "summary": "DolphinDB Web集群管理器的版本更新日志，详细介绍了从3.00.3到1.30.16版本的新功能、功能优化和缺陷修复。",
      "keywords": [
        "DolphinDB",
        "Web集群管理器",
        "版本更新",
        "新功能",
        "缺陷修复"
      ],
      "hypothetical_question": "DolphinDB Web集群管理器在3.00.3版本中新增了哪些功能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/rn/plugin/3_00_3.md",
      "chunk_id": "0",
      "source_document": "./documentation/rn/plugin/3_00_3.md",
      "start_line": 1,
      "end_line": 8,
      "summary": "DolphinDB 3.00.3版本新增了对LDAP更多自定义设置项的支持。",
      "keywords": [
        "DolphinDB",
        "LDAP",
        "自定义设置",
        "3.00.3",
        "新功能"
      ],
      "hypothetical_question": "DolphinDB 3.00.3版本在LDAP方面有哪些新功能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/rn/plugin/3_00_1.md",
      "chunk_id": "0",
      "source_document": "./documentation/rn/plugin/3_00_1.md",
      "start_line": 1,
      "end_line": 233,
      "summary": "DolphinDB插件3.00.1版本更新，包括amdQuote、Arrow、Backtest等多个插件的功能新增、优化和缺陷修复。",
      "keywords": [
        "DolphinDB",
        "插件更新",
        "功能优化",
        "缺陷修复",
        "新功能"
      ],
      "hypothetical_question": "DolphinDB插件3.00.1版本有哪些新增功能和优化？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/rn/server/3000.md",
      "chunk_id": "0",
      "source_document": "./documentation/rn/server/3000.md",
      "start_line": 1,
      "end_line": 200,
      "summary": "DolphinDB 3.00.0版本发布，包含新功能、功能改进和故障修复。",
      "keywords": [
        "DolphinDB",
        "3.00.0",
        "新功能",
        "功能改进",
        "故障修复"
      ],
      "hypothetical_question": "DolphinDB 3.00.0版本有哪些新功能和改进？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/rn/plugin/plg300rn.md",
      "chunk_id": "0",
      "source_document": "./documentation/rn/plugin/plg300rn.md",
      "start_line": 1,
      "end_line": 286,
      "summary": "DolphinDB 3.00.00版本插件更新，包括新增功能、功能改进和故障修复，涉及多个插件如amdQuote、Arrow、aws s3、Backtest等。",
      "keywords": [
        "DolphinDB",
        "插件更新",
        "新功能",
        "故障修复",
        "功能改进"
      ],
      "hypothetical_question": "DolphinDB 3.00.00版本有哪些插件更新和改进？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/rn/server/3_00_3.md",
      "chunk_id": "0",
      "source_document": "./documentation/rn/server/3_00_3.md",
      "start_line": 1,
      "end_line": 212,
      "summary": "DolphinDB 3.00.3版本引入了多项新功能、优化和故障修复，包括ORCA实时计算平台、数据加密、登录安全增强、新增函数和配置项等。",
      "keywords": [
        "DolphinDB",
        "新功能",
        "优化",
        "故障修复",
        "ORCA"
      ],
      "hypothetical_question": "DolphinDB 3.00.3版本有哪些新功能和优化？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/rn/server/3_00_1.md",
      "chunk_id": "0",
      "source_document": "./documentation/rn/server/3_00_1.md",
      "start_line": 1,
      "end_line": 291,
      "summary": "DolphinDB 3.00.1版本的新功能、功能优化和故障修复的详细说明。",
      "keywords": [
        "DolphinDB",
        "3.00.1",
        "新功能",
        "功能优化",
        "故障修复"
      ],
      "hypothetical_question": "DolphinDB 3.00.1版本有哪些新功能和改进？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/rn/server/3_00_2.md",
      "chunk_id": "0",
      "source_document": "./documentation/rn/server/3_00_2.md",
      "start_line": 1,
      "end_line": 291,
      "summary": "DolphinDB 3.00.2版本发布，包含新功能、功能优化、故障修复及废弃功能。",
      "keywords": [
        "DolphinDB",
        "版本更新",
        "新功能",
        "故障修复",
        "功能优化"
      ],
      "hypothetical_question": "DolphinDB 3.00.2版本有哪些新功能和改进？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/rn/server/api.md",
      "chunk_id": "0",
      "source_document": "./documentation/rn/server/api.md",
      "start_line": 1,
      "end_line": 5,
      "summary": "文档标题为'API 和连接器'，并包含版权信息。",
      "keywords": [
        "API",
        "连接器",
        "版权",
        "智臾科技"
      ],
      "hypothetical_question": "DolphinDB文档中关于API和连接器的部分版权信息是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/rn/server/third_party_rn.md",
      "chunk_id": "0",
      "source_document": "./documentation/rn/server/third_party_rn.md",
      "start_line": 1,
      "end_line": 5,
      "summary": "该文本片段介绍了第三方工具的版权信息。",
      "keywords": [
        "第三方工具",
        "版权",
        "智臾科技"
      ],
      "hypothetical_question": "DolphinDB 第三方工具的版权信息是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/rn/server/datax_writer.md",
      "chunk_id": "0",
      "source_document": "./documentation/rn/server/datax_writer.md",
      "start_line": 1,
      "end_line": 27,
      "summary": "DataX-dolphindbwriter的新功能、功能优化和故障修复，包括新增配置参数、类型支持和执行逻辑优化。",
      "keywords": [
        "DataX-dolphindbwriter",
        "配置参数",
        "功能优化"
      ],
      "hypothetical_question": "DataX-dolphindbwriter在1.30版本中有哪些新功能和优化？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/cep_application.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/cep_application.md",
      "start_line": 1,
      "end_line": 11,
      "summary": "CEP引擎的主要特点和应用领域包括实时数据流处理、金融服务、电信、物流和供应链管理、物联网、安全监控等领域的实时决策和响应。",
      "keywords": [
        "CEP引擎",
        "实时数据流处理",
        "实时决策",
        "金融服务",
        "物联网"
      ],
      "hypothetical_question": "CEP引擎的主要应用领域和特点是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/anomaly_detection_engine.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/anomaly_detection_engine.md",
      "start_line": 1,
      "end_line": 336,
      "summary": "DolphinDB的异常检测引擎通过流数据框架实时检测异常数据，支持多种异常指标类型，适用于物联网和金融风控场景。",
      "keywords": [
        "异常检测引擎",
        "流数据",
        "物联网",
        "金融风控",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB的异常检测引擎如何实现实时异常数据检测？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/rn/server/grafana.md",
      "chunk_id": "0",
      "source_document": "./documentation/rn/server/grafana.md",
      "start_line": 1,
      "end_line": 31,
      "summary": "DolphinDB 提供了两种 Grafana 数据源插件，其中 dolphindb-datasource-next 插件新增了多项功能、优化和故障修复，而 dolphindb-datasource 插件已停止维护。",
      "keywords": [
        "Grafana",
        "DolphinDB",
        "数据源插件"
      ],
      "hypothetical_question": "DolphinDB 提供的 Grafana 数据源插件有哪些新功能和优化？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/cep.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/cep.md",
      "start_line": 1,
      "end_line": 31,
      "summary": "复杂事件处理（CEP）引擎是用于实时处理和分析事件流中复杂事件的引擎，具备事件捕捉、模式识别和复杂处理能力，与普通流处理引擎在数据结构、处理方式和目标上有显著区别。",
      "keywords": [
        "复杂事件处理",
        "CEP引擎",
        "实时数据处理",
        "事件模式",
        "流处理引擎"
      ],
      "hypothetical_question": "复杂事件处理（CEP）引擎与普通流处理引擎有什么区别？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/rn/server/datax_dolphindbreader_0.md",
      "chunk_id": "0",
      "source_document": "./documentation/rn/server/datax_dolphindbreader_0.md",
      "start_line": 1,
      "end_line": 17,
      "summary": "DataX-dolphindbreader插件在1.30.22版本中新增了多任务切分、DECIMAL数据类型支持和querySql自定义配置功能，并优化了内部逻辑及修复了字符串长度和channel参数问题。",
      "keywords": [
        "DataX",
        "dolphindbreader",
        "DECIMAL",
        "querySql",
        "故障修复"
      ],
      "hypothetical_question": "DataX-dolphindbreader插件在1.30.22版本中有哪些新功能和优化？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/cep_basic_concept.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/cep_basic_concept.md",
      "start_line": 1,
      "end_line": 37,
      "summary": "DolphinDB CEP 的基本概念包括事件、监视器、监听器和模式匹配，用于处理和分析事件流。",
      "keywords": [
        "DolphinDB CEP",
        "事件",
        "监视器",
        "监听器",
        "模式匹配"
      ],
      "hypothetical_question": "DolphinDB CEP 的基本概念有哪些？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/cep_monitor_defining.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/cep_monitor_defining.md",
      "start_line": 1,
      "end_line": 157,
      "summary": "本文档详细介绍了如何在 DolphinDB CEP 引擎中定义、启动、生成、获取和终止 Monitor 实例，以及它们之间的通信方式。",
      "keywords": [
        "CEP Monitor",
        "事件监听",
        "spawnMonitor",
        "getCEPEngineMonitor",
        "destroyMonitor"
      ],
      "hypothetical_question": "如何在 DolphinDB 中定义和操作 CEP Monitor？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/asof_join_engine.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/asof_join_engine.md",
      "start_line": 1,
      "end_line": 148,
      "summary": "asof join 引擎用于按连接列分组和时间邻近度关联左右表数据，支持两种时序规则和超时强制触发机制。",
      "keywords": [
        "asof join",
        "createAsofJoinEngine",
        "时间邻近度",
        "流数据"
      ],
      "hypothetical_question": "如何使用 asof join 引擎实现按时间邻近度关联左右表数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/cluster_sub.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/cluster_sub.md",
      "start_line": 1,
      "end_line": 66,
      "summary": "介绍如何在DolphinDB集群内跨节点订阅流数据，包括创建共享流数据表、订阅数据、写入数据库及取消订阅的完整流程。",
      "keywords": [
        "跨节点订阅",
        "流数据",
        "DolphinDB",
        "集群",
        "subscribeTable"
      ],
      "hypothetical_question": "如何在DolphinDB集群内实现跨节点订阅流数据并写入数据库？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/cep_monitoring.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/cep_monitoring.md",
      "start_line": 1,
      "end_line": 133,
      "summary": "DolphinDB 提供了 DataView 引擎用于实时监控 CEP 引擎的中间变量，支持创建、获取、更新和删除数据视图。",
      "keywords": [
        "DataView 引擎",
        "CEP 引擎",
        "实时监控"
      ],
      "hypothetical_question": "如何在 DolphinDB 中实时监控 CEP 引擎的中间变量？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/cross_cluster_sub.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/cross_cluster_sub.md",
      "start_line": 1,
      "end_line": 66,
      "summary": "介绍如何在DolphinDB中实现跨集群节点间订阅流处理结果，包括发布端和订阅端的配置、数据写入及取消订阅的步骤。",
      "keywords": [
        "跨集群订阅",
        "流数据处理",
        "DolphinDB",
        "subscribeTable",
        "流数据表"
      ],
      "hypothetical_question": "如何在DolphinDB中实现跨集群节点间的流数据订阅？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/cep_events_defining.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/cep_events_defining.md",
      "start_line": 1,
      "end_line": 67,
      "summary": "本文档介绍了在DolphinDB中如何定义CEP事件类型，包括事件属性的类型及形式，以及定义事件类型的语法和示例。",
      "keywords": [
        "CEP",
        "事件定义",
        "DolphinDB",
        "事件属性",
        "语法"
      ],
      "hypothetical_question": "如何在DolphinDB中定义CEP事件类型及其属性？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/cep_viewing.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/cep_viewing.md",
      "start_line": 1,
      "end_line": 94,
      "summary": "介绍如何查看DolphinDB中CEP引擎的运行状态及其详细信息的命令和方法。",
      "keywords": [
        "CEP引擎",
        "运行状态",
        "DolphinDB",
        "监控"
      ],
      "hypothetical_question": "如何在DolphinDB中查看CEP引擎的运行状态和详细信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/datafeed_best_practice.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/datafeed_best_practice.md",
      "start_line": 1,
      "end_line": 435,
      "summary": "本文介绍了如何使用DolphinDB DataFeed插件接收中金所实时行情数据，并将其写入分布式数据库的最佳实践。",
      "keywords": [
        "DolphinDB",
        "DataFeed",
        "实时行情",
        "分布式数据库",
        "流数据"
      ],
      "hypothetical_question": "如何使用DolphinDB DataFeed插件将中金所实时行情数据写入分布式数据库？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/defining_event_listeners.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/defining_event_listeners.md",
      "start_line": 1,
      "end_line": 84,
      "summary": "介绍如何在DolphinDB的CEP引擎中使用`addEventListener`定义事件监听器，包括事件匹配规则、回调函数及多种触发方式。",
      "keywords": [
        "事件监听器",
        "addEventListener",
        "CEP引擎",
        "回调函数",
        "事件匹配"
      ],
      "hypothetical_question": "如何在DolphinDB中使用`addEventListener`定义事件监听器？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/cross_sectional_engine.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/cross_sectional_engine.md",
      "start_line": 1,
      "end_line": 299,
      "summary": "横截面引擎适用于对截面数据进行实时计算，支持多种触发模式，如每行触发、每批触发、时间间隔触发等，并提供了详细的应用示例。",
      "keywords": [
        "横截面引擎",
        "实时计算",
        "触发模式",
        "流数据",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用横截面引擎进行实时计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/equi_join_engine.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/equi_join_engine.md",
      "start_line": 1,
      "end_line": 144,
      "summary": "DolphinDB的equi join引擎通过`createEquiJoinEngine`函数创建，用于按连接列和时间列等值关联左右表数据，适用于连接列和时间列唯一的数据场景，并提供了应用示例和参数说明。",
      "keywords": [
        "equi join引擎",
        "createEquiJoinEngine",
        "连接列",
        "时间列",
        "实时数据关联"
      ],
      "hypothetical_question": "如何在DolphinDB中使用equi join引擎实现实时数据关联？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/event_stream_deserializer.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/event_stream_deserializer.md",
      "start_line": 1,
      "end_line": 8,
      "summary": "事件流反序列化器用于将序列化的流事件数据转换回原始事件对象，CEP引擎已内置该功能无需额外定义。",
      "keywords": [
        "事件流反序列化器",
        "Stream Event Deserializer",
        "CEP引擎",
        "异构流表"
      ],
      "hypothetical_question": "什么是事件流反序列化器及其在CEP引擎中的作用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/getting_event_listener_instances.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/getting_event_listener_instances.md",
      "start_line": 1,
      "end_line": 26,
      "summary": "介绍如何使用`getEventListener`方法查询CEP引擎中已注册的事件监听器实例。",
      "keywords": [
        "getEventListener",
        "事件监听器",
        "CEP引擎",
        "monitor"
      ],
      "hypothetical_question": "如何在DolphinDB中查询已注册的事件监听器实例？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/event_stream_serializer.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/event_stream_serializer.md",
      "start_line": 1,
      "end_line": 59,
      "summary": "DolphinDB的事件流序列化器用于将实时事件流序列化为BLOB格式并写入异构流数据表，支持网络传输和数据持久化。",
      "keywords": [
        "事件流序列化器",
        "BLOB格式",
        "异构流数据表",
        "CEP引擎",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中如何将实时事件流序列化并写入异构流数据表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/local_sub.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/local_sub.md",
      "start_line": 1,
      "end_line": 65,
      "summary": "介绍如何在DolphinDB中实现节点内部订阅流数据，包括创建共享流数据表、订阅数据、写入数据库及取消订阅的完整流程。",
      "keywords": [
        "节点内部订阅",
        "流数据表",
        "subscribeTable",
        "DolphinDB",
        "数据处理"
      ],
      "hypothetical_question": "如何在DolphinDB中实现节点内部订阅流数据并写入数据库？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/nsq.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/nsq.md",
      "start_line": 1,
      "end_line": 19,
      "summary": "DolphinDB开发的NSQ插件用于对接恒生NSQ极速行情服务软件，获取上海和深圳市场的三种行情数据。",
      "keywords": [
        "NSQ插件",
        "恒生NSQ",
        "行情数据",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB的NSQ插件支持哪些恒生NSQ行情数据的获取？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/orca.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/orca.md",
      "start_line": 1,
      "end_line": 515,
      "summary": "Orca 是 DolphinDB 的实时计算平台，通过声明式 API、自动调度和高可用机制解决传统流计算方案的复杂性问题。",
      "keywords": [
        "Orca",
        "实时计算",
        "声明式 API",
        "流图",
        "高可用"
      ],
      "hypothetical_question": "Orca 实时计算平台如何解决传统流计算方案的复杂性问题？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/leftsemi_join_engine.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/leftsemi_join_engine.md",
      "start_line": 1,
      "end_line": 174,
      "summary": "leftSemi join 引擎通过 `createLeftSemiJoinEngine` 函数创建，用于按连接列等值关联左右表，输出匹配成功的记录，并提供了三个实际应用例子。",
      "keywords": [
        "leftSemi join 引擎",
        "createLeftSemiJoinEngine",
        "流数据处理",
        "关联查询",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在 DolphinDB 中使用 leftSemi join 引擎关联流数据表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/lookup_join_engine.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/lookup_join_engine.md",
      "start_line": 1,
      "end_line": 210,
      "summary": "lookup join 引擎通过 `createLookupJoinEngine` 函数创建，支持左连接和内连接方式，用于实时关联左表数据流与右表数据流或数据集，并提供多个应用示例。",
      "keywords": [
        "lookup join 引擎",
        "createLookupJoinEngine",
        "数据流关联",
        "左连接",
        "内连接"
      ],
      "hypothetical_question": "如何在 DolphinDB 中使用 lookup join 引擎实现实时数据流与历史数据集的关联？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/py_sub.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/py_sub.md",
      "start_line": 1,
      "end_line": 62,
      "summary": "介绍如何使用Python API订阅DolphinDB流数据并处理订阅结果。",
      "keywords": [
        "Python API",
        "流数据订阅",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在Python中订阅DolphinDB的流数据并处理结果？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/realtime_data_acces.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/realtime_data_acces.md",
      "start_line": 1,
      "end_line": 8,
      "summary": "介绍实时流数据接入的概念及其在DolphinDB中的应用。",
      "keywords": [
        "实时流数据",
        "DolphinDB",
        "API",
        "插件",
        "行情数据"
      ],
      "hypothetical_question": "什么是实时流数据接入及其在DolphinDB中的应用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/mdl_best_practice.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/mdl_best_practice.md",
      "start_line": 1,
      "end_line": 816,
      "summary": "本文介绍了如何使用DolphinDB的MDL插件订阅并处理中金所Level 1实时数据，包括数据存储方案、实时与历史数据字段对齐方法、实时合成K线模块以及主力合约选择和VWAP计算等关键细节。",
      "keywords": [
        "DolphinDB",
        "MDL插件",
        "中金所Level 1数据",
        "实时数据处理",
        "K线合成"
      ],
      "hypothetical_question": "如何使用DolphinDB的MDL插件处理中金所Level 1实时数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/reactive_state_engine.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/reactive_state_engine.md",
      "start_line": 1,
      "end_line": 479,
      "summary": "DolphinDB的响应式状态引擎是一种高效处理流数据的计算引擎，特别优化了金融高频因子和物联网传感器数据的实时计算。",
      "keywords": [
        "响应式状态引擎",
        "金融高频因子",
        "流数据处理",
        "DolphinDB",
        "实时计算"
      ],
      "hypothetical_question": "DolphinDB的响应式状态引擎如何优化金融高频因子的实时计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/stateless_operators.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/stateless_operators.md",
      "start_line": 1,
      "end_line": 156,
      "summary": "DolphinDB中的无状态算子及其在流数据处理中的应用，包括数据清洗和转换的步骤和示例。",
      "keywords": [
        "无状态算子",
        "流数据处理",
        "数据清洗",
        "DolphinDB",
        "回调函数"
      ],
      "hypothetical_question": "如何在DolphinDB中使用无状态算子进行流数据的清洗和转换？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/session_window_engine.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/session_window_engine.md",
      "start_line": 1,
      "end_line": 129,
      "summary": "会话窗口引擎是DolphinDB中用于处理非固定频率数据的流计算引擎，通过createSessionWindowEngine函数创建，根据指定的等待时间动态确定窗口边界。",
      "keywords": [
        "会话窗口引擎",
        "createSessionWindowEngine",
        "流计算",
        "DolphinDB",
        "动态窗口"
      ],
      "hypothetical_question": "DolphinDB中的会话窗口引擎是如何工作的？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/str_altair.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/str_altair.md",
      "start_line": 1,
      "end_line": 70,
      "summary": "DolphinDB与Altair Panopticon流数据分析平台的数据对接实现了高性能时序数据的实时可视化分析。",
      "keywords": [
        "DolphinDB",
        "Altair Panopticon",
        "流数据分析",
        "数据可视化",
        "时序数据"
      ],
      "hypothetical_question": "如何利用DolphinDB和Altair Panopticon实现实时流数据的可视化分析？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/stateful_operators.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/stateful_operators.md",
      "start_line": 1,
      "end_line": 157,
      "summary": "DolphinDB中的有状态算子及其在流计算中的应用，包括内置算子和自定义算子的使用方法和示例。",
      "keywords": [
        "有状态算子",
        "流计算",
        "DolphinDB",
        "状态引擎",
        "自定义算子"
      ],
      "hypothetical_question": "DolphinDB中有哪些内置的有状态算子，以及如何使用自定义状态算子进行流计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/str_batch.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/str_batch.md",
      "start_line": 1,
      "end_line": 82,
      "summary": "DolphinDB的流批一体技术允许使用同一套代码处理历史数据和实时数据，确保计算结果一致并简化开发流程。",
      "keywords": [
        "流批一体",
        "DolphinDB",
        "实时计算",
        "批量计算",
        "状态函数"
      ],
      "hypothetical_question": "DolphinDB如何实现流批一体以确保实时计算与批量计算结果一致？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/str_eng_parser.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/str_eng_parser.md",
      "start_line": 1,
      "end_line": 276,
      "summary": "StreamEngineParser 解析原理及其在自动构建流计算流水线和流批一体计算中的应用。",
      "keywords": [
        "StreamEngineParser",
        "流计算引擎",
        "流批一体",
        "解析原理",
        "DolphinDB"
      ],
      "hypothetical_question": "StreamEngineParser 如何自动构建流计算流水线并实现流批一体计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/str_api_python.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/str_api_python.md",
      "start_line": 1,
      "end_line": 287,
      "summary": "本文档介绍了如何使用DolphinDB Python API的tableInsert同步写入接口和MultithreadedTableWriter异步写入接口将数据实时写入DolphinDB，并提供了性能基准测试结果。",
      "keywords": [
        "DolphinDB",
        "Python API",
        "实时数据写入",
        "tableInsert",
        "MultithreadedTableWriter"
      ],
      "hypothetical_question": "如何使用Python API将实时数据写入DolphinDB？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/str_funcs.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/str_funcs.md",
      "start_line": 1,
      "end_line": 36,
      "summary": "DolphinDB流数据功能简介，包括流数据表、发布与订阅机制、流计算引擎及整体流数据处理架构。",
      "keywords": [
        "流数据表",
        "发布订阅",
        "流计算引擎"
      ],
      "hypothetical_question": "DolphinDB的流数据功能包括哪些主要组件？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/str_intro.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/str_intro.md",
      "start_line": 1,
      "end_line": 64,
      "summary": "DolphinDB流数据是一个高性能的流处理引擎，支持实时ETL、复杂计算和多源数据关联，适用于金融和物联网领域的高吞吐量、低延迟和复杂实时分析场景。",
      "keywords": [
        "流数据",
        "实时计算",
        "金融",
        "物联网",
        "高性能"
      ],
      "hypothetical_question": "DolphinDB流数据的主要特性和应用场景是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/str_ha.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/str_ha.md",
      "start_line": 1,
      "end_line": 288,
      "summary": "DolphinDB通过基于Raft协议的高可用多副本架构实现流数据的高可用，包括Broker、生产者和消费者的高可用，并提供了配置、创建和管理高可用流数据表的详细指南。",
      "keywords": [
        "流数据高可用",
        "Raft协议",
        "Broker",
        "生产者",
        "消费者"
      ],
      "hypothetical_question": "DolphinDB如何实现流数据的高可用功能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/str_join_engine.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/str_join_engine.md",
      "start_line": 1,
      "end_line": 127,
      "summary": "DolphinDB提供了5种流数据连接引擎，支持实时数据流关联，解决低延时场景下的增量计算和内存管理问题。",
      "keywords": [
        "流数据连接引擎",
        "实时关联",
        "DolphinDB",
        "增量计算",
        "内存管理"
      ],
      "hypothetical_question": "DolphinDB中有哪些流数据连接引擎可以用于实时数据流关联？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/str_monitor.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/str_monitor.md",
      "start_line": 1,
      "end_line": 100,
      "summary": "DolphinDB提供了Web面板和函数查询两种方式监控流计算状态，包括发布订阅状态、引擎状态和流数据表状态，并介绍了需要重点关注的监控指标如队列深度、线程ID和错误信息。",
      "keywords": [
        "流计算监控",
        "Web面板",
        "函数查询",
        "队列深度",
        "线程ID"
      ],
      "hypothetical_question": "DolphinDB中如何监控流计算状态以及需要关注哪些关键指标？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/str_operator.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/str_operator.md",
      "start_line": 1,
      "end_line": 9,
      "summary": "DolphinDB实现了无状态和有状态两种流计算算子，分别处理不依赖历史数据和依赖历史数据的流式计算。",
      "keywords": [
        "流式计算算子",
        "无状态计算",
        "有状态计算",
        "DolphinDB",
        "增量计算"
      ],
      "hypothetical_question": "DolphinDB中的流计算算子有哪些类型，它们有什么区别？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/str_process.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/str_process.md",
      "start_line": 1,
      "end_line": 17,
      "summary": "流式处理中的状态是指在流数据处理系统中维护的跨多个事件持久化存储的数据，分为无状态和有状态两种处理方式。",
      "keywords": [
        "流式处理",
        "状态",
        "无状态流处理",
        "有状态流处理",
        "DolphinDB"
      ],
      "hypothetical_question": "流式处理中的状态是什么，以及无状态和有状态流处理的主要区别是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/str_replay.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/str_replay.md",
      "start_line": 1,
      "end_line": 14,
      "summary": "DolphinDB 提供历史数据回放功能，允许用户将历史数据以实时数据形式导入流数据表，实现同一套代码用于回测和实盘交易。",
      "keywords": [
        "历史数据回放",
        "流数据处理",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB 如何实现历史数据的回放功能以支持回测和实盘交易？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/str_replay_n2n.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/str_replay_n2n.md",
      "start_line": 1,
      "end_line": 89,
      "summary": "介绍 DolphinDB 中 N 对 N 多表回放功能及其应用示例。",
      "keywords": [
        "replay",
        "多表回放",
        "replayDS",
        "数据回放",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在 DolphinDB 中使用 replay 函数实现 N 对 N 多表回放？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/str_replay_1.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/str_replay_1.md",
      "start_line": 1,
      "end_line": 94,
      "summary": "介绍了DolphinDB中1对1单表回放功能的使用方法，包括replay函数的语法、参数说明以及两个应用例子。",
      "keywords": [
        "replay",
        "单表回放",
        "DolphinDB",
        "replayDS",
        "数据回放"
      ],
      "hypothetical_question": "如何在DolphinDB中使用replay函数进行1对1单表回放？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/streaming_computing_engine_in_cep.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/streaming_computing_engine_in_cep.md",
      "start_line": 1,
      "end_line": 57,
      "summary": "DolphinDB的流数据框架支持在CEP引擎中整合股票事件并利用时序聚合引擎计算行情K线。",
      "keywords": [
        "流计算引擎",
        "CEP",
        "时序聚合引擎",
        "行情K线",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB的CEP引擎中使用流计算引擎计算股票行情K线？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/str_table.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/str_table.md",
      "start_line": 1,
      "end_line": 256,
      "summary": "DolphinDB流数据表是一种特殊的内存表，用于存储和发布流数据，支持多种类型（非持久化、键值、持久化、高可用）以满足不同流处理场景需求。",
      "keywords": [
        "流数据表",
        "DolphinDB",
        "持久化",
        "键值流数据表",
        "高可用"
      ],
      "hypothetical_question": "DolphinDB中有哪些类型的流数据表及其特点是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/str_replay_n21.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/str_replay_n21.md",
      "start_line": 1,
      "end_line": 221,
      "summary": "本文档介绍了 DolphinDB 中 N 对 1 多表回放的两种模式（同构回放和异构回放）及其使用方法，包括 `replay` 函数的语法和应用示例。",
      "keywords": [
        "DolphinDB",
        "多表回放",
        "replay函数",
        "异构回放",
        "同构回放"
      ],
      "hypothetical_question": "如何在 DolphinDB 中使用 replay 函数实现 N 对 1 多表回放？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/sub_pub.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/sub_pub.md",
      "start_line": 1,
      "end_line": 206,
      "summary": "DolphinDB 的发布-订阅模型及其实现方式，包括订阅消费、自动重新订阅和过滤发布功能。",
      "keywords": [
        "发布-订阅模型",
        "subscribeTable",
        "流数据处理",
        "自动重新订阅",
        "过滤发布"
      ],
      "hypothetical_question": "如何在 DolphinDB 中实现流数据的发布与订阅？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/timely_str_process.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/timely_str_process.md",
      "start_line": 1,
      "end_line": 38,
      "summary": "介绍了流处理中的系统时间和事件时间的概念、区别及其在DolphinDB流计算引擎中的应用。",
      "keywords": [
        "流处理",
        "系统时间",
        "事件时间",
        "DolphinDB",
        "流计算引擎"
      ],
      "hypothetical_question": "流处理中的系统时间和事件时间有什么区别？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/time_series_engine.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/time_series_engine.md",
      "start_line": 1,
      "end_line": 624,
      "summary": "DolphinDB的时序聚合引擎提供了三种时间序列引擎，用于基于时间窗口的聚合计算，并详细介绍了其应用示例和功能。",
      "keywords": [
        "时序聚合引擎",
        "DolphinDB",
        "时间窗口",
        "流计算",
        "聚合计算"
      ],
      "hypothetical_question": "DolphinDB的时序聚合引擎有哪些类型及其应用场景？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/sys_man/BatchJobManagement.md",
      "chunk_id": "0",
      "source_document": "./documentation/sys_man/BatchJobManagement.md",
      "start_line": 1,
      "end_line": 116,
      "summary": "DolphinDB支持批处理作业管理，允许在独立的工作线程池中执行耗时任务，并提供相关函数和配置参数来管理这些作业。",
      "keywords": [
        "批处理作业",
        "DolphinDB",
        "作业管理",
        "submitJob",
        "远程提交"
      ],
      "hypothetical_question": "如何在DolphinDB中提交和管理批处理作业？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/sys_man/bak_resto.md",
      "chunk_id": "0",
      "source_document": "./documentation/sys_man/bak_resto.md",
      "start_line": 1,
      "end_line": 133,
      "summary": "DolphinDB提供了多种数据备份与恢复的方法，包括备份整个库、部分表或部分分区，以及相应的恢复函数和工具。",
      "keywords": [
        "数据备份",
        "数据恢复",
        "DolphinDB",
        "分区备份",
        "备份函数"
      ],
      "hypothetical_question": "DolphinDB中有哪些数据备份和恢复的方法？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/sys_man/cluster_async_replc.md",
      "chunk_id": "0",
      "source_document": "./documentation/sys_man/cluster_async_replc.md",
      "start_line": 1,
      "end_line": 107,
      "summary": "DolphinDB集群间的异步复制机制及其操作流程，包括支持的操作类型、优势、配置步骤和故障处理。",
      "keywords": [
        "异步复制",
        "集群",
        "DolphinDB",
        "容灾",
        "DDL/DML"
      ],
      "hypothetical_question": "DolphinDB如何实现集群间的异步复制以及其支持的操作类型有哪些？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/try_example1.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/try_example1.md",
      "start_line": 1,
      "end_line": 393,
      "summary": "本文档通过两个示例展示了如何在DolphinDB中实时计算买卖价差和过去5分钟主动成交量占比这两个高频因子，并详细介绍了实现步骤和管理流计算任务的方法。",
      "keywords": [
        "DolphinDB",
        "实时计算",
        "买卖价差",
        "主动成交量占比",
        "流数据表"
      ],
      "hypothetical_question": "如何在DolphinDB中实时计算买卖价差和主动成交量占比？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/window_join_engine.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/window_join_engine.md",
      "start_line": 1,
      "end_line": 224,
      "summary": "window join 引擎通过 createWindowJoinEngine 函数创建，用于在流数据中按时间窗口关联左右表数据，支持多种触发规则和窗口类型，适用于行情快照与逐笔成交数据融合等场景。",
      "keywords": [
        "window join 引擎",
        "createWindowJoinEngine",
        "流数据处理",
        "时间窗口",
        "行情快照"
      ],
      "hypothetical_question": "如何在 DolphinDB 中使用 window join 引擎实现行情快照与逐笔成交数据的融合？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/sys_man/cluster_manage.md",
      "chunk_id": "0",
      "source_document": "./documentation/sys_man/cluster_manage.md",
      "start_line": 1,
      "end_line": 15,
      "summary": "DolphinDB集群由控制节点、代理节点、数据节点和计算节点组成，各自承担不同的功能。",
      "keywords": [
        "DolphinDB集群",
        "控制节点",
        "代理节点",
        "数据节点",
        "计算节点"
      ],
      "hypothetical_question": "DolphinDB集群包含哪些类型的节点及其功能是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/sys_man/multi_cluster_management.md",
      "chunk_id": "0",
      "source_document": "./documentation/sys_man/multi_cluster_management.md",
      "start_line": 1,
      "end_line": 175,
      "summary": "DolphinDB的多集群管理工具通过中心化架构实现跨集群的统一管理、监控和数据访问，并提供权限控制功能。",
      "keywords": [
        "多集群管理",
        "跨集群数据访问",
        "权限控制",
        "DolphinDB",
        "中心化架构"
      ],
      "hypothetical_question": "DolphinDB如何实现多集群的统一管理和跨集群数据访问？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/sys_man/om_intro.md",
      "chunk_id": "0",
      "source_document": "./documentation/sys_man/om_intro.md",
      "start_line": 1,
      "end_line": 7,
      "summary": "本章介绍DolphinDB系统运维的相关内容，包括集群管理、任务管理、运维监控和安全与容灾等方面。",
      "keywords": [
        "系统运维",
        "集群管理",
        "任务管理",
        "运维监控",
        "安全与容灾"
      ],
      "hypothetical_question": "DolphinDB系统运维包括哪些主要内容？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tools/grafana.md",
      "chunk_id": "0",
      "source_document": "./documentation/tools/grafana.md",
      "start_line": 1,
      "end_line": 3,
      "summary": "介绍如何重启Grafana。",
      "keywords": [
        "Grafana",
        "重启",
        "操作指南"
      ],
      "hypothetical_question": "如何重启Grafana？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/sys_man/secure_conn.md",
      "chunk_id": "0",
      "source_document": "./documentation/sys_man/secure_conn.md",
      "start_line": 1,
      "end_line": 56,
      "summary": "DolphinDB支持HTTPS安全通信，包括Web访问权限设置、HTTPS启用方式、HTTPS证书安装及SSO功能。",
      "keywords": [
        "HTTPS",
        "证书",
        "安全通信",
        "SSO",
        "Web访问权限"
      ],
      "hypothetical_question": "如何在DolphinDB中启用和配置HTTPS安全通信？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tools/backend_grafana.md",
      "chunk_id": "0",
      "source_document": "./documentation/tools/backend_grafana.md",
      "start_line": 1,
      "end_line": 3,
      "summary": "描述了如何将产物重命名并压缩为.zip文件。",
      "keywords": [
        "dist",
        "dolphindb-datasource-next",
        "zip"
      ],
      "hypothetical_question": "如何将DolphinDB数据源产物压缩为.zip文件？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/sys_man/perf_man.md",
      "chunk_id": "0",
      "source_document": "./documentation/sys_man/perf_man.md",
      "start_line": 1,
      "end_line": 34,
      "summary": "DolphinDB提供了三种运维监控方式：第三方系统API、内置函数和Web界面，并详细介绍了每种方式的使用方法和配置要求。",
      "keywords": [
        "运维监控",
        "DolphinDB",
        "性能监控",
        "Prometheus",
        "Grafana"
      ],
      "hypothetical_question": "DolphinDB提供了哪些运维监控方式及其配置方法？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/sys_man/shutdown.md",
      "chunk_id": "0",
      "source_document": "./documentation/sys_man/shutdown.md",
      "start_line": 1,
      "end_line": 42,
      "summary": "DolphinDB的安全关机机制及正确停止服务的步骤。",
      "keywords": [
        "安全关机",
        "SIGTERM",
        "redo log",
        "stopDataNode",
        "集群模式"
      ],
      "hypothetical_question": "如何在DolphinDB中实现安全关机以避免数据丢失？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tools/grafana_2.md",
      "chunk_id": "0",
      "source_document": "./documentation/tools/grafana_2.md",
      "start_line": 1,
      "end_line": 3,
      "summary": "文档标题为重启Grafana。",
      "keywords": [
        "Grafana",
        "重启",
        "文档标题"
      ],
      "hypothetical_question": "如何重启Grafana？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tools/dbeaver.md",
      "chunk_id": "0",
      "source_document": "./documentation/tools/dbeaver.md",
      "start_line": 1,
      "end_line": 222,
      "summary": "本文介绍了如何使用 DBeaver 24.2.1 版本连接和操作 DolphinDB 数据库，包括安装配置、连接设置、功能使用案例及注意事项。",
      "keywords": [
        "DBeaver",
        "DolphinDB",
        "JDBC",
        "数据库连接",
        "数据管理"
      ],
      "hypothetical_question": "如何通过 DBeaver 连接和操作 DolphinDB 数据库？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tools/datax_reader.md",
      "chunk_id": "0",
      "source_document": "./documentation/tools/datax_reader.md",
      "start_line": 1,
      "end_line": 246,
      "summary": "介绍如何使用DataX的DolphinDBReader插件从DolphinDB读取数据并同步到其他数据源。",
      "keywords": [
        "DataX",
        "DolphinDBReader",
        "数据同步",
        "配置文件",
        "Oracle"
      ],
      "hypothetical_question": "如何使用DataX的DolphinDBReader插件将数据从DolphinDB同步到Oracle？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tools/superset.md",
      "chunk_id": "0",
      "source_document": "./documentation/tools/superset.md",
      "start_line": 1,
      "end_line": 284,
      "summary": "本文档详细介绍了如何部署和配置Superset，连接DolphinDB数据库，创建数据集，以及使用Superset进行股票数据的可视化分析。",
      "keywords": [
        "Superset",
        "DolphinDB",
        "可视化分析",
        "股票数据",
        "仪表盘"
      ],
      "hypothetical_question": "如何通过Superset连接DolphinDB并进行股票数据的可视化分析？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tools/power_bi.md",
      "chunk_id": "0",
      "source_document": "./documentation/tools/power_bi.md",
      "start_line": 1,
      "end_line": 103,
      "summary": "本文档介绍了如何使用Power BI连接DolphinDB数据库，包括安装说明和使用步骤。",
      "keywords": [
        "Power BI",
        "DolphinDB",
        "数据可视化",
        "自定义连接器",
        "数据导入"
      ],
      "hypothetical_question": "如何通过Power BI连接DolphinDB数据库并进行数据可视化？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tools/grafana_overview.md",
      "chunk_id": "0",
      "source_document": "./documentation/tools/grafana_overview.md",
      "start_line": 1,
      "end_line": 20,
      "summary": "DolphinDB 提供了两种 Grafana 数据源插件，用于实现 DolphinDB 时序数据的可视化，分别适用于不同的网络环境和功能需求。",
      "keywords": [
        "Grafana",
        "DolphinDB",
        "数据源插件",
        "时序数据",
        "可视化"
      ],
      "hypothetical_question": "DolphinDB 提供了哪些 Grafana 数据源插件，它们有什么区别？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/ARM_standalone_deploy.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/ARM_standalone_deploy.md",
      "start_line": 1,
      "end_line": 258,
      "summary": "本教程详细介绍了在ARM架构上部署、升级DolphinDB单节点以及处理授权许可过期等问题的步骤和常见问题解答。",
      "keywords": [
        "ARM部署",
        "单节点升级",
        "授权许可更新",
        "DolphinDB",
        "常见问题解答"
      ],
      "hypothetical_question": "如何在ARM架构上部署和升级DolphinDB单节点？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/Anomaly_Detection_Engine.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/Anomaly_Detection_Engine.md",
      "start_line": 1,
      "end_line": 242,
      "summary": "DolphinDB的异常检测引擎通过流数据框架实时检测异常数据，支持自定义指标和窗口计算，适用于物联网设备监控。",
      "keywords": [
        "异常检测引擎",
        "流数据",
        "物联网",
        "实时监控",
        "DolphinDB"
      ],
      "hypothetical_question": "如何使用DolphinDB的异常检测引擎实时监控物联网设备的异常数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/CSI_1000.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/CSI_1000.md",
      "start_line": 1,
      "end_line": 188,
      "summary": "本文介绍了如何使用 DolphinDB 流数据处理框架实时计算中证1000指数的主买/主卖交易量，包括数据回放、流计算引擎级联和实时监控的实现方法。",
      "keywords": [
        "DolphinDB",
        "流计算",
        "中证1000",
        "主买主卖",
        "实时监控"
      ],
      "hypothetical_question": "如何使用 DolphinDB 实时计算中证1000指数的主买/主卖交易量？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/Array_Vector.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/Array_Vector.md",
      "start_line": 1,
      "end_line": 1397,
      "summary": "DolphinDB的Array Vector是一种高效的数据结构，用于存储和处理多档位快照行情数据，支持灵活的查询和计算操作。",
      "keywords": [
        "Array Vector",
        "DolphinDB",
        "快照行情数据",
        "高频数据",
        "量化金融"
      ],
      "hypothetical_question": "如何在DolphinDB中使用Array Vector存储和处理快照行情数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/ACL_and_Security.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/ACL_and_Security.md",
      "start_line": 1,
      "end_line": 1322,
      "summary": "DolphinDB提供了全面的用户权限管理系统，包括角色分类、权限管理、权限确定规则、权限类别及相关函数的权限校验，以保障数据库的安全性。",
      "keywords": [
        "用户权限管理",
        "权限类别",
        "权限确定规则",
        "DolphinDB",
        "安全性"
      ],
      "hypothetical_question": "DolphinDB如何实现用户权限管理和数据库安全性？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/ACL_and_Security_2.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/ACL_and_Security_2.md",
      "start_line": 1,
      "end_line": 1322,
      "summary": "DolphinDB提供了全面的用户权限管理系统，包括角色分类、权限管理、权限确定规则、权限类别及相关函数的权限校验，支持分布式数据库、共享内存表、流数据、视图、定时作业等多种场景的权限控制，并支持HTTPS安全通信和SSO。",
      "keywords": [
        "用户权限管理",
        "DolphinDB",
        "权限控制",
        "HTTPS",
        "SSO"
      ],
      "hypothetical_question": "DolphinDB如何实现用户权限管理和安全通信？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/ClickHouse_to_DolphinDB.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/ClickHouse_to_DolphinDB.md",
      "start_line": 1,
      "end_line": 319,
      "summary": "该文档详细介绍了如何通过ODBC插件和DataX工具将ClickHouse数据迁移到DolphinDB，包括驱动安装、配置步骤、同步数据方法以及性能对比。",
      "keywords": [
        "ClickHouse",
        "DolphinDB",
        "数据迁移",
        "ODBC",
        "DataX"
      ],
      "hypothetical_question": "如何将ClickHouse中的数据迁移到DolphinDB？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/Compute_Node.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/Compute_Node.md",
      "start_line": 1,
      "end_line": 235,
      "summary": "该文本片段介绍了DolphinDB计算节点的使用场景、配置方法、运维监控以及扩缩容操作，重点强调了计算节点在流计算和机器学习任务中的优势及其资源隔离特性。",
      "keywords": [
        "计算节点",
        "流计算",
        "机器学习",
        "运维监控",
        "扩缩容"
      ],
      "hypothetical_question": "如何在DolphinDB中配置和使用计算节点进行流计算和机器学习任务？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/CSI_1000_2.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/CSI_1000_2.md",
      "start_line": 1,
      "end_line": 188,
      "summary": "本文介绍了如何使用 DolphinDB 流数据处理框架实时计算中证 1000 指数成分股的主买/主卖交易量，包括数据回放、流计算引擎级联和实时监控的实现方法。",
      "keywords": [
        "DolphinDB",
        "流计算",
        "中证1000",
        "主买主卖",
        "实时监控"
      ],
      "hypothetical_question": "如何使用 DolphinDB 实时计算中证 1000 指数成分股的主买和主卖交易量？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/DECIMAL_Calculation_Characteristics.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/DECIMAL_Calculation_Characteristics.md",
      "start_line": 1,
      "end_line": 320,
      "summary": "本文详细介绍了DolphinDB中DECIMAL类型的计算特性、优缺点、性能比较及最佳实践，帮助用户在实际应用中选择合适的数据类型以避免精度问题。",
      "keywords": [
        "DECIMAL类型",
        "计算精度",
        "浮点数",
        "性能比较",
        "最佳实践"
      ],
      "hypothetical_question": "DolphinDB中DECIMAL类型有哪些计算特性和优缺点？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/FxSwapValuation.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/FxSwapValuation.md",
      "start_line": 1,
      "end_line": 183,
      "summary": "本文介绍了在DolphinDB中如何通过表连接函数和SQL向量化编程优化外汇掉期估值计算，性能提升超过400倍。",
      "keywords": [
        "外汇掉期",
        "估值计算",
        "DolphinDB",
        "表连接函数",
        "SQL向量化编程"
      ],
      "hypothetical_question": "如何在DolphinDB中优化外汇掉期估值计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/Debezium_and_Kafka_data_sync.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/Debezium_and_Kafka_data_sync.md",
      "start_line": 1,
      "end_line": 1124,
      "summary": "该文档详细介绍了如何通过Debezium和Kafka实现MySQL数据到DolphinDB的同步，包括环境部署、配置步骤、数据同步验证及运维操作。",
      "keywords": [
        "Debezium",
        "Kafka",
        "MySQL",
        "DolphinDB",
        "数据同步"
      ],
      "hypothetical_question": "如何配置Debezium和Kafka以实现MySQL数据到DolphinDB的实时同步？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/DECIMAL.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/DECIMAL.md",
      "start_line": 1,
      "end_line": 299,
      "summary": "DolphinDB 引入 DECIMAL32 和 DECIMAL64 数据类型以提供高精度计算，适用于金融领域，并详细介绍了其语法、数据结构、数值范围、算术运算规则及与浮点数的对比。",
      "keywords": [
        "DECIMAL",
        "DolphinDB",
        "高精度计算",
        "金融数据",
        "数据类型"
      ],
      "hypothetical_question": "DolphinDB 中的 DECIMAL 类型如何支持高精度金融计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/Data_Move_Rebalance.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/Data_Move_Rebalance.md",
      "start_line": 1,
      "end_line": 448,
      "summary": "本文介绍了DolphinDB集群在节点和磁盘扩容、缩容场景下的数据迁移与再平衡方法，包括相关函数的使用和性能测试。",
      "keywords": [
        "DolphinDB",
        "数据迁移",
        "再平衡",
        "节点扩容",
        "磁盘扩容"
      ],
      "hypothetical_question": "如何在DolphinDB集群中进行节点和磁盘扩容后的数据迁移与再平衡？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/DolphinDB_Explain.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/DolphinDB_Explain.md",
      "start_line": 1,
      "end_line": 1068,
      "summary": "DolphinDB提供了SQL执行计划功能，帮助用户优化查询性能，通过JSON格式的执行计划展示查询的分区命中、耗时等详细信息。",
      "keywords": [
        "DolphinDB",
        "SQL执行计划",
        "查询优化",
        "分区剪枝",
        "性能调优"
      ],
      "hypothetical_question": "如何在DolphinDB中获取和分析SQL执行计划以优化查询性能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/DolphinDB_VS_PythonFile_Storage.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/DolphinDB_VS_PythonFile_Storage.md",
      "start_line": 1,
      "end_line": 351,
      "summary": "本文比较了DolphinDB与Python结合多种文件存储在金融高频因子计算中的性能差异，展示了DolphinDB在计算速度、数据管理和并行处理方面的显著优势。",
      "keywords": [
        "DolphinDB",
        "Python",
        "高频因子计算",
        "性能比较",
        "文件存储"
      ],
      "hypothetical_question": "DolphinDB与Python结合文件存储在金融高频因子计算中的性能差异如何？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/DolphinDB_TopN.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/DolphinDB_TopN.md",
      "start_line": 1,
      "end_line": 339,
      "summary": "DolphinDB的TopN系列函数通过增量计算提升性能，支持滑动窗口、时间窗口和累计窗口的TopN计算，适用于金融等领域的高效数据分析。",
      "keywords": [
        "DolphinDB",
        "TopN函数",
        "滑动窗口计算",
        "金融数据分析",
        "增量计算"
      ],
      "hypothetical_question": "DolphinDB的TopN系列函数如何提升金融数据分析的性能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/Debezium_Kafka_Oracle_sync.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/Debezium_Kafka_Oracle_sync.md",
      "start_line": 1,
      "end_line": 1382,
      "summary": "该文档详细介绍了如何通过Debezium和Kafka实现Oracle数据库到DolphinDB的实时数据同步，包括环境配置、插件安装、同步任务设置及性能测试等内容。",
      "keywords": [
        "Debezium",
        "Kafka",
        "Oracle",
        "DolphinDB",
        "数据同步"
      ],
      "hypothetical_question": "如何配置Debezium和Kafka以实现Oracle数据库到DolphinDB的实时数据同步？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/ImportTLData_toturial.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/ImportTLData_toturial.md",
      "start_line": 1,
      "end_line": 556,
      "summary": "DolphinDB的ImportTLData模块提供了高效导入通联多层次金融历史数据的解决方案，包括模块结构、数据导入步骤、数据库表设计及常见问题解答。",
      "keywords": [
        "DolphinDB",
        "通联数据",
        "数据导入",
        "金融数据",
        "模块化设计"
      ],
      "hypothetical_question": "如何使用DolphinDB的ImportTLData模块导入通联历史金融数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/IV_Greeks_Calculation_for_ETF_Options_Using_JIT.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/IV_Greeks_Calculation_for_ETF_Options_Using_JIT.md",
      "start_line": 1,
      "end_line": 543,
      "summary": "本教程介绍了如何利用DolphinDB的JIT功能加速计算ETF期权的隐含波动率和希腊值，并与C++原生代码进行性能对比。",
      "keywords": [
        "DolphinDB",
        "JIT",
        "ETF期权",
        "隐含波动率",
        "希腊值"
      ],
      "hypothetical_question": "如何使用DolphinDB的JIT功能加速计算ETF期权的隐含波动率和希腊值？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/MVO.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/MVO.md",
      "start_line": 1,
      "end_line": 560,
      "summary": "DolphinDB 提供了多种最优化求解函数（如 linprog、quadprog、qclp、socp）和 gurobi 插件，用于解决金融量化中的投资组合优化问题，包括线性规划、二次规划、二次约束线性规划和二阶锥规划问题。",
      "keywords": [
        "投资组合优化",
        "最优化求解",
        "DolphinDB",
        "线性规划",
        "二次规划"
      ],
      "hypothetical_question": "如何使用 DolphinDB 解决金融量化中的投资组合优化问题？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/Migrate_data_from_InfluxDB_to_DolphinDB.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/Migrate_data_from_InfluxDB_to_DolphinDB.md",
      "start_line": 1,
      "end_line": 311,
      "summary": "本文档提供了从InfluxDB迁移数据到DolphinDB的详细指南，包括实现方法、迁移案例与操作步骤、配置文件参数说明等。",
      "keywords": [
        "InfluxDB",
        "DolphinDB",
        "数据迁移",
        "Addax",
        "时序数据库"
      ],
      "hypothetical_question": "如何将数据从InfluxDB迁移到DolphinDB？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/MySQL_to_DolphinDB.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/MySQL_to_DolphinDB.md",
      "start_line": 1,
      "end_line": 352,
      "summary": "介绍如何通过MySQL插件和ODBC插件将数据从MySQL迁移到DolphinDB，包括数据加载、清洗、转换和入库的方法。",
      "keywords": [
        "MySQL",
        "DolphinDB",
        "数据迁移",
        "插件",
        "数据清洗"
      ],
      "hypothetical_question": "如何将数据从MySQL迁移到DolphinDB？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/OHLC.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/OHLC.md",
      "start_line": 1,
      "end_line": 7,
      "summary": "介绍如何订阅DolphinDB上的OHLC流数据表并通过Grafana进行可视化展示。",
      "keywords": [
        "DolphinDB",
        "OHLC",
        "订阅",
        "Grafana",
        "可视化"
      ],
      "hypothetical_question": "如何订阅DolphinDB上的OHLC流数据表并进行可视化展示？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/LoadDataForPoc.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/LoadDataForPoc.md",
      "start_line": 1,
      "end_line": 437,
      "summary": "本文档详细介绍了金融行业用户如何将股票 Level-2 逐笔历史数据从 CSV 文件导入 DolphinDB 数据库的完整操作步骤，包括数据源分析、存储方案规划、分区设计、数据类型转换、并行导入及常见问题解决。",
      "keywords": [
        "DolphinDB",
        "Level-2 逐笔数据",
        "CSV 导入",
        "金融数据",
        "并行导入"
      ],
      "hypothetical_question": "如何将金融行业的股票 Level-2 逐笔历史数据从 CSV 文件导入 DolphinDB 数据库？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/Migrate_data_from_Redshift_to_DolphinDB.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/Migrate_data_from_Redshift_to_DolphinDB.md",
      "start_line": 1,
      "end_line": 141,
      "summary": "该文本片段详细介绍了如何安装和配置Redshift ODBC驱动，并通过DolphinDB脚本将数据从Redshift迁移到DolphinDB的步骤。",
      "keywords": [
        "Redshift",
        "ODBC",
        "DolphinDB",
        "数据迁移"
      ],
      "hypothetical_question": "如何将数据从Redshift迁移到DolphinDB？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/Startup.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/Startup.md",
      "start_line": 1,
      "end_line": 143,
      "summary": "DolphinDB启动脚本的功能、配置及常见应用场景介绍。",
      "keywords": [
        "启动脚本",
        "DolphinDB",
        "初始化"
      ],
      "hypothetical_question": "DolphinDB启动脚本有哪些常见应用场景？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/OceanBase_to_DolphinDB.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/OceanBase_to_DolphinDB.md",
      "start_line": 1,
      "end_line": 375,
      "summary": "本文介绍了从OceanBase迁移数据到DolphinDB的三种方法（MySQL插件、ODBC插件和DataX驱动），并提供了详细的迁移案例与操作步骤。",
      "keywords": [
        "OceanBase",
        "DolphinDB",
        "数据迁移",
        "MySQL插件",
        "DataX驱动"
      ],
      "hypothetical_question": "如何将数据从OceanBase迁移到DolphinDB？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/OHLC_2.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/OHLC_2.md",
      "start_line": 1,
      "end_line": 7,
      "summary": "介绍如何订阅DolphinDB本机8848端口上的OHLC流数据表，并提到可通过Grafana等可视化系统连接DolphinDB进行查询和图表展示。",
      "keywords": [
        "订阅",
        "OHLC流数据表",
        "Grafana",
        "DolphinDB",
        "可视化"
      ],
      "hypothetical_question": "如何在DolphinDB中订阅本机8848端口上的OHLC流数据表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/Oracle_to_DolphinDB.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/Oracle_to_DolphinDB.md",
      "start_line": 1,
      "end_line": 522,
      "summary": "本文介绍了从Oracle迁移数据到DolphinDB的两种方法（ODBC插件和DataX驱动），并提供了详细的迁移步骤和性能对比。",
      "keywords": [
        "Oracle",
        "DolphinDB",
        "数据迁移",
        "ODBC",
        "DataX"
      ],
      "hypothetical_question": "如何将数据从Oracle迁移到DolphinDB？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/SQLServer_to_DolphinDB.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/SQLServer_to_DolphinDB.md",
      "start_line": 1,
      "end_line": 256,
      "summary": "该文档详细介绍了如何通过ODBC插件和DataX驱动将数据从SQL Server迁移到DolphinDB，并比较了两种方法的性能差异。",
      "keywords": [
        "SQL Server",
        "DolphinDB",
        "数据迁移",
        "ODBC插件",
        "DataX"
      ],
      "hypothetical_question": "如何将数据从SQL Server迁移到DolphinDB并比较不同方法的性能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/Python_Celery.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/Python_Celery.md",
      "start_line": 1,
      "end_line": 501,
      "summary": "本教程介绍了如何构建一个基于DolphinDB、Python Celery框架和dataX的因子计算平台，用于高效处理量化金融中的因子计算任务。",
      "keywords": [
        "DolphinDB",
        "Celery",
        "因子计算",
        "dataX",
        "量化金融"
      ],
      "hypothetical_question": "如何构建一个基于DolphinDB和Celery的高性能因子计算平台？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/Python_HDF5_vs_DolphinDB.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/Python_HDF5_vs_DolphinDB.md",
      "start_line": 1,
      "end_line": 70,
      "summary": "DolphinDB在因子计算性能上显著优于Python+HDF5，速度快25倍以上，且计算结果一致。",
      "keywords": [
        "DolphinDB",
        "Python",
        "HDF5",
        "因子计算",
        "性能对比"
      ],
      "hypothetical_question": "DolphinDB和Python+HDF5在因子计算性能上有什么差异？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/about_tutorials.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/about_tutorials.md",
      "start_line": 1,
      "end_line": 13,
      "summary": "DolphinDB是一个高性能的分布式数据库和分析计算平台，适用于多种数据处理场景，并提供丰富的教程帮助用户学习使用。",
      "keywords": [
        "DolphinDB",
        "分布式数据库",
        "数据分析",
        "教程",
        "数据处理"
      ],
      "hypothetical_question": "DolphinDB是什么以及它有哪些主要功能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/StreamEngineParser.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/StreamEngineParser.md",
      "start_line": 1,
      "end_line": 149,
      "summary": "本文详细介绍了StreamEngineParser的解析过程，包括流水线stage的定义、递归解析方法以及优化策略。",
      "keywords": [
        "StreamEngineParser",
        "流水线stage",
        "递归解析",
        "优化策略",
        "DolphinDB"
      ],
      "hypothetical_question": "StreamEngineParser如何解析和优化流水线stage？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/add_Column.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/add_Column.md",
      "start_line": 1,
      "end_line": 144,
      "summary": "DolphinDB提供了动态增加字段和计算指标的功能，适用于工业物联网和金融领域的数据处理流程，包括分布式表、流数据表和流数据引擎的字段和指标增加。",
      "keywords": [
        "DolphinDB",
        "动态增加字段",
        "流数据处理",
        "分布式表",
        "流数据引擎"
      ],
      "hypothetical_question": "如何在DolphinDB中动态增加字段和计算指标以适应工业物联网和金融领域的数据处理需求？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/Virbration_Monitor_Fault_Diagnose.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/Virbration_Monitor_Fault_Diagnose.md",
      "start_line": 1,
      "end_line": 208,
      "summary": "DolphinDB 提供了一种云边协同的解决方案，用于实时振动监控与故障诊断，通过边缘计算降低延迟并提高数据处理效率。",
      "keywords": [
        "DolphinDB",
        "边缘计算",
        "振动监控",
        "故障诊断",
        "实时数据处理"
      ],
      "hypothetical_question": "如何使用 DolphinDB 在边缘设备上实现振动监控与故障诊断？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/Practical_Factor_Analysis_Modeling.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/Practical_Factor_Analysis_Modeling.md",
      "start_line": 1,
      "end_line": 488,
      "summary": "本文介绍了如何在DolphinDB中使用Alphalens模块进行单因子分析，包括数据准备、因子计算、分析流程及可视化展示。",
      "keywords": [
        "Alphalens",
        "DolphinDB",
        "因子分析",
        "量化投资",
        "可视化"
      ],
      "hypothetical_question": "如何在DolphinDB中使用Alphalens进行单因子分析？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/ai_dataloader_ml.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/ai_dataloader_ml.md",
      "start_line": 1,
      "end_line": 525,
      "summary": "DolphinDB的AI DataLoader（DDBDataLoader）是一个将数据库与深度学习结合的工具，旨在高效管理因子数据并简化与深度学习模型的集成。",
      "keywords": [
        "DDBDataLoader",
        "深度学习",
        "因子数据",
        "PyTorch",
        "量化投资"
      ],
      "hypothetical_question": "DolphinDB的AI DataLoader如何帮助量化投资策略中的深度学习模型训练？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/amd_best_prac.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/amd_best_prac.md",
      "start_line": 1,
      "end_line": 460,
      "summary": "DolphinDB AMD插件最佳实践指南，包括插件介绍、安装加载、实时行情订阅、数据处理、性能测试等内容。",
      "keywords": [
        "DolphinDB",
        "AMD插件",
        "实时行情",
        "数据处理",
        "性能测试"
      ],
      "hypothetical_question": "如何使用DolphinDB的AMD插件进行实时行情数据处理和性能测试？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/api_performance.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/api_performance.md",
      "start_line": 1,
      "end_line": 241,
      "summary": "DolphinDB API性能基准测试报告，比较了C++、Java、C#、Python和R在不同场景下的数据上传、下载和计算性能。",
      "keywords": [
        "DolphinDB",
        "API性能",
        "基准测试",
        "并发性能",
        "数据吞吐量"
      ],
      "hypothetical_question": "DolphinDB的C++、Java、C#、Python和R API在数据上传、下载和计算任务中的性能表现如何？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/appendices_market_replay_bp.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/appendices_market_replay_bp.md",
      "start_line": 1,
      "end_line": 665,
      "summary": "本教程详细介绍了如何基于DolphinDB搭建一个支持多用户并发请求的行情回放服务，包括数据分区存储方案、自定义函数封装、API调用及性能测试。",
      "keywords": [
        "DolphinDB",
        "行情回放",
        "分布式数据库",
        "API",
        "性能测试"
      ],
      "hypothetical_question": "如何基于DolphinDB搭建一个支持多用户并发请求的行情回放服务？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/async_replication.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/async_replication.md",
      "start_line": 1,
      "end_line": 324,
      "summary": "DolphinDB集群间异步复制的原理、配置、使用方法和常见问题解答。",
      "keywords": [
        "异步复制",
        "DolphinDB",
        "集群配置",
        "数据同步",
        "容灾"
      ],
      "hypothetical_question": "如何在DolphinDB中配置和使用集群间的异步复制功能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/backtest_introduction_usage.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/backtest_introduction_usage.md",
      "start_line": 1,
      "end_line": 690,
      "summary": "本文介绍了DolphinDB融资融券策略回测的使用方法，包括业务介绍、参数配置、接口说明及具体回测案例。",
      "keywords": [
        "融资融券",
        "策略回测",
        "DolphinDB",
        "杠杆交易",
        "风险管理"
      ],
      "hypothetical_question": "如何使用DolphinDB进行融资融券策略回测？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/arrow_plugin_usage.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/arrow_plugin_usage.md",
      "start_line": 1,
      "end_line": 305,
      "summary": "DolphinDB Arrow 插件使用教程，介绍如何通过该插件实现 DolphinDB 数据与 Arrow 格式的高效转换，并展示其在 PySpark 计算场景中的性能优势。",
      "keywords": [
        "DolphinDB",
        "Arrow 插件",
        "PySpark",
        "数据转换",
        "性能优化"
      ],
      "hypothetical_question": "如何在 DolphinDB 中使用 Arrow 插件提升与 PySpark 的数据交互效率？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/backup-restore-new.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/backup-restore-new.md",
      "start_line": 1,
      "end_line": 110,
      "summary": "该文本片段详细介绍了DolphinDB中备份和恢复数据的多种方法，包括恢复单张表、单个分区、整个集群以及相关性能测试和常见问题解答。",
      "keywords": [
        "DolphinDB",
        "备份恢复",
        "分布式表",
        "分区恢复",
        "集群迁移"
      ],
      "hypothetical_question": "如何在DolphinDB中恢复单张表或单个分区的数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/backup_restore_before_208.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/backup_restore_before_208.md",
      "start_line": 1,
      "end_line": 347,
      "summary": "该文档详细介绍了DolphinDB在1.30.20/2.00.8以前版本中如何进行数据备份和恢复，包括备份函数的使用、增量备份、定时备份、恢复方法以及备份与恢复的管理函数。",
      "keywords": [
        "DolphinDB",
        "数据备份",
        "数据恢复",
        "分布式数据库",
        "分区备份"
      ],
      "hypothetical_question": "如何在DolphinDB 1.30.20/2.00.8以前版本中进行数据备份和恢复？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/best_practice_for_mdl.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/best_practice_for_mdl.md",
      "start_line": 1,
      "end_line": 251,
      "summary": "本文介绍了如何使用DolphinDB MDL插件将通联数据的高频行情数据实时接入并存储到分布式数据库中，包括插件安装、加载、数据接入方案及实施步骤。",
      "keywords": [
        "DolphinDB",
        "MDL插件",
        "高频行情数据",
        "分布式数据库",
        "数据接入"
      ],
      "hypothetical_question": "如何通过DolphinDB MDL插件将通联数据的高频行情数据实时写入分布式数据库？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/behavioral_profiling_of_driving_habits.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/behavioral_profiling_of_driving_habits.md",
      "start_line": 1,
      "end_line": 219,
      "summary": "本文介绍了如何使用DolphinDB进行汽车用户驾驶习惯行为画像分析，包括速度偏好、驾驶风格和熟练度三个维度的建模方法。",
      "keywords": [
        "DolphinDB",
        "驾驶行为画像",
        "K-means聚类"
      ],
      "hypothetical_question": "如何使用DolphinDB进行汽车用户驾驶习惯行为画像分析？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/best_price_selection.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/best_price_selection.md",
      "start_line": 1,
      "end_line": 287,
      "summary": "本文档介绍了如何使用DolphinDB流数据处理框架实时选取外汇行情多价源最优价，包括案例概述、模拟数据生成、业务代码实现、结果查询和性能分析。",
      "keywords": [
        "DolphinDB",
        "外汇行情",
        "最优价",
        "流数据处理",
        "实时计算"
      ],
      "hypothetical_question": "如何使用DolphinDB实时选取外汇行情多价源最优价？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/best_practice_for_storage_compute_separation.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/best_practice_for_storage_compute_separation.md",
      "start_line": 1,
      "end_line": 469,
      "summary": "本教程详细介绍了DolphinDB存算分离架构的应用场景、配置方法、部署步骤以及性能测试结果，展示了其在多用户资源隔离、数据节点与计算节点隔离及Ad hoc场景中的优势。",
      "keywords": [
        "存算分离",
        "DolphinDB",
        "计算组",
        "性能测试",
        "部署"
      ],
      "hypothetical_question": "DolphinDB存算分离架构有哪些应用场景和性能优势？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/cachedtable.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/cachedtable.md",
      "start_line": 1,
      "end_line": 87,
      "summary": "DolphinDB的cachedTable功能可用于实现MySQL与DolphinDB之间的数据同步，适用于工业物联网和金融领域的基础信息同步需求。",
      "keywords": [
        "DolphinDB",
        "cachedTable",
        "MySQL",
        "数据同步",
        "工业物联网"
      ],
      "hypothetical_question": "如何使用DolphinDB的cachedTable功能实现MySQL与DolphinDB之间的数据同步？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/best_practices_for_log_monitoring.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/best_practices_for_log_monitoring.md",
      "start_line": 1,
      "end_line": 992,
      "summary": "本文介绍了如何在DolphinDB高可用集群中使用Loki、Promtail和Grafana构建高效的日志监控系统，包括部署配置、告警规则和常见问题解决方案。",
      "keywords": [
        "DolphinDB",
        "日志监控",
        "Loki",
        "Promtail",
        "Grafana"
      ],
      "hypothetical_question": "如何在DolphinDB高可用集群中配置Loki、Promtail和Grafana进行日志监控？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/best_practices_for_multi_factor.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/best_practices_for_multi_factor.md",
      "start_line": 1,
      "end_line": 458,
      "summary": "本文介绍了中高频多因子库存储的最佳实践，通过对比窄表和宽表模式在不同硬件配置下的性能，推荐使用窄表模式进行存储。",
      "keywords": [
        "中高频多因子",
        "窄表模式",
        "宽表模式",
        "DolphinDB",
        "存储方案"
      ],
      "hypothetical_question": "在中高频多因子库存储场景中，窄表模式和宽表模式哪种更优？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/campisi.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/campisi.md",
      "start_line": 1,
      "end_line": 312,
      "summary": "本文介绍了基于DolphinDB实现的Campisi绩效归因模型，详细解释了其原理、实现步骤、函数使用方法及性能测试。",
      "keywords": [
        "Campisi模型",
        "绩效归因",
        "DolphinDB",
        "债券基金",
        "收益分解"
      ],
      "hypothetical_question": "如何使用DolphinDB实现Campisi绩效归因模型来分析债券基金的收益来源？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/best_practice_for_factor_calculation.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/best_practice_for_factor_calculation.md",
      "start_line": 1,
      "end_line": 1023,
      "summary": "本文详细介绍了使用DolphinDB进行因子计算的最佳实践，包括因子挖掘、存储、计算、回测和工程化管理等方面的内容。",
      "keywords": [
        "因子计算",
        "DolphinDB",
        "量化交易",
        "流批一体",
        "工程化管理"
      ],
      "hypothetical_question": "如何使用DolphinDB进行高效的因子计算和存储？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/brinson.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/brinson.md",
      "start_line": 1,
      "end_line": 236,
      "summary": "本文介绍了基于 DolphinDB 的 Brinson 绩效归因模型的实现和应用，详细解释了 Brinson 模型的原理、归因方式、多期处理及行业维度分析，并提供了函数使用方法和性能测试结果。",
      "keywords": [
        "Brinson 模型",
        "绩效归因",
        "DolphinDB",
        "资产配置",
        "多期归因"
      ],
      "hypothetical_question": "如何在 DolphinDB 中实现 Brinson 绩效归因模型？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/clear_cache.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/clear_cache.md",
      "start_line": 1,
      "end_line": 566,
      "summary": "本文详细介绍了DolphinDB中各种数据库缓存的类型及其清理机制，包括维度表缓存、共享表变量、OLAP引擎读缓存、TSDB引擎写入缓存等，并提供了相应的清理函数和配置项说明。",
      "keywords": [
        "DolphinDB",
        "数据库缓存",
        "清理机制",
        "OLAP引擎",
        "TSDB引擎"
      ],
      "hypothetical_question": "如何在DolphinDB中清理不同类型的数据库缓存？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/best_practices_for_partitioned_storage.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/best_practices_for_partitioned_storage.md",
      "start_line": 1,
      "end_line": 1175,
      "summary": "本文介绍了DolphinDB中金融数据的分区存储最佳实践，包括股票、期权、期货和银行间债券等数据的存储方案和示例脚本。",
      "keywords": [
        "DolphinDB",
        "金融数据",
        "分区存储",
        "TSDB",
        "OLAP"
      ],
      "hypothetical_question": "如何在DolphinDB中为金融数据设计最佳的分区存储方案？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/cloud_deployment_with_terraform.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/cloud_deployment_with_terraform.md",
      "start_line": 1,
      "end_line": 154,
      "summary": "该文档详细介绍了如何使用Terraform在AWS上部署DolphinDB集群，包括配置文件说明、Terraform命令执行步骤以及常见问题解答。",
      "keywords": [
        "Terraform",
        "DolphinDB",
        "AWS",
        "集群部署",
        "配置文件"
      ],
      "hypothetical_question": "如何使用Terraform在AWS上部署DolphinDB集群？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/cluster_monitor.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/cluster_monitor.md",
      "start_line": 1,
      "end_line": 86,
      "summary": "该文本片段详细介绍了如何配置Alertmanager和Prometheus以实现企业微信告警功能，包括告警规则、消息模板的编写以及启动Alertmanager的步骤。",
      "keywords": [
        "Alertmanager",
        "Prometheus",
        "企业微信告警",
        "告警规则",
        "消息模板"
      ],
      "hypothetical_question": "如何配置Alertmanager和Prometheus以实现企业微信告警功能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/cluster_scaleout_perf_test.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/cluster_scaleout_perf_test.md",
      "start_line": 1,
      "end_line": 243,
      "summary": "DolphinDB集群水平扩展性能测试展示了其在写入、读取和计算三方面的线性扩展能力。",
      "keywords": [
        "DolphinDB",
        "水平扩展",
        "性能测试",
        "分布式数据库"
      ],
      "hypothetical_question": "DolphinDB集群在水平扩展时，其写入、读取和计算性能如何变化？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/cpp_data_io.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/cpp_data_io.md",
      "start_line": 1,
      "end_line": 239,
      "summary": "DolphinDB C++ API数据读写指南，介绍了如何使用C++ API与DolphinDB server交互，包括标量类型、Vector和Table的创建、读写及操作方法。",
      "keywords": [
        "DolphinDB",
        "C++ API",
        "数据读写",
        "Vector",
        "Table"
      ],
      "hypothetical_question": "如何使用DolphinDB C++ API进行数据读写操作？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/csap.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/csap.md",
      "start_line": 1,
      "end_line": 459,
      "summary": "DolphinDB CSAP 因子指标库教程，详细介绍了195个金融因子的定义、实现方法、使用说明及正确性验证。",
      "keywords": [
        "CSAP因子",
        "DolphinDB",
        "金融分析",
        "资产定价",
        "因子计算"
      ],
      "hypothetical_question": "如何在DolphinDB中使用CSAP因子指标库进行金融分析？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/data_ETL.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/data_ETL.md",
      "start_line": 1,
      "end_line": 250,
      "summary": "本文介绍了如何利用DolphinDB的分布式计算能力优化ETL过程，显著提升数据清洗性能。",
      "keywords": [
        "DolphinDB",
        "ETL",
        "数据清洗",
        "分布式计算",
        "性能优化"
      ],
      "hypothetical_question": "如何使用DolphinDB优化ETL过程以提高数据清洗性能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/database.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/database.md",
      "start_line": 1,
      "end_line": 605,
      "summary": "DolphinDB分区数据库的设计原则、分区类型、数据导入方法及查询优化策略。",
      "keywords": [
        "分区数据库",
        "DolphinDB",
        "数据导入",
        "查询优化",
        "分区类型"
      ],
      "hypothetical_question": "如何在DolphinDB中设计和优化分区数据库以提高查询性能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/cta_strategy_implementation_and_backtesting.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/cta_strategy_implementation_and_backtesting.md",
      "start_line": 1,
      "end_line": 931,
      "summary": "本教程详细介绍了如何使用DolphinDB的CEP引擎实现股票中高频CTA策略，包括策略逻辑、功能模块、代码实现、结果检视、参数寻优及并行计算加速回测的方法。",
      "keywords": [
        "DolphinDB",
        "CEP引擎",
        "CTA策略",
        "并行回测",
        "参数寻优"
      ],
      "hypothetical_question": "如何使用DolphinDB的CEP引擎实现股票中高频CTA策略并进行并行回测？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/data_interface_for_redash.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/data_interface_for_redash.md",
      "start_line": 1,
      "end_line": 79,
      "summary": "本文介绍了如何在Redash中配置JSON和URL数据源来连接DolphinDB，并提供了详细的配置步骤和注意事项。",
      "keywords": [
        "Redash",
        "DolphinDB",
        "JSON数据源",
        "URL数据源",
        "BI工具"
      ],
      "hypothetical_question": "如何在Redash中配置DolphinDB数据源？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/data_import_details.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/data_import_details.md",
      "start_line": 1,
      "end_line": 422,
      "summary": "本文介绍了使用 DolphinDB 进行数据导入时最容易忽略的十个细节，包括数据格式、数据类型、导入速率、数据预处理、连接失败、分区冲突等方面，并提供了相应的解决方案。",
      "keywords": [
        "DolphinDB",
        "数据导入",
        "数据类型",
        "分区冲突",
        "ODBC"
      ],
      "hypothetical_question": "在使用 DolphinDB 进行数据导入时，有哪些容易被忽略的细节需要注意？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/ddb_comparison_rules_of_time_types.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/ddb_comparison_rules_of_time_types.md",
      "start_line": 1,
      "end_line": 362,
      "summary": "本文详细介绍了DolphinDB中时间类型的比较规则，包括时间类型的转换、常规比较以及分区剪枝规则。",
      "keywords": [
        "DolphinDB",
        "时间类型",
        "比较规则",
        "分区剪枝"
      ],
      "hypothetical_question": "DolphinDB中时间类型的比较规则有哪些？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/database_and_table_creation_wizard.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/database_and_table_creation_wizard.md",
      "start_line": 1,
      "end_line": 197,
      "summary": "DolphinDB Web界面提供了物联网和金融场景下的库表创建向导，帮助用户根据业务需求和数据特性设计数据库结构和分区策略。",
      "keywords": [
        "DolphinDB",
        "时序数据库",
        "物联网",
        "金融场景",
        "库表创建"
      ],
      "hypothetical_question": "如何使用DolphinDB Web界面创建物联网和金融场景的数据库表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/data_sync_among_clusters.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/data_sync_among_clusters.md",
      "start_line": 1,
      "end_line": 187,
      "summary": "DolphinDB提供了离线备份恢复和在线连接两种方式实现集群间DFS数据库的同步，并详细介绍了各自的实现步骤、示例及优缺点对比。",
      "keywords": [
        "DolphinDB",
        "数据库同步",
        "备份恢复",
        "在线同步",
        "集群"
      ],
      "hypothetical_question": "如何在DolphinDB中实现不同集群间DFS数据库的数据同步？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/data_replay.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/data_replay.md",
      "start_line": 1,
      "end_line": 234,
      "summary": "DolphinDB的数据回放功能允许用户将历史数据以实时流数据的形式回放，支持单表和多表回放，并提供了多种订阅和消费方式，适用于量化策略的回测和实盘交易。",
      "keywords": [
        "数据回放",
        "流数据",
        "量化策略",
        "回测",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用历史数据进行实时流数据回放以支持量化策略的回测和实盘交易？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/datax_writer.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/datax_writer.md",
      "start_line": 1,
      "end_line": 374,
      "summary": "介绍如何使用DataX的dolphindbwriter插件将数据从不同数据源同步到DolphinDB，包括使用场景、配置方法和示例。",
      "keywords": [
        "DataX",
        "DolphinDB",
        "数据同步",
        "dolphindbwriter",
        "增量导入"
      ],
      "hypothetical_question": "如何使用DataX将数据从Oracle同步到DolphinDB？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/dashboard_tutorial.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/dashboard_tutorial.md",
      "start_line": 1,
      "end_line": 1580,
      "summary": "DolphinDB数据面板（Dashboard）是一个强大的数据可视化和分析工具，提供了多种图表类型、数据源配置、变量管理和权限控制等功能，帮助用户直观地理解和分析数据。",
      "keywords": [
        "数据面板",
        "可视化",
        "DolphinDB",
        "图表",
        "数据源"
      ],
      "hypothetical_question": "如何使用DolphinDB数据面板创建和配置数据可视化图表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/database_and_table_creation_details.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/database_and_table_creation_details.md",
      "start_line": 1,
      "end_line": 583,
      "summary": "本文详细介绍了在DolphinDB中建库建表时容易忽略的十个关键细节，包括分区类型选择、分区字段设置、分区粒度控制、引擎选择等，旨在帮助用户优化数据库性能。",
      "keywords": [
        "DolphinDB",
        "分区策略",
        "TSDB引擎",
        "OLAP引擎",
        "分区粒度"
      ],
      "hypothetical_question": "在DolphinDB中建库建表时有哪些容易忽略的关键细节？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/ddb_airflow.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/ddb_airflow.md",
      "start_line": 1,
      "end_line": 814,
      "summary": "本教程介绍了如何将Python Airflow与DolphinDB高性能时序数据库结合使用，通过Airflow管理DolphinDB的ETL作业，包括数据清洗、转换、加载以及K线合成等操作。",
      "keywords": [
        "DolphinDB",
        "Airflow",
        "ETL",
        "时序数据库",
        "K线合成"
      ],
      "hypothetical_question": "如何利用Python Airflow管理DolphinDB的ETL作业？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/ddb_str_app_iot.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/ddb_str_app_iot.md",
      "start_line": 1,
      "end_line": 195,
      "summary": "本文介绍了如何使用DolphinDB的响应式状态引擎和会话窗口引擎实时监测工业物联网中传感器状态变化和数据丢失。",
      "keywords": [
        "DolphinDB",
        "传感器状态监测",
        "响应式状态引擎",
        "会话窗口引擎",
        "工业物联网"
      ],
      "hypothetical_question": "如何使用DolphinDB实时监测工业物联网中传感器的状态变化和数据丢失？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/ddb_sql_cases.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/ddb_sql_cases.md",
      "start_line": 1,
      "end_line": 1209,
      "summary": "本教程通过多个SQL编写案例，展示了如何优化DolphinDB SQL脚本以提升性能，包括条件过滤、分布式表查询、分组计算等场景的优化技巧。",
      "keywords": [
        "DolphinDB",
        "SQL优化",
        "性能对比",
        "分布式查询",
        "分组计算"
      ],
      "hypothetical_question": "如何在DolphinDB中优化SQL查询性能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/ddb_str_app_iot_2.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/ddb_str_app_iot_2.md",
      "start_line": 1,
      "end_line": 195,
      "summary": "本文介绍了如何使用DolphinDB的响应式状态引擎和会话窗口引擎实时监测工业物联网中传感器状态变化和数据丢失。",
      "keywords": [
        "DolphinDB",
        "传感器状态监测",
        "响应式状态引擎",
        "会话窗口引擎",
        "工业物联网"
      ],
      "hypothetical_question": "如何使用DolphinDB实时监测工业物联网中传感器的状态变化和数据丢失？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/displaying_the_dolphindb_k-line_with_klinechart.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/displaying_the_dolphindb_k-line_with_klinechart.md",
      "start_line": 1,
      "end_line": 370,
      "summary": "介绍如何使用 DolphinDB JavaScript API 与 KLineChart 前端工具对接，展示 DolphinDB 存储的 K 线数据。",
      "keywords": [
        "DolphinDB",
        "KLineChart",
        "JavaScript API",
        "K线数据",
        "数据可视化"
      ],
      "hypothetical_question": "如何使用 DolphinDB JavaScript API 和 KLineChart 展示 K 线数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/ddb_telegraf_grafana.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/ddb_telegraf_grafana.md",
      "start_line": 1,
      "end_line": 78,
      "summary": "该文档描述了如何配置DolphinDB以支持流数据处理，包括创建持久化流数据表、订阅数据并进行流计算，以及使用Telegraf和Grafana进行监控和预警。",
      "keywords": [
        "DolphinDB",
        "流数据处理",
        "Telegraf",
        "Grafana",
        "监控预警"
      ],
      "hypothetical_question": "如何配置DolphinDB以支持流数据处理并与Telegraf和Grafana集成进行监控和预警？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/docker-compose_high_cluster.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/docker-compose_high_cluster.md",
      "start_line": 1,
      "end_line": 360,
      "summary": "本文介绍了如何使用Docker Compose部署DolphinDB多容器普通集群和高可用集群，包括环境准备、集群结构、快速体验、生产环境部署及常见问题解决方案。",
      "keywords": [
        "Docker Compose",
        "DolphinDB",
        "高可用集群"
      ],
      "hypothetical_question": "如何使用Docker Compose部署DolphinDB高可用集群？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/debezium_kafka_real_time_synchronization_of_oracle_11g_data.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/debezium_kafka_real_time_synchronization_of_oracle_11g_data.md",
      "start_line": 1,
      "end_line": 884,
      "summary": "该文档详细介绍了如何使用Debezium和Kafka实时同步Oracle 11g数据到DolphinDB的运维操作手册，包括工具准备、同步任务管理、运维检查和数据校验等内容。",
      "keywords": [
        "Debezium",
        "Kafka",
        "Oracle 11g",
        "DolphinDB",
        "数据同步"
      ],
      "hypothetical_question": "如何运维Debezium和Kafka实时同步Oracle 11g数据到DolphinDB？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/dolphindb_user_guide.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/dolphindb_user_guide.md",
      "start_line": 1,
      "end_line": 95,
      "summary": "DolphinDB安装使用指南，包括下载安装、配置单机/多机集群、功能应用场景及常见问题解决方案。",
      "keywords": [
        "DolphinDB",
        "安装指南",
        "集群部署",
        "高可用",
        "权限管理"
      ],
      "hypothetical_question": "如何安装和配置DolphinDB数据库系统？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/dolphindb_update.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/dolphindb_update.md",
      "start_line": 1,
      "end_line": 434,
      "summary": "本文详细介绍了DolphinDB中OLAP和TSDB存储引擎的数据更新原理、实验验证及性能对比分析。",
      "keywords": [
        "DolphinDB",
        "OLAP",
        "TSDB",
        "数据更新",
        "性能分析"
      ],
      "hypothetical_question": "DolphinDB中OLAP和TSDB存储引擎的数据更新原理及性能对比是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/docker_single_deployment.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/docker_single_deployment.md",
      "start_line": 1,
      "end_line": 447,
      "summary": "本文详细介绍了如何使用Docker部署DolphinDB单机服务，包括环境准备、快速体验、生产环境部署建议及常见问题解决方案。",
      "keywords": [
        "Docker",
        "DolphinDB",
        "部署",
        "单机服务",
        "容器"
      ],
      "hypothetical_question": "如何使用Docker部署DolphinDB单机服务？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/edge_to_cloud.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/edge_to_cloud.md",
      "start_line": 1,
      "end_line": 333,
      "summary": "DolphinDB 实现边到云的实时数据汇聚方案及其性能评估。",
      "keywords": [
        "DolphinDB",
        "实时数据同步",
        "边到云",
        "流处理",
        "性能评估"
      ],
      "hypothetical_question": "如何利用 DolphinDB 实现边到云的实时数据同步？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/e6_97_a0_e6_a0_87_e9_a2_9810.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/e6_97_a0_e6_a0_87_e9_a2_9810.md",
      "start_line": 1,
      "end_line": 5,
      "summary": "文档包含登录管理标题和浙江智臾科技有限公司的版权信息。",
      "keywords": [
        "登录管理",
        "浙江智臾科技",
        "版权信息"
      ],
      "hypothetical_question": "DolphinDB文档中关于登录管理和版权信息的内容是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/dolphindb_tensor_libtorch_tutorial.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/dolphindb_tensor_libtorch_tutorial.md",
      "start_line": 1,
      "end_line": 183,
      "summary": "该文档介绍了如何在DolphinDB中使用LibTorch插件进行模型推理，包括Tensor数据类型转换、基础接口使用说明以及一个股票收盘价预测的案例演示。",
      "keywords": [
        "DolphinDB",
        "LibTorch",
        "Tensor",
        "模型推理",
        "股票预测"
      ],
      "hypothetical_question": "如何在DolphinDB中使用LibTorch插件进行模型推理？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/earthquake_prediction_ddb_ml.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/earthquake_prediction_ddb_ml.md",
      "start_line": 1,
      "end_line": 409,
      "summary": "本文介绍了基于DolphinDB的地震波形数据异常检测方案，包括业务场景、相关算法、环境准备和实现步骤。",
      "keywords": [
        "地震预测",
        "波形数据",
        "DolphinDB",
        "异常检测",
        "深度学习"
      ],
      "hypothetical_question": "如何使用DolphinDB进行地震波形数据的异常检测？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/dolphinscheduler_integration.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/dolphinscheduler_integration.md",
      "start_line": 1,
      "end_line": 809,
      "summary": "本文介绍了如何将DolphinDB与DolphinScheduler集成，通过DolphinScheduler调度DolphinDB的ETL任务，包括安装部署、任务调度、数据校验及常见问题解答。",
      "keywords": [
        "DolphinDB",
        "DolphinScheduler",
        "ETL",
        "任务调度",
        "数据集成"
      ],
      "hypothetical_question": "如何将DolphinDB与DolphinScheduler集成以调度ETL任务？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/efficient_power_trading_solutions.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/efficient_power_trading_solutions.md",
      "start_line": 1,
      "end_line": 253,
      "summary": "本文介绍了如何利用DolphinDB构建高效的电力交易行情数据存储与清洗解决方案，以应对电力交易市场中的数据管理挑战。",
      "keywords": [
        "电力交易",
        "量化交易",
        "DolphinDB",
        "数据清洗",
        "时序数据库"
      ],
      "hypothetical_question": "如何利用DolphinDB构建高效的电力交易行情数据存储与清洗解决方案？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/faultAnalysis.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/faultAnalysis.md",
      "start_line": 1,
      "end_line": 258,
      "summary": "DolphinDB历史数据回放功能在物联网设备故障分析中的应用，通过回放框架实现严格时序的数据复现，助力故障诊断。",
      "keywords": [
        "DolphinDB",
        "历史数据回放",
        "物联网",
        "故障分析",
        "数控机床"
      ],
      "hypothetical_question": "如何使用DolphinDB的历史数据回放功能进行物联网设备故障分析？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/earthquake_prediction_ddb_ml_2.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/earthquake_prediction_ddb_ml_2.md",
      "start_line": 1,
      "end_line": 409,
      "summary": "本文介绍了基于DolphinDB的地震波形数据预测方案，包括业务场景说明、相关算法介绍、环境准备、方案实现及附录内容。",
      "keywords": [
        "地震预测",
        "波形数据",
        "DolphinDB",
        "深度学习",
        "异常检测"
      ],
      "hypothetical_question": "如何使用DolphinDB进行地震波形数据的异常检测和预测？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/empyrical.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/empyrical.md",
      "start_line": 1,
      "end_line": 418,
      "summary": "DolphinDB Empyrical模块是一个用于计算金融风险和绩效归因指标的工具，提供了与Python Empyrical库类似的功能，但在性能和功能上进行了优化和扩展。",
      "keywords": [
        "DolphinDB",
        "Empyrical",
        "金融风险",
        "绩效归因",
        "Python"
      ],
      "hypothetical_question": "DolphinDB Empyrical模块提供了哪些金融风险和绩效归因指标的计算功能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/ficc_func_uasge_and_performance.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/ficc_func_uasge_and_performance.md",
      "start_line": 1,
      "end_line": 836,
      "summary": "DolphinDB FICC固收系列函数的使用示例及性能测试，涵盖估值定价、风险管理、曲线拟合等功能。",
      "keywords": [
        "FICC",
        "固收函数",
        "估值定价",
        "风险管理",
        "曲线拟合"
      ],
      "hypothetical_question": "DolphinDB的FICC固收系列函数有哪些功能及性能如何？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/exchdata_exchange_historical_stock_data_auto_import_module_tutorial.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/exchdata_exchange_historical_stock_data_auto_import_module_tutorial.md",
      "start_line": 1,
      "end_line": 550,
      "summary": "DolphinDB ExchData模块提供自动化导入沪深交易所Level-2历史股票数据的功能，包括数据表结构、数据库创建、数据导入、校验及异常处理。",
      "keywords": [
        "DolphinDB",
        "ExchData模块",
        "Level-2行情数据",
        "数据导入",
        "沪深交易所"
      ],
      "hypothetical_question": "如何使用DolphinDB ExchData模块自动化导入沪深交易所Level-2历史股票数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/financial_mock_data_generation_module.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/financial_mock_data_generation_module.md",
      "start_line": 1,
      "end_line": 977,
      "summary": "DolphinDB金融Mock数据生成模块提供了多种金融数据类型的模拟生成和数据库表创建功能，用于性能测试和基础功能体验。",
      "keywords": [
        "DolphinDB",
        "金融Mock数据",
        "性能测试",
        "数据库表",
        "模拟数据生成"
      ],
      "hypothetical_question": "如何使用DolphinDB生成金融Mock数据并进行性能测试？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/forecast_taxi_trip_dura.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/forecast_taxi_trip_dura.md",
      "start_line": 1,
      "end_line": 333,
      "summary": "本文介绍了如何使用DolphinDB进行出租车行程时间预测，包括数据预处理、特征工程、模型训练（PCA、KMeans、XGBoost）以及实时预测的流数据处理框架。",
      "keywords": [
        "DolphinDB",
        "出租车行程时间预测",
        "机器学习",
        "流数据处理",
        "XGBoost"
      ],
      "hypothetical_question": "如何使用DolphinDB进行出租车行程时间的预测和实时数据处理？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/forecast_taxi_trip_dura_2.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/forecast_taxi_trip_dura_2.md",
      "start_line": 1,
      "end_line": 333,
      "summary": "本文介绍了如何使用DolphinDB进行纽约出租车行程时间的预测，包括数据预处理、特征工程、模型训练及实时预测流程。",
      "keywords": [
        "DolphinDB",
        "出租车行程时间预测",
        "XGBoost",
        "流数据处理",
        "机器学习"
      ],
      "hypothetical_question": "如何使用DolphinDB预测纽约出租车的行程时间？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/ficc_funcs_application.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/ficc_funcs_application.md",
      "start_line": 1,
      "end_line": 648,
      "summary": "本教程详细介绍了DolphinDB在FICC（固定收益、外汇和大宗商品）业务中的应用，包括曲线拟合、估值定价和风险计量函数的使用方法及具体案例。",
      "keywords": [
        "FICC",
        "曲线拟合",
        "估值定价",
        "风险计量",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB在FICC业务中有哪些应用场景和功能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/general_computing.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/general_computing.md",
      "start_line": 1,
      "end_line": 242,
      "summary": "DolphinDB的通用计算框架支持分布式计算，包括数据源概念、Map-Reduce函数（如mr和imr）以及数据源相关函数（如sqlDS、repartitionDS和textChunkDS），用于高效处理分布式数据。",
      "keywords": [
        "DolphinDB",
        "分布式计算",
        "Map-Reduce",
        "数据源",
        "sqlDS"
      ],
      "hypothetical_question": "如何在DolphinDB中使用Map-Reduce框架进行分布式计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/fund_factor_contrasted_by_py.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/fund_factor_contrasted_by_py.md",
      "start_line": 1,
      "end_line": 682,
      "summary": "本教程展示了如何使用DolphinDB和Python计算基金日频因子，并对比了两者在不同CPU核数下的计算性能，结果表明DolphinDB在性能上显著优于Python。",
      "keywords": [
        "基金日频因子",
        "DolphinDB",
        "Python",
        "性能对比",
        "计算效率"
      ],
      "hypothetical_question": "DolphinDB和Python在计算基金日频因子时的性能差异如何？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/futures_minute_frequency_cta_strategy_backtest_example.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/futures_minute_frequency_cta_strategy_backtest_example.md",
      "start_line": 1,
      "end_line": 228,
      "summary": "本文介绍了如何使用DolphinDB实现期货分钟频CTA策略的回测，包括策略逻辑、技术指标计算、回测配置及性能测试。",
      "keywords": [
        "DolphinDB",
        "CTA策略",
        "回测",
        "期货",
        "技术指标"
      ],
      "hypothetical_question": "如何使用DolphinDB进行期货分钟频CTA策略的回测？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/generate_large_scale_statistics_with_summary.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/generate_large_scale_statistics_with_summary.md",
      "start_line": 1,
      "end_line": 178,
      "summary": "DolphinDB的summary函数用于生成大规模数据的统计信息，包括平均值、标准差、百分位数等，支持内存表、DFS表和SQL数据源，并展示了与pandas的性能对比及实现原理。",
      "keywords": [
        "summary函数",
        "大规模数据统计",
        "百分位数计算",
        "DolphinDB",
        "性能对比"
      ],
      "hypothetical_question": "如何在DolphinDB中使用summary函数生成大规模数据的统计信息？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/function_mapping_py.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/function_mapping_py.md",
      "start_line": 1,
      "end_line": 287,
      "summary": "本文档提供了Python内置函数及多个常用库（如numpy、pandas、scipy等）到DolphinDB函数的映射关系。",
      "keywords": [
        "函数映射",
        "Python",
        "DolphinDB"
      ],
      "hypothetical_question": "Python中的numpy、pandas等库的函数在DolphinDB中对应的函数是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/func_progr_cases.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/func_progr_cases.md",
      "start_line": 1,
      "end_line": 1170,
      "summary": "DolphinDB函数化编程案例教程，介绍了高阶函数在数据导入、Lambda表达式、金融场景、机器学习等领域的应用。",
      "keywords": [
        "DolphinDB",
        "函数化编程",
        "高阶函数",
        "数据导入",
        "机器学习"
      ],
      "hypothetical_question": "DolphinDB中如何使用高阶函数进行数据导入和金融场景计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/hf_factor_streaming.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/hf_factor_streaming.md",
      "start_line": 1,
      "end_line": 526,
      "summary": "DolphinDB 实时计算高频因子的方法与配置指南。",
      "keywords": [
        "DolphinDB",
        "高频因子",
        "实时计算",
        "流数据",
        "状态因子"
      ],
      "hypothetical_question": "如何使用 DolphinDB 进行实时高频因子计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/gplearn.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/gplearn.md",
      "start_line": 1,
      "end_line": 162,
      "summary": "Shark GPLearn 是一个利用 GPU 加速和遗传算法进行符号回归的框架，旨在高效挖掘金融因子并处理三维数据。",
      "keywords": [
        "Shark GPLearn",
        "遗传算法",
        "GPU加速",
        "金融因子",
        "三维数据处理"
      ],
      "hypothetical_question": "Shark GPLearn 如何改进传统 gplearn 在金融因子挖掘中的效率与功能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/ha_cluster_deployment.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/ha_cluster_deployment.md",
      "start_line": 1,
      "end_line": 1154,
      "summary": "DolphinDB高可用集群的部署、配置、升级及管理指南。",
      "keywords": [
        "DolphinDB",
        "高可用集群",
        "部署",
        "配置",
        "升级"
      ],
      "hypothetical_question": "如何在Linux操作系统上部署和配置DolphinDB高可用集群？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/haStreaming.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/haStreaming.md",
      "start_line": 1,
      "end_line": 199,
      "summary": "DolphinDB流数据高可用功能基于Raft协议实现，支持Broker、生产者和消费者的高可用，确保流数据服务不中断，并提供了性能优化建议。",
      "keywords": [
        "DolphinDB",
        "流数据高可用",
        "Raft协议",
        "Broker",
        "性能优化"
      ],
      "hypothetical_question": "DolphinDB如何实现流数据的高可用功能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/gray_scale_upgrade_ha.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/gray_scale_upgrade_ha.md",
      "start_line": 1,
      "end_line": 184,
      "summary": "本教程详细介绍了DolphinDB高可用集群的灰度升级步骤，包括版本兼容性检查、升级准备、节点升级和验证过程。",
      "keywords": [
        "高可用集群",
        "灰度升级",
        "DolphinDB",
        "版本兼容性",
        "元数据备份"
      ],
      "hypothetical_question": "如何进行DolphinDB高可用集群的灰度升级？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/haProxy_best_practices.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/haProxy_best_practices.md",
      "start_line": 1,
      "end_line": 381,
      "summary": "本教程详细介绍了如何在 DolphinDB 高可用集群中使用 HAProxy 实现负载均衡，包括 HAProxy 的安装、配置、部署以及高可用性设置。",
      "keywords": [
        "HAProxy",
        "负载均衡",
        "DolphinDB",
        "高可用集群",
        "Keepalived"
      ],
      "hypothetical_question": "如何在 DolphinDB 高可用集群中配置和使用 HAProxy 实现负载均衡？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/hf_factor_streaming_2.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/hf_factor_streaming_2.md",
      "start_line": 1,
      "end_line": 526,
      "summary": "DolphinDB教程详细介绍了如何使用其流计算系统实时计算高频因子，包括无状态因子、滑动窗口因子和状态因子的计算方法，以及提高计算效率和调试的技巧。",
      "keywords": [
        "DolphinDB",
        "高频因子",
        "流计算",
        "实时计算",
        "状态因子"
      ],
      "hypothetical_question": "如何使用DolphinDB进行高频因子的实时计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/getting_started_with_cep_engine.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/getting_started_with_cep_engine.md",
      "start_line": 1,
      "end_line": 587,
      "summary": "本文介绍了DolphinDB的复杂事件处理（CEP）引擎，并通过两个案例展示了如何利用CEP引擎实现初级高频量价因子策略和实时监控股价。",
      "keywords": [
        "CEP引擎",
        "高频交易",
        "量价因子",
        "DolphinDB",
        "事件监听"
      ],
      "hypothetical_question": "如何使用DolphinDB的CEP引擎实现高频量价因子策略？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/how_to_handle_crash.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/how_to_handle_crash.md",
      "start_line": 1,
      "end_line": 255,
      "summary": "本教程详细介绍了DolphinDB节点宕机的可能原因、排查方法及解决方案，包括日志分析、操作系统日志检查、core文件生成与调试，以及避免宕机的建议。",
      "keywords": [
        "节点宕机",
        "日志分析",
        "OOM killer",
        "core文件",
        "gdb调试"
      ],
      "hypothetical_question": "DolphinDB节点宕机时应该如何排查和解决问题？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/high_freq_data_storage_and_analysis.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/high_freq_data_storage_and_analysis.md",
      "start_line": 1,
      "end_line": 420,
      "summary": "DolphinDB 提供了一套高效的工业试验平台高频数据存储与处理解决方案，支持多源异构数据接入、实时异常检测和复杂计算分析。",
      "keywords": [
        "DolphinDB",
        "高频数据",
        "工业试验平台",
        "实时计算",
        "数据存储"
      ],
      "hypothetical_question": "如何利用 DolphinDB 实现工业试验平台高频数据的存储和处理分析？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/httpclient_msg_case.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/httpclient_msg_case.md",
      "start_line": 1,
      "end_line": 813,
      "summary": "本文介绍了如何利用DolphinDB的httpClient插件通过httpGet、httpPost和sendEmail函数实现企业微信、钉钉的消息发送以及邮件发送功能。",
      "keywords": [
        "DolphinDB",
        "httpClient插件",
        "企业微信",
        "钉钉",
        "邮件发送"
      ],
      "hypothetical_question": "如何在DolphinDB中使用httpClient插件发送企业微信、钉钉消息和邮件？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/hybrid_programming_paradigms.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/hybrid_programming_paradigms.md",
      "start_line": 1,
      "end_line": 774,
      "summary": "DolphinDB支持多种编程范式（向量化编程、SQL编程、命令式编程、函数化编程、远程过程调用编程和元编程），以高效处理大数据分析任务。",
      "keywords": [
        "DolphinDB",
        "编程范式",
        "大数据分析",
        "向量化编程",
        "SQL编程"
      ],
      "hypothetical_question": "DolphinDB支持哪些编程范式以优化大数据分析？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/import_data.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/import_data.md",
      "start_line": 1,
      "end_line": 575,
      "summary": "DolphinDB提供了多种数据导入方法，包括文本文件、二进制文件、HDF5接口和ODBC接口，并详细介绍了每种方法的使用场景和操作步骤。",
      "keywords": [
        "DolphinDB",
        "数据导入",
        "文本文件",
        "二进制文件",
        "HDF5"
      ],
      "hypothetical_question": "DolphinDB支持哪些数据导入方法及其具体操作步骤？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/import_csv.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/import_csv.md",
      "start_line": 1,
      "end_line": 833,
      "summary": "DolphinDB提供了多种灵活且高效的文本数据导入方法，包括自动识别数据格式、指定导入格式、并行导入、预处理及自定义导入等功能。",
      "keywords": [
        "DolphinDB",
        "文本数据导入",
        "并行导入",
        "数据预处理",
        "自定义导入"
      ],
      "hypothetical_question": "如何在DolphinDB中高效地导入和处理文本数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/interface_development.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/interface_development.md",
      "start_line": 1,
      "end_line": 168,
      "summary": "该文档介绍了如何使用DolphinDB的Python客户端进行二次封装，提供多种数据访问接口的示例代码，并涵盖其他语言如C++、Java、C#和JavaScript的实现。",
      "keywords": [
        "DolphinDB",
        "Python客户端",
        "数据访问接口",
        "二次封装",
        "API示例"
      ],
      "hypothetical_question": "如何在DolphinDB中使用Python客户端进行二次封装以提供多种数据访问接口？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/in_memory_table.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/in_memory_table.md",
      "start_line": 1,
      "end_line": 690,
      "summary": "DolphinDB 内存表详解，包括5种内存表的分类、使用场景、数据操作与表结构操作的异同，以及共享和分区的特点。",
      "keywords": [
        "DolphinDB",
        "内存表",
        "键值内存表",
        "流数据表",
        "MVCC内存表"
      ],
      "hypothetical_question": "DolphinDB 中有哪些类型的内存表，它们各自的特点和使用场景是什么？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/iot_anomaly_detection.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/iot_anomaly_detection.md",
      "start_line": 1,
      "end_line": 106,
      "summary": "DolphinDB 提供了流数据表和流计算引擎，包括异常检测引擎和自定义消息处理函数，用于实时检测物联网传感器数据的异常。",
      "keywords": [
        "DolphinDB",
        "异常检测",
        "流计算引擎",
        "物联网",
        "传感器数据"
      ],
      "hypothetical_question": "如何使用 DolphinDB 实现物联网传感器数据的实时异常检测？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/iot_demo.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/iot_demo.md",
      "start_line": 1,
      "end_line": 158,
      "summary": "DolphinDB 在工业物联网中的应用，包括数据特点、解决方案、案例实施和服务器部署。",
      "keywords": [
        "DolphinDB",
        "工业物联网",
        "时序数据库",
        "流计算",
        "Grafana"
      ],
      "hypothetical_question": "如何利用 DolphinDB 实现工业物联网中的实时数据处理和存储？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/insight_plugin.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/insight_plugin.md",
      "start_line": 1,
      "end_line": 350,
      "summary": "本文介绍了如何通过DolphinDB INSIGHT插件将实时行情数据写入分布式数据库，并实现节点启动时自动订阅INSIGHT实时行情。",
      "keywords": [
        "DolphinDB",
        "INSIGHT插件",
        "实时行情数据",
        "分布式数据库",
        "自动订阅"
      ],
      "hypothetical_question": "如何使用DolphinDB INSIGHT插件将实时行情数据写入分布式数据库并实现自动订阅？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/iot_query_case.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/iot_query_case.md",
      "start_line": 1,
      "end_line": 5,
      "summary": "附录部分包含DolphinDB和ClickHouse的脚本链接。",
      "keywords": [
        "附录",
        "DolphinDB",
        "ClickHouse",
        "脚本"
      ],
      "hypothetical_question": "在哪里可以找到DolphinDB和ClickHouse的脚本链接？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/iot_anomaly_detection_2.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/iot_anomaly_detection_2.md",
      "start_line": 1,
      "end_line": 106,
      "summary": "DolphinDB 提供了流数据表和流计算引擎用于实时处理传感器数据异常检测，包括使用异常检测引擎和自定义消息处理函数实现两种不同的报警需求。",
      "keywords": [
        "DolphinDB",
        "异常检测",
        "流计算引擎",
        "传感器数据",
        "实时报警"
      ],
      "hypothetical_question": "如何使用 DolphinDB 实现传感器数据的实时异常检测和报警？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/insight_plugin_orderbook_engine_application.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/insight_plugin_orderbook_engine_application.md",
      "start_line": 1,
      "end_line": 762,
      "summary": "本文介绍了如何使用DolphinDB INSIGHT插件和订单簿引擎实时合成1秒频订单簿快照，包括插件安装、流数据处理、分布式数据库存储及节点启动自动订阅的实现。",
      "keywords": [
        "DolphinDB",
        "INSIGHT插件",
        "订单簿引擎",
        "实时合成",
        "流数据处理"
      ],
      "hypothetical_question": "如何使用DolphinDB INSIGHT插件和订单簿引擎实时合成1秒频订单簿快照？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/jit.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/jit.md",
      "start_line": 1,
      "end_line": 694,
      "summary": "DolphinDB的JIT（即时编译）功能显著提高了for循环、while循环和if-else等语句的运行速度，适用于高频因子计算和实时流数据处理等场景。",
      "keywords": [
        "JIT",
        "DolphinDB",
        "性能优化"
      ],
      "hypothetical_question": "DolphinDB中的JIT功能如何提高脚本执行效率？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/iot_demo_2.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/iot_demo_2.md",
      "start_line": 1,
      "end_line": 158,
      "summary": "DolphinDB 提供工业物联网解决方案，通过分布式时序数据库、流计算引擎和内存数据库处理高频数据，实现实时计算和历史数据分析。",
      "keywords": [
        "DolphinDB",
        "工业物联网",
        "时序数据库",
        "流计算",
        "Grafana"
      ],
      "hypothetical_question": "如何利用 DolphinDB 处理工业物联网中的高频数据并进行实时计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/job_management_tutorial_2.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/job_management_tutorial_2.md",
      "start_line": 1,
      "end_line": 206,
      "summary": "DolphinDB中的作业管理包括同步作业和异步作业的创建、查询、取消以及调度策略，同时介绍了子任务分解、计算容错和计算节点的作用。",
      "keywords": [
        "作业管理",
        "同步作业",
        "异步作业",
        "子任务",
        "计算节点"
      ],
      "hypothetical_question": "DolphinDB中如何管理和调度不同类型的作业？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/job_management_tutorial.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/job_management_tutorial.md",
      "start_line": 1,
      "end_line": 206,
      "summary": "DolphinDB中的作业管理包括同步作业和异步作业的创建、查询、取消以及子任务分解、作业调度、计算容错和资源均衡等核心功能。",
      "keywords": [
        "同步作业",
        "异步作业",
        "子任务",
        "作业调度",
        "计算容错"
      ],
      "hypothetical_question": "DolphinDB中如何管理和调度同步作业和异步作业？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/k.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/k.md",
      "start_line": 1,
      "end_line": 121,
      "summary": "该文本片段介绍了DolphinDB中订阅流数据、配置DashBoard面板、清理流数据环境、实时计算性能测试以及流批一体K线合成的详细步骤和注意事项。",
      "keywords": [
        "订阅",
        "流数据",
        "K线合成",
        "性能测试",
        "清理环境"
      ],
      "hypothetical_question": "如何在DolphinDB中订阅流数据并清理流数据环境？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/iot_examples.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/iot_examples.md",
      "start_line": 1,
      "end_line": 1518,
      "summary": "本教程详细介绍了DolphinDB在物联网领域的应用，包括安装部署、分布式数据库设计、数据写入和查询、流计算和高可用测试等方面的常见问题、解决方案与注意事项。",
      "keywords": [
        "DolphinDB",
        "物联网",
        "分布式数据库",
        "流计算",
        "高可用"
      ],
      "hypothetical_question": "如何在DolphinDB中设计和优化物联网应用的分布式数据库？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/k8s_deployment.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/k8s_deployment.md",
      "start_line": 1,
      "end_line": 415,
      "summary": "本文详细介绍了如何在Kubernetes（K8S）环境中部署、管理和维护DolphinDB集群，包括创建集群、部署DolphinDB套件、连接集群、升级集群以及处理常见问题等步骤。",
      "keywords": [
        "Kubernetes",
        "DolphinDB",
        "部署",
        "集群管理",
        "容器化"
      ],
      "hypothetical_question": "如何在Kubernetes环境中部署和管理DolphinDB集群？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/k8s_deployment_in_AWS.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/k8s_deployment_in_AWS.md",
      "start_line": 1,
      "end_line": 373,
      "summary": "本教程详细介绍了如何在AWS上使用DolphinDB MGR部署和管理DolphinDB集群，包括环境准备、EKS集群创建、DolphinDB MGR安装及部署、可视化界面操作以及环境清理步骤。",
      "keywords": [
        "DolphinDB MGR",
        "AWS",
        "Kubernetes",
        "EKS",
        "部署"
      ],
      "hypothetical_question": "如何在AWS上使用DolphinDB MGR部署和管理DolphinDB集群？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/k_line_calculation.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/k_line_calculation.md",
      "start_line": 1,
      "end_line": 648,
      "summary": "本教程介绍了如何使用DolphinDB的FuturesOLHC模块基于期货快照行情数据计算分钟K线及主连行情，包括历史数据和实时数据的处理方法。",
      "keywords": [
        "期货快照行情",
        "分钟K线",
        "主连行情",
        "DolphinDB",
        "FuturesOLHC模块"
      ],
      "hypothetical_question": "如何使用DolphinDB基于期货快照行情数据计算分钟K线和主连行情？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/k8s_deployment_in_Aliyun.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/k8s_deployment_in_Aliyun.md",
      "start_line": 1,
      "end_line": 166,
      "summary": "该文档详细介绍了如何在阿里云上使用Terraform部署Kubernetes托管版集群，并配置StorageClass、安装DolphinDB MGR和集群，以及处理常见问题和销毁集群的步骤。",
      "keywords": [
        "Kubernetes",
        "阿里云",
        "Terraform",
        "DolphinDB",
        "StorageClass"
      ],
      "hypothetical_question": "如何在阿里云上使用Terraform部署Kubernetes托管版集群并配置DolphinDB？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/kdb_to_dolphindb.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/kdb_to_dolphindb.md",
      "start_line": 1,
      "end_line": 549,
      "summary": "本教程详细介绍了从kdb+迁移到DolphinDB的方法，包括两者的异同点、数据迁移步骤以及语法映射参考。",
      "keywords": [
        "kdb+",
        "DolphinDB",
        "迁移",
        "时序数据库",
        "语法映射"
      ],
      "hypothetical_question": "如何从kdb+迁移到DolphinDB？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/knn_iot.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/knn_iot.md",
      "start_line": 1,
      "end_line": 516,
      "summary": "本教程介绍如何使用DolphinDB的KNN算法构建回归模型，实现物联网实时数据异常率预警。",
      "keywords": [
        "物联网",
        "KNN算法",
        "异常率预警",
        "DolphinDB",
        "机器学习"
      ],
      "hypothetical_question": "如何使用DolphinDB的KNN算法进行物联网实时数据异常率预警？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/l2_stk_data_proc.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/l2_stk_data_proc.md",
      "start_line": 1,
      "end_line": 593,
      "summary": "本文介绍了如何使用DolphinDB高效存储和处理Level-2行情数据，包括历史批量因子计算和实时因子计算的实现方法。",
      "keywords": [
        "Level-2行情数据",
        "DolphinDB",
        "因子计算",
        "高频数据",
        "流式计算"
      ],
      "hypothetical_question": "如何使用DolphinDB处理Level-2行情数据并进行因子计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/knn_iot_2.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/knn_iot_2.md",
      "start_line": 1,
      "end_line": 516,
      "summary": "本教程介绍了如何使用DolphinDB的KNN算法构建回归模型，实现物联网实时数据异常率预警，并详细描述了数据处理流程、架构方案和实现细节。",
      "keywords": [
        "物联网",
        "KNN算法",
        "异常率预警",
        "DolphinDB",
        "机器学习"
      ],
      "hypothetical_question": "如何使用DolphinDB的KNN算法实现物联网实时数据异常率预警？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/macro_var_based_metaprogramming.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/macro_var_based_metaprogramming.md",
      "start_line": 1,
      "end_line": 389,
      "summary": "DolphinDB中基于宏变量的SQL元编程方法，用于动态生成SQL查询语句以提高编程效率和灵活性。",
      "keywords": [
        "元编程",
        "宏变量",
        "SQL查询",
        "DolphinDB",
        "动态字段"
      ],
      "hypothetical_question": "如何在DolphinDB中使用宏变量实现动态SQL查询的元编程？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/log_analysis_tool_user_manual.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/log_analysis_tool_user_manual.md",
      "start_line": 1,
      "end_line": 549,
      "summary": "DolphinDB日志分析工具使用手册，介绍如何通过该工具高效分析日志、实时监控日志、生成报表及自定义解析内容。",
      "keywords": [
        "DolphinDB",
        "日志分析",
        "实时监控",
        "报表生成",
        "自定义解析"
      ],
      "hypothetical_question": "如何使用DolphinDB日志分析工具进行高效的日志分析和实时监控？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/l2_snapshot_factor_calc_2.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/l2_snapshot_factor_calc_2.md",
      "start_line": 1,
      "end_line": 601,
      "summary": "本教程介绍如何使用DolphinDB快速搭建一个流批一体的Level-2快照数据因子计算平台，支持分钟因子和复杂因子的计算。",
      "keywords": [
        "DolphinDB",
        "Level-2快照数据",
        "因子计算平台",
        "流批一体",
        "量化交易"
      ],
      "hypothetical_question": "如何基于DolphinDB搭建一个流批一体的Level-2快照数据因子计算平台？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/l2_snapshot_factor_calc.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/l2_snapshot_factor_calc.md",
      "start_line": 1,
      "end_line": 601,
      "summary": "本教程介绍如何使用 DolphinDB 快速搭建一个流批一体的 Level-2 快照数据因子计算平台，支持分钟因子和复杂因子的实时计算与部署。",
      "keywords": [
        "DolphinDB",
        "Level-2 快照数据",
        "因子计算",
        "流批一体",
        "量化交易"
      ],
      "hypothetical_question": "如何基于 DolphinDB 搭建一个流批一体的 Level-2 快照数据因子计算平台？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/memory_management.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/memory_management.md",
      "start_line": 1,
      "end_line": 461,
      "summary": "DolphinDB的内存管理机制、配置参数、高效使用建议及常见问题解决方案。",
      "keywords": [
        "内存管理",
        "TCMalloc",
        "maxMemSize",
        "Cache Engine",
        "流数据"
      ],
      "hypothetical_question": "DolphinDB如何进行内存管理以及如何优化内存使用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/l2_stk_data_proc_2.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/l2_stk_data_proc_2.md",
      "start_line": 1,
      "end_line": 593,
      "summary": "本文介绍了如何使用DolphinDB高效存储和处理Level-2行情数据，包括批量因子计算和实时流式计算的实现方法。",
      "keywords": [
        "Level-2行情数据",
        "DolphinDB",
        "因子计算",
        "流式计算",
        "高频数据"
      ],
      "hypothetical_question": "如何使用DolphinDB处理Level-2行情数据并进行因子计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/machine_learning.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/machine_learning.md",
      "start_line": 1,
      "end_line": 339,
      "summary": "DolphinDB提供了多种机器学习算法和工具，包括随机森林、逻辑回归、PCA等，支持分布式环境，并通过实例展示了数据预处理、模型训练、预测和持久化的完整流程。",
      "keywords": [
        "DolphinDB",
        "机器学习",
        "随机森林",
        "逻辑回归",
        "PCA"
      ],
      "hypothetical_question": "如何在DolphinDB中使用随机森林算法进行数据分类？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/meta_programming.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/meta_programming.md",
      "start_line": 1,
      "end_line": 557,
      "summary": "DolphinDB支持基于函数的元编程，用于动态创建表达式和SQL查询，提供了多种函数和方法来实现元编程，并展示了其在数据更新、流计算和报表生成等场景中的应用。",
      "keywords": [
        "元编程",
        "DolphinDB",
        "SQL查询",
        "动态表达式",
        "函数"
      ],
      "hypothetical_question": "如何在DolphinDB中使用基于函数的元编程动态生成SQL查询？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/matrix.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/matrix.md",
      "start_line": 1,
      "end_line": 1645,
      "summary": "DolphinDB 提供了丰富的矩阵运算功能，包括矩阵的创建、访问、修改、运算、分解及高级运算，支持高效处理面板数据。",
      "keywords": [
        "矩阵运算",
        "DolphinDB",
        "矩阵分解",
        "线性方程组",
        "JIT支持"
      ],
      "hypothetical_question": "DolphinDB 中如何进行高效的矩阵运算和分解？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/metacode_derived_features.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/metacode_derived_features.md",
      "start_line": 1,
      "end_line": 452,
      "summary": "本教程介绍如何使用 DolphinDB 通过元编程低代码量高效生成 676 个股票波动率预测模型的输入特征，并展示了流批一体的实时计算实现。",
      "keywords": [
        "DolphinDB",
        "元编程",
        "股票波动率预测",
        "特征工程",
        "流计算"
      ],
      "hypothetical_question": "如何使用 DolphinDB 高效生成股票波动率预测模型的 676 个输入特征？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/metacode_derived_features_2.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/metacode_derived_features_2.md",
      "start_line": 1,
      "end_line": 452,
      "summary": "本教程介绍了如何在DolphinDB中使用元编程技术高效开发股票波动率预测模型，通过批量生成676个输入特征，显著提升模型准确性，并展示了流式计算实现实时特征计算的方法。",
      "keywords": [
        "DolphinDB",
        "股票波动率预测",
        "元编程",
        "衍生特征",
        "流式计算"
      ],
      "hypothetical_question": "如何使用DolphinDB的元编程技术高效开发股票波动率预测模型并实现实时计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/matching_engine_simulator.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/matching_engine_simulator.md",
      "start_line": 1,
      "end_line": 1066,
      "summary": "DolphinDB模拟撮合引擎插件使用教程，介绍如何基于快照和逐笔行情数据模拟委托订单的撮合，支持订单成交比例和延时等设置，遵循价格优先、时间优先原则进行撮合成交。",
      "keywords": [
        "DolphinDB",
        "模拟撮合引擎",
        "高频策略",
        "回测",
        "撮合规则"
      ],
      "hypothetical_question": "如何使用DolphinDB的模拟撮合引擎插件进行高频策略回测？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/ml_volatility.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/ml_volatility.md",
      "start_line": 1,
      "end_line": 345,
      "summary": "本教程详细介绍了如何利用DolphinDB时序数据库实现金融实时实际波动率预测，包括数据预处理、模型构建、实时预测及流处理流程。",
      "keywords": [
        "DolphinDB",
        "实时波动率预测",
        "机器学习",
        "流处理",
        "金融数据分析"
      ],
      "hypothetical_question": "如何使用DolphinDB实现金融实时实际波动率预测？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/migrate_data_from_Postgre_and_Greenplum_to_DolphinDB.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/migrate_data_from_Postgre_and_Greenplum_to_DolphinDB.md",
      "start_line": 1,
      "end_line": 131,
      "summary": "该文本片段详细介绍了如何使用DataX工具将PostgreSQL中的数据迁移到DolphinDB，包括配置文件的编写、执行命令以及性能对比。",
      "keywords": [
        "DataX",
        "PostgreSQL",
        "DolphinDB",
        "数据迁移",
        "性能对比"
      ],
      "hypothetical_question": "如何使用DataX将PostgreSQL中的数据迁移到DolphinDB？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/module_tutorial.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/module_tutorial.md",
      "start_line": 1,
      "end_line": 268,
      "summary": "DolphinDB模块教程：介绍模块的创建、定义、导入、分类及注意事项。",
      "keywords": [
        "DolphinDB",
        "模块",
        "函数",
        "导入",
        "命名空间"
      ],
      "hypothetical_question": "如何在DolphinDB中创建和使用模块？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/ml_volatility_2.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/ml_volatility_2.md",
      "start_line": 1,
      "end_line": 345,
      "summary": "本教程详细介绍了如何利用DolphinDB时序数据库实现金融实时实际波动率预测，包括数据预处理、模型构建、实时预测及流处理流程。",
      "keywords": [
        "金融实时波动率预测",
        "DolphinDB",
        "机器学习",
        "流数据处理",
        "高频交易"
      ],
      "hypothetical_question": "如何使用DolphinDB实现金融实时实际波动率预测？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/module_code_versioning_and_rights_management.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/module_code_versioning_and_rights_management.md",
      "start_line": 1,
      "end_line": 314,
      "summary": "本教程介绍了如何结合GitLab和DolphinDB函数视图实现模块代码的版本控制和权限管理，以解决DolphinDB模块在权限管理和代码部署方面的限制。",
      "keywords": [
        "DolphinDB",
        "模块管理",
        "权限控制",
        "GitLab",
        "函数视图"
      ],
      "hypothetical_question": "如何在DolphinDB中实现模块代码的版本控制和权限管理？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/node_startup_exception.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/node_startup_exception.md",
      "start_line": 1,
      "end_line": 465,
      "summary": "DolphinDB节点启动异常的定位思路、常见问题及解决方案。",
      "keywords": [
        "DolphinDB",
        "节点启动异常",
        "日志分析",
        "问题定位",
        "解决方案"
      ],
      "hypothetical_question": "DolphinDB节点启动失败时应该如何定位问题并解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/node_red_tutorial_iot.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/node_red_tutorial_iot.md",
      "start_line": 1,
      "end_line": 344,
      "summary": "本文介绍了如何使用Node-RED构建DolphinDB低代码平台，包括平台特点、使用方法、案例介绍及节点开发方法。",
      "keywords": [
        "Node-RED",
        "DolphinDB",
        "低代码平台",
        "可视化编程",
        "数据处理"
      ],
      "hypothetical_question": "如何利用Node-RED构建DolphinDB低代码平台？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/new_users_finance.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/new_users_finance.md",
      "start_line": 1,
      "end_line": 351,
      "summary": "DolphinDB流数据处理教程，介绍流数据回放、流计算引擎的使用及常见问题解答。",
      "keywords": [
        "流数据",
        "流计算引擎",
        "DolphinDB",
        "数据回放",
        "订阅"
      ],
      "hypothetical_question": "如何在DolphinDB中实现流数据的回放和流计算引擎的级联使用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/multi_machine_cluster_deployment.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/multi_machine_cluster_deployment.md",
      "start_line": 1,
      "end_line": 877,
      "summary": "本文档详细介绍了如何在Linux操作系统上部署、升级DolphinDB多服务器集群，包括集群节点类型、配置步骤、启动流程、常见问题解答以及授权许可更新等内容。",
      "keywords": [
        "DolphinDB",
        "多服务器集群",
        "部署",
        "升级",
        "授权许可"
      ],
      "hypothetical_question": "如何在Linux操作系统上部署和升级DolphinDB多服务器集群？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/multi_factor_risk_model.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/multi_factor_risk_model.md",
      "start_line": 1,
      "end_line": 1367,
      "summary": "本文详细介绍了如何使用DolphinDB实现多因子风险模型的整个流程，包括因子计算、合成、模型构建及其在投资组合优化和风险评估中的应用。",
      "keywords": [
        "DolphinDB",
        "多因子风险模型",
        "因子合成",
        "投资组合优化",
        "风险评估"
      ],
      "hypothetical_question": "如何使用DolphinDB实现多因子风险模型并应用于投资组合优化？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/node_startup_process_and_questions.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/node_startup_process_and_questions.md",
      "start_line": 1,
      "end_line": 690,
      "summary": "本文详细介绍了DolphinDB节点的启动流程、重要模块的初始化步骤以及常见启动问题的解决方案。",
      "keywords": [
        "DolphinDB",
        "节点启动",
        "启动流程",
        "常见问题",
        "解决方案"
      ],
      "hypothetical_question": "DolphinDB节点启动过程中可能遇到哪些问题以及如何解决？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/non-standard_permission_management.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/non-standard_permission_management.md",
      "start_line": 1,
      "end_line": 360,
      "summary": "本教程介绍了如何在DolphinDB中使用函数视图实现对表数据的行级别和列级别的精细权限管理。",
      "keywords": [
        "DolphinDB",
        "函数视图",
        "权限管理",
        "行级别权限",
        "列级别权限"
      ],
      "hypothetical_question": "如何在DolphinDB中实现对表数据的行级别和列级别的精细权限管理？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/oom_settlement.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/oom_settlement.md",
      "start_line": 1,
      "end_line": 232,
      "summary": "本文详细介绍了DolphinDB中Out of Memory（OOM）问题的原因、排查方法和规避建议。",
      "keywords": [
        "DolphinDB",
        "OOM",
        "内存管理",
        "排查方法",
        "规避建议"
      ],
      "hypothetical_question": "如何排查和解决DolphinDB中的Out of Memory（OOM）问题？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/oauth.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/oauth.md",
      "start_line": 1,
      "end_line": 63,
      "summary": "本文档详细介绍了如何在DolphinDB中配置和使用OAuth单点登录功能，以GitHub为例说明了从第三方网站开启OAuth到DolphinDB配置及Web登录的全过程。",
      "keywords": [
        "OAuth",
        "单点登录",
        "DolphinDB",
        "GitHub",
        "配置"
      ],
      "hypothetical_question": "如何在DolphinDB中配置和使用GitHub的OAuth单点登录功能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/oom_settlement_2.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/oom_settlement_2.md",
      "start_line": 1,
      "end_line": 232,
      "summary": "本文详细分析了DolphinDB中出现的Out of Memory（OOM）问题，包括常见报错、原因分类、排查方法和规避建议。",
      "keywords": [
        "DolphinDB",
        "Out of Memory",
        "内存管理",
        "排查方法",
        "规避建议"
      ],
      "hypothetical_question": "如何诊断和解决DolphinDB中的Out of Memory问题？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/orderBookSnapshotEngine.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/orderBookSnapshotEngine.md",
      "start_line": 1,
      "end_line": 816,
      "summary": "DolphinDB Orderbook 引擎是一个高性能流计算组件，用于从逐笔数据合成高频 Orderbook 快照，支持多种证券类型和交易规则，并提供丰富的自定义功能。",
      "keywords": [
        "DolphinDB",
        "Orderbook 引擎",
        "高频合成",
        "逐笔数据",
        "量化金融"
      ],
      "hypothetical_question": "如何使用 DolphinDB 从逐笔数据合成高频 Orderbook 快照？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/oltp_in-memory_storage_engine_non-embedded_version_tutorials.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/oltp_in-memory_storage_engine_non-embedded_version_tutorials.md",
      "start_line": 1,
      "end_line": 255,
      "summary": "DolphinDB的OLTP内存存储引擎（非嵌入式版）使用教程，介绍了其特点、DDL、DML操作、事务处理、配置参数及内置函数的使用。",
      "keywords": [
        "OLTP",
        "内存存储引擎",
        "DolphinDB",
        "事务",
        "B+树索引"
      ],
      "hypothetical_question": "如何在DolphinDB中使用OLTP内存存储引擎进行高并发、低延迟的事务处理？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/panel_data.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/panel_data.md",
      "start_line": 1,
      "end_line": 729,
      "summary": "本教程详细介绍了在DolphinDB中表示和处理面板数据的两种方法：通过SQL和向量化函数处理二维表，以及通过向量化函数处理矩阵，并对比了DolphinDB与pandas在面板数据处理上的性能差异。",
      "keywords": [
        "面板数据",
        "DolphinDB",
        "SQL",
        "向量化函数",
        "性能对比"
      ],
      "hypothetical_question": "如何在DolphinDB中高效处理和分析面板数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/plugin_development_tutorial.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/plugin_development_tutorial.md",
      "start_line": 1,
      "end_line": 4,
      "summary": "提供了DolphinDB插件完整代码的GitHub链接。",
      "keywords": [
        "DolphinDB",
        "插件",
        "GitHub",
        "代码"
      ],
      "hypothetical_question": "在哪里可以找到DolphinDB插件的完整代码？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/perf_opti_glibc.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/perf_opti_glibc.md",
      "start_line": 1,
      "end_line": 87,
      "summary": "该文档详细介绍了如何通过升级glibc版本并修改相关文件的rpath和interpreter来优化DolphinDB在高并发查询中的性能。",
      "keywords": [
        "glibc",
        "性能优化",
        "DolphinDB",
        "并发查询",
        "rpath"
      ],
      "hypothetical_question": "如何通过升级glibc来提升DolphinDB在高并发查询中的性能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/partitioned_in_memory_table.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/partitioned_in_memory_table.md",
      "start_line": 1,
      "end_line": 477,
      "summary": "本教程详细介绍了DolphinDB中内存数据表的创建、数据加载、数据处理以及相关操作，包括分区和非分区内存表的创建方法、数据插入、更新、删除等操作。",
      "keywords": [
        "内存数据表",
        "分区内存表",
        "数据加载",
        "数据处理",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中创建和操作分区内存表？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/pickle_comparison.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/pickle_comparison.md",
      "start_line": 1,
      "end_line": 274,
      "summary": "DolphinDB与pickle在金融市场高频数据管理中的性能对比测试和分析，展示了DolphinDB在数据读取速度、并发查询和库内分析方面的显著优势。",
      "keywords": [
        "DolphinDB",
        "pickle",
        "高频数据",
        "性能对比",
        "时序数据库"
      ],
      "hypothetical_question": "DolphinDB与pickle在处理金融市场高频数据时的性能差异如何？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/pip_ddb.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/pip_ddb.md",
      "start_line": 1,
      "end_line": 198,
      "summary": "本教程介绍了在DolphinDB中实现和应用PIP（Perceptually Important Points）降采样算法的方法，以解决物联网时序数据存储和展示中的挑战。",
      "keywords": [
        "PIP算法",
        "降采样",
        "DolphinDB",
        "时间序列数据",
        "物联网"
      ],
      "hypothetical_question": "如何在DolphinDB中实现PIP降采样算法以处理物联网时序数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/prep_linux_for_deploy.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/prep_linux_for_deploy.md",
      "start_line": 1,
      "end_line": 190,
      "summary": "该文档介绍了如何为部署DolphinDB准备Linux环境，包括关闭Swap分区、选择合适的部署方式（单节点、单机集群、多机集群）、Docker与非Docker环境的选择、生产环境配置参数实践以及详细的部署和启动流程。",
      "keywords": [
        "DolphinDB",
        "Linux部署",
        "Swap分区",
        "集群配置",
        "生产环境"
      ],
      "hypothetical_question": "如何在Linux环境下为部署DolphinDB进行系统配置和选择合适的部署方式？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/promethues2.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/promethues2.md",
      "start_line": 1,
      "end_line": 218,
      "summary": "本文介绍了如何使用Prometheus监控DolphinDB系统性能并配置Alertmanager实现邮件报警功能。",
      "keywords": [
        "Prometheus",
        "DolphinDB",
        "监控",
        "Alertmanager",
        "邮件报警"
      ],
      "hypothetical_question": "如何配置Prometheus和Alertmanager来监控DolphinDB系统性能并实现邮件报警？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/probabilistic_and_statistical_analysis.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/probabilistic_and_statistical_analysis.md",
      "start_line": 1,
      "end_line": 919,
      "summary": "DolphinDB提供了丰富的概率统计和回归分析功能，包括概率分布、随机数生成、假设检验以及多因子模型构建，适用于金融和物联网领域的统计分析需求。",
      "keywords": [
        "概率统计",
        "回归分析",
        "假设检验",
        "随机数生成",
        "多因子模型"
      ],
      "hypothetical_question": "DolphinDB在金融和物联网领域中有哪些概率统计和回归分析的功能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/public_fund_basic_analysis.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/public_fund_basic_analysis.md",
      "start_line": 1,
      "end_line": 594,
      "summary": "本教程介绍了如何使用DolphinDB进行公募基金历史数据的基础分析，包括收益率计算、夏普比率、相关系数等关键指标的计算方法。",
      "keywords": [
        "公募基金",
        "DolphinDB",
        "基础分析",
        "夏普比率",
        "相关系数"
      ],
      "hypothetical_question": "如何使用DolphinDB进行公募基金历史数据的基础分析？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/redoLog_cacheEngine.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/redoLog_cacheEngine.md",
      "start_line": 1,
      "end_line": 155,
      "summary": "DolphinDB 中的 redo log 和 cache engine 机制及其配置对性能的影响。",
      "keywords": [
        "redo log",
        "cache engine",
        "DolphinDB",
        "性能优化",
        "配置"
      ],
      "hypothetical_question": "DolphinDB 中的 redo log 和 cache engine 机制如何优化写入性能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/py_parser__quant_fin.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/py_parser__quant_fin.md",
      "start_line": 1,
      "end_line": 72,
      "summary": "该文本片段展示了如何使用DolphinDB Python Parser进行量化金融中的因子计算，包括代码示例、性能测试结果以及与Python和DolphinDB Scripts的性能对比。",
      "keywords": [
        "DolphinDB Python Parser",
        "量化金融",
        "因子计算"
      ],
      "hypothetical_question": "如何在DolphinDB中使用Python Parser进行量化金融中的因子计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/random_vibr_sig_analysis_2.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/random_vibr_sig_analysis_2.md",
      "start_line": 1,
      "end_line": 542,
      "summary": "DolphinDB提供了一套完整的随机振动信号分析解决方案，包括实时数据处理、功率谱密度计算、异常检测和可视化展示。",
      "keywords": [
        "随机振动信号",
        "功率谱密度",
        "DolphinDB",
        "实时分析",
        "异常检测"
      ],
      "hypothetical_question": "如何使用DolphinDB进行随机振动信号的分析和实时监控？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/random_vibr_sig_analysis.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/random_vibr_sig_analysis.md",
      "start_line": 1,
      "end_line": 542,
      "summary": "DolphinDB提供了一套完整的随机振动信号分析解决方案，包括实时计算、报警分析和聚合查询功能，适用于工业物联网场景。",
      "keywords": [
        "随机振动信号",
        "功率谱密度",
        "DolphinDB",
        "工业物联网",
        "实时计算"
      ],
      "hypothetical_question": "如何使用DolphinDB进行随机振动信号分析？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/redis_plugin_tutorial.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/redis_plugin_tutorial.md",
      "start_line": 1,
      "end_line": 235,
      "summary": "本文介绍了如何使用DolphinDB的Redis插件与Redis数据库进行交互，包括安装、加载插件、基础接口使用、数据类型转换以及两个实际案例演示。",
      "keywords": [
        "DolphinDB",
        "Redis插件",
        "数据交互",
        "实时数据处理",
        "案例演示"
      ],
      "hypothetical_question": "如何使用DolphinDB的Redis插件与Redis数据库进行数据交互？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/quant_finance_examples.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/quant_finance_examples.md",
      "start_line": 1,
      "end_line": 720,
      "summary": "DolphinDB量化金融范例教程，涵盖数据库设计、历史数据导入、实时数据处理及高频量化计算等核心功能。",
      "keywords": [
        "DolphinDB",
        "量化金融",
        "数据库设计",
        "实时数据处理",
        "高频计算"
      ],
      "hypothetical_question": "如何使用DolphinDB进行量化金融中的高频数据处理和实时计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/restore-backup.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/restore-backup.md",
      "start_line": 1,
      "end_line": 345,
      "summary": "DolphinDB数据库提供了数据备份与恢复的详细教程，包括备份、恢复、备份与恢复管理的函数使用方法和示例。",
      "keywords": [
        "DolphinDB",
        "数据备份",
        "数据恢复",
        "分布式数据库",
        "分区备份"
      ],
      "hypothetical_question": "如何在DolphinDB中进行数据备份和恢复？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/reactive_state_engine.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/reactive_state_engine.md",
      "start_line": 1,
      "end_line": 411,
      "summary": "DolphinDB的响应式状态引擎（Reactive State Engine）是一种流批统一的计算引擎，用于高效处理金融高频因子计算，支持自定义状态函数和并行处理，确保流式计算与批量计算结果一致。",
      "keywords": [
        "响应式状态引擎",
        "金融高频因子",
        "流批统一",
        "自定义状态函数",
        "并行处理"
      ],
      "hypothetical_question": "如何使用DolphinDB的响应式状态引擎实现金融高频因子的流批统一计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/rt_stk_price_inc_calc.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/rt_stk_price_inc_calc.md",
      "start_line": 1,
      "end_line": 18,
      "summary": "提供了实时股票价格涨幅计算相关的业务代码脚本和示例数据文件。",
      "keywords": [
        "股票价格",
        "流数据",
        "实时计算",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB中实时计算股票价格涨幅需要哪些脚本和数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/rt_stk_price_inc_calc_2.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/rt_stk_price_inc_calc_2.md",
      "start_line": 1,
      "end_line": 18,
      "summary": "提供实时股票涨幅计算教程的业务代码和示例数据附件。",
      "keywords": [
        "股票涨幅",
        "流数据",
        "DolphinDB",
        "业务代码",
        "示例数据"
      ],
      "hypothetical_question": "实时股票涨幅计算教程中提供了哪些业务代码和示例数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/scale_out_cluster.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/scale_out_cluster.md",
      "start_line": 1,
      "end_line": 242,
      "summary": "本教程详细介绍了如何通过离线或在线方式扩展DolphinDB集群的数据节点和存储空间，包括配置步骤、验证方法和常见问题解答。",
      "keywords": [
        "DolphinDB",
        "集群扩容",
        "数据节点",
        "存储扩展",
        "分布式数据库"
      ],
      "hypothetical_question": "如何在DolphinDB集群中扩展数据节点和存储空间？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/scheduledJob.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/scheduledJob.md",
      "start_line": 1,
      "end_line": 394,
      "summary": "DolphinDB的定时作业功能允许用户在指定时间自动执行任务，支持多种应用场景如数据库计算、管理和操作系统任务。",
      "keywords": [
        "定时作业",
        "DolphinDB",
        "scheduleJob",
        "数据库管理",
        "自动化任务"
      ],
      "hypothetical_question": "如何在DolphinDB中设置定时任务来自动执行数据库计算和管理操作？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/service_deployment_and_migration.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/service_deployment_and_migration.md",
      "start_line": 1,
      "end_line": 96,
      "summary": "该文本片段详细描述了在DolphinDB集群中扩展controller节点、修改配置文件以及启动服务的步骤。",
      "keywords": [
        "DolphinDB",
        "集群部署",
        "controller扩展",
        "配置文件修改",
        "服务启动"
      ],
      "hypothetical_question": "如何在DolphinDB集群中扩展controller节点并修改相关配置文件？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/scheduledJob_2.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/scheduledJob_2.md",
      "start_line": 1,
      "end_line": 394,
      "summary": "DolphinDB 定时作业功能详解，包括创建、查询、删除定时作业的方法，以及常见故障排查和序列化反序列化注意事项。",
      "keywords": [
        "定时作业",
        "scheduleJob",
        "DolphinDB",
        "序列化",
        "故障排查"
      ],
      "hypothetical_question": "如何在 DolphinDB 中创建和管理定时作业？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/repair_chunk_status.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/repair_chunk_status.md",
      "start_line": 1,
      "end_line": 342,
      "summary": "本文档介绍了DolphinDB中分区状态不一致的问题及其解决方法，包括基本概念、不一致场景分析以及修复方法。",
      "keywords": [
        "DolphinDB",
        "分区状态不一致",
        "修复方法",
        "元数据",
        "分布式文件系统"
      ],
      "hypothetical_question": "如何在DolphinDB中修复分区状态不一致的问题？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/soft_delete.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/soft_delete.md",
      "start_line": 1,
      "end_line": 172,
      "summary": "DolphinDB 2.00.11版本引入的软删除功能通过标记而非直接移除数据来提升删除性能，适用于特定场景，并提供了详细的原理、使用条件和性能测试分析。",
      "keywords": [
        "软删除",
        "DolphinDB",
        "TSDB引擎",
        "性能测试",
        "数据删除"
      ],
      "hypothetical_question": "DolphinDB中的软删除功能是如何工作的，以及它在什么情况下比硬删除更有优势？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/single_machine_cluster_deploy.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/single_machine_cluster_deploy.md",
      "start_line": 1,
      "end_line": 762,
      "summary": "本教程详细介绍了如何在单台服务器上部署、升级DolphinDB集群，包括节点配置、授权许可更新及常见问题解答。",
      "keywords": [
        "DolphinDB",
        "单服务器集群",
        "部署",
        "升级",
        "授权许可"
      ],
      "hypothetical_question": "如何在单台服务器上部署和升级DolphinDB集群？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/socp_usage_case.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/socp_usage_case.md",
      "start_line": 1,
      "end_line": 439,
      "summary": "本文介绍了DolphinDB中二阶锥规划（SOCP）函数的使用方法，包括其数学模型、常见优化问题的转换方法以及金融领域的应用案例。",
      "keywords": [
        "二阶锥规划",
        "DolphinDB",
        "投资组合优化",
        "金融量化",
        "最优化函数"
      ],
      "hypothetical_question": "如何在DolphinDB中使用socp函数解决金融领域的投资组合优化问题？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/sql_performance_optimization_wap_di_rv.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/sql_performance_optimization_wap_di_rv.md",
      "start_line": 1,
      "end_line": 357,
      "summary": "本教程介绍了在DolphinDB中基于证券交易的level2快照数据，优化计算深度不平衡、买卖压力指标和波动率的SQL性能方法，包括从新手到高性能的四种优化方案。",
      "keywords": [
        "DolphinDB",
        "SQL性能优化",
        "金融指标计算",
        "TSDB存储引擎",
        "矩阵计算"
      ],
      "hypothetical_question": "如何在DolphinDB中优化计算金融指标如深度不平衡、买卖压力指标和波动率的SQL性能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/stateful_stream_operators.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/stateful_stream_operators.md",
      "start_line": 1,
      "end_line": 277,
      "summary": "介绍如何使用DolphinDB的面向对象编程（OOP）特性开发流计算状态算子，包括类定义、对象使用、应用案例及未来优化方向。",
      "keywords": [
        "DolphinDB",
        "面向对象编程",
        "流计算",
        "状态算子",
        "响应式状态引擎"
      ],
      "hypothetical_question": "如何在DolphinDB中使用面向对象编程开发流计算状态算子？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/standalone_server.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/standalone_server.md",
      "start_line": 1,
      "end_line": 411,
      "summary": "本教程详细介绍了DolphinDB单节点在Linux和Windows操作系统上的部署、升级步骤，以及授权许可文件更新和常见问题解答。",
      "keywords": [
        "DolphinDB",
        "单节点部署",
        "升级",
        "授权许可",
        "常见问题"
      ],
      "hypothetical_question": "如何在Linux和Windows操作系统上部署和升级DolphinDB单节点？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/str_comp_fin_quant_2.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/str_comp_fin_quant_2.md",
      "start_line": 1,
      "end_line": 7,
      "summary": "提供多档多列与多档 array vector 快照的附件下载链接。",
      "keywords": [
        "快照",
        "多档多列",
        "array vector",
        "附件",
        "下载"
      ],
      "hypothetical_question": "在哪里可以下载多档多列与多档 array vector 的快照附件？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/str_comp_fin_quant.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/str_comp_fin_quant.md",
      "start_line": 1,
      "end_line": 7,
      "summary": "提供多档多列与多档 array vector 快照的附件下载链接。",
      "keywords": [
        "快照",
        "多档多列",
        "array vector",
        "附件",
        "下载"
      ],
      "hypothetical_question": "在哪里可以下载多档多列与多档 array vector 的快照文件？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/stock_market_replay.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/stock_market_replay.md",
      "start_line": 1,
      "end_line": 454,
      "summary": "DolphinDB提供了股票行情数据的严格时间顺序回放功能，支持单表和多表回放，并详细介绍了多表回放的应用方案和代码实现。",
      "keywords": [
        "DolphinDB",
        "股票行情回放",
        "多表回放",
        "异构流数据表",
        "实时数据处理"
      ],
      "hypothetical_question": "如何使用DolphinDB实现股票行情数据的严格时间顺序回放？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/std_sql_ddb.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/std_sql_ddb.md",
      "start_line": 1,
      "end_line": 892,
      "summary": "DolphinDB自1.30.22/2.00.10版本起逐步支持标准化SQL语法，包括关键字大小写兼容、谓词支持、多表join、集合运算等，并针对Oracle和MySQL提供SQL方言兼容模式。",
      "keywords": [
        "DolphinDB",
        "SQL标准化",
        "join增强",
        "SQL方言",
        "谓词支持"
      ],
      "hypothetical_question": "DolphinDB从哪个版本开始支持标准化SQL语法，并提供了哪些主要功能增强？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/stock_market_replay_2.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/stock_market_replay_2.md",
      "start_line": 1,
      "end_line": 454,
      "summary": "DolphinDB提供了股票行情多表回放功能，支持严格按时间顺序回放逐笔委托、逐笔成交和快照数据，并介绍了三种消费回放结果的方案。",
      "keywords": [
        "DolphinDB",
        "股票行情回放",
        "多表回放",
        "异构流数据表",
        "实时计算"
      ],
      "hypothetical_question": "如何使用DolphinDB实现股票行情的多表回放和实时计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/stockdata_csv_import_demo.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/stockdata_csv_import_demo.md",
      "start_line": 1,
      "end_line": 162,
      "summary": "本文介绍了如何将国内股票行情数据（包括新格式和旧格式的CSV文件）高效导入DolphinDB分布式数据库的实践案例。",
      "keywords": [
        "股票行情数据",
        "CSV导入",
        "DolphinDB",
        "分布式数据库",
        "量化分析"
      ],
      "hypothetical_question": "如何高效地将国内股票行情数据从CSV文件导入DolphinDB分布式数据库？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/stock_backtest.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/stock_backtest.md",
      "start_line": 1,
      "end_line": 792,
      "summary": "本文档详细介绍了如何使用DolphinDB实现股票中低频投资组合回测和股指期货交易策略，包括策略逻辑、实现流程和回测结果分析。",
      "keywords": [
        "DolphinDB",
        "股票回测",
        "股指期货",
        "中低频策略",
        "量化交易"
      ],
      "hypothetical_question": "如何使用DolphinDB实现股票中低频投资组合回测和股指期货交易策略？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/stream_computing_in_futures_trading.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/stream_computing_in_futures_trading.md",
      "start_line": 1,
      "end_line": 857,
      "summary": "DolphinDB流计算在商品期货交易中的应用，通过优化持仓信息指标的计算和扩展，提升交易系统的效率和决策能力。",
      "keywords": [
        "DolphinDB",
        "流计算",
        "商品期货",
        "持仓信息",
        "指标计算"
      ],
      "hypothetical_question": "如何在商品期货交易中使用DolphinDB进行流计算以优化持仓信息指标？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/stream_aggregator.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/stream_aggregator.md",
      "start_line": 1,
      "end_line": 877,
      "summary": "DolphinDB的时序聚合引擎教程，详细介绍了如何创建、配置和使用时序引擎进行流数据聚合计算。",
      "keywords": [
        "时序聚合引擎",
        "流数据处理",
        "createTimeSeriesEngine",
        "窗口计算",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在DolphinDB中使用时序聚合引擎进行流数据计算？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/streaming_IOPV_2.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/streaming_IOPV_2.md",
      "start_line": 1,
      "end_line": 286,
      "summary": "本教程介绍了如何使用 DolphinDB 实时计算 ETF 的基金份额参考净值 (IOPV)，包括历史计算方法和实时流处理方法，并展示了完整的流数据处理流程。",
      "keywords": [
        "IOPV",
        "DolphinDB",
        "实时计算",
        "ETF",
        "流数据处理"
      ],
      "hypothetical_question": "如何使用 DolphinDB 实时计算 ETF 的基金份额参考净值 (IOPV)？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/streaming_IOPV.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/streaming_IOPV.md",
      "start_line": 1,
      "end_line": 286,
      "summary": "本教程介绍如何使用 DolphinDB 实时计算 ETF 的基金份额参考价值 (IOPV)，包括历史计算、单只 ETF 实时计算和多只 ETF 实时增量计算的方法。",
      "keywords": [
        "IOPV",
        "DolphinDB",
        "实时计算",
        "ETF",
        "增量计算"
      ],
      "hypothetical_question": "如何使用 DolphinDB 实时计算 ETF 的 IOPV？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/streaming_capital_flow_daily.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/streaming_capital_flow_daily.md",
      "start_line": 1,
      "end_line": 412,
      "summary": "本教程介绍了基于DolphinDB流数据处理框架实时计算日累计逐单资金流的低延时解决方案，包括场景描述、指标实现、性能测试等内容。",
      "keywords": [
        "DolphinDB",
        "逐单资金流",
        "流数据处理",
        "实时计算",
        "股票交易"
      ],
      "hypothetical_question": "如何使用DolphinDB实时计算日累计逐单资金流？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/streaming-real-time-correlation-processing.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/streaming-real-time-correlation-processing.md",
      "start_line": 1,
      "end_line": 474,
      "summary": "DolphinDB提供了5种流数据连接引擎，用于实时关联处理多数据源流式数据，支持低延时计算和金融应用场景。",
      "keywords": [
        "流数据连接引擎",
        "实时关联处理",
        "DolphinDB",
        "金融应用",
        "低延时计算"
      ],
      "hypothetical_question": "DolphinDB中有哪些流数据连接引擎可以用于实时关联处理多数据源？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/streaming_auto_sub_2.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/streaming_auto_sub_2.md",
      "start_line": 1,
      "end_line": 231,
      "summary": "本教程介绍了如何在 DolphinDB 节点启动时实现流计算自动订阅的部署方法，包括业务代码开发、系统启动流程、单节点模式部署以及数据回放工具的使用。",
      "keywords": [
        "DolphinDB",
        "流计算",
        "自动订阅",
        "部署",
        "数据回放"
      ],
      "hypothetical_question": "如何在 DolphinDB 中实现节点启动时的流计算自动订阅？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/streaming_auto_sub.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/streaming_auto_sub.md",
      "start_line": 1,
      "end_line": 231,
      "summary": "本教程介绍了如何在DolphinDB节点启动时自动部署流计算订阅，包括业务代码开发、系统启动流程、单节点模式部署以及数据回放工具的使用。",
      "keywords": [
        "DolphinDB",
        "流计算",
        "自动订阅",
        "数据回放",
        "实时处理"
      ],
      "hypothetical_question": "如何在DolphinDB节点启动时实现流计算的自动订阅部署？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/streaming-real-time-correlation-processing_2.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/streaming-real-time-correlation-processing_2.md",
      "start_line": 1,
      "end_line": 474,
      "summary": "DolphinDB提供了5种流数据连接引擎（AsofJoinEngine、WindowJoinEngine、EquiJoinEngine、LookupJoinEngine、LeftSemiJoinEngine）用于实时关联处理多数据源流数据，并详细介绍了其原理、应用场景和比较。",
      "keywords": [
        "DolphinDB",
        "流数据连接引擎",
        "实时关联处理",
        "AsofJoinEngine",
        "WindowJoinEngine"
      ],
      "hypothetical_question": "DolphinDB中有哪些流数据连接引擎可以用于实时关联处理多数据源流数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/streaming_capital_flow_daily_2.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/streaming_capital_flow_daily_2.md",
      "start_line": 1,
      "end_line": 412,
      "summary": "本教程详细介绍了如何利用DolphinDB流数据处理框架实时计算日累计逐单资金流，包括场景描述、数据表结构、指标定义、增量计算方案及性能测试。",
      "keywords": [
        "DolphinDB",
        "流数据处理",
        "日累计资金流",
        "实时计算",
        "股票交易"
      ],
      "hypothetical_question": "如何使用DolphinDB实时计算股票交易中的日累计逐单资金流？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/streaming_timer.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/streaming_timer.md",
      "start_line": 1,
      "end_line": 265,
      "summary": "本文介绍了DolphinDB流计算任务的时延统计方法和性能优化策略，包括耗时统计、写入优化、计算优化和框架优化等方面。",
      "keywords": [
        "流计算",
        "时延统计",
        "性能优化",
        "DolphinDB",
        "实时计算"
      ],
      "hypothetical_question": "如何在DolphinDB中进行流计算任务的时延统计和性能优化？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/streaming_engine_anomaly_alerts.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/streaming_engine_anomaly_alerts.md",
      "start_line": 1,
      "end_line": 243,
      "summary": "本教程介绍了如何使用DolphinDB的流计算引擎多级级联实现门禁设备异常状态的实时监测。",
      "keywords": [
        "DolphinDB",
        "流计算引擎",
        "门禁异常监测",
        "实时数据处理",
        "物联网"
      ],
      "hypothetical_question": "如何使用DolphinDB的流计算引擎实现门禁设备异常状态的实时监测？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/streaming_capital_flow_order_by_order.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/streaming_capital_flow_order_by_order.md",
      "start_line": 1,
      "end_line": 151,
      "summary": "该文档介绍了如何使用DolphinDB进行流式计算，包括Python API的订阅功能、Grafana实时监控配置、历史数据回放以及流计算状态监控函数的应用。",
      "keywords": [
        "DolphinDB",
        "流式计算",
        "Python API",
        "Grafana",
        "实时监控"
      ],
      "hypothetical_question": "如何在DolphinDB中使用Python API进行流数据订阅和实时监控？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/streaming_capital_flow_order_by_order_2.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/streaming_capital_flow_order_by_order_2.md",
      "start_line": 1,
      "end_line": 151,
      "summary": "该文档介绍了如何使用DolphinDB和Python API进行流数据订阅、Grafana实时监控资金流向、历史数据回放以及流计算状态监控的方法和示例代码。",
      "keywords": [
        "DolphinDB",
        "流数据订阅",
        "Grafana监控",
        "历史数据回放",
        "流计算状态监控"
      ],
      "hypothetical_question": "如何在DolphinDB中使用Python API进行流数据订阅并监控资金流向？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/streaming_engine_anomaly_alerts_2.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/streaming_engine_anomaly_alerts_2.md",
      "start_line": 1,
      "end_line": 243,
      "summary": "本教程介绍如何使用DolphinDB的流计算引擎多级级联实时监测门禁设备的异常状态。",
      "keywords": [
        "DolphinDB",
        "流计算引擎",
        "门禁系统",
        "实时监测",
        "异常检测"
      ],
      "hypothetical_question": "如何使用DolphinDB的流计算引擎实现门禁设备异常状态的实时监测？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/streaming_tutorial.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/streaming_tutorial.md",
      "start_line": 1,
      "end_line": 874,
      "summary": "DolphinDB流数据框架支持高效、低延迟的流数据处理，包括发布、订阅、实时计算、持久化及高可用等功能。",
      "keywords": [
        "流数据处理",
        "发布订阅",
        "实时计算",
        "持久化",
        "高可用"
      ],
      "hypothetical_question": "DolphinDB如何实现高效、低延迟的流数据处理？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/textdb.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/textdb.md",
      "start_line": 1,
      "end_line": 380,
      "summary": "本教程介绍了如何在 DolphinDB 中使用 TextDB 引擎高效存储和检索资讯数据，包括数据解析、存储方案选择、性能对比及应用场景。",
      "keywords": [
        "TextDB",
        "资讯数据",
        "存储引擎",
        "文本检索",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在 DolphinDB 中高效存储和检索资讯数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/threading_model.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/threading_model.md",
      "start_line": 1,
      "end_line": 215,
      "summary": "DolphinDB的线程模型及其在分布式SQL查询中的应用与优化建议。",
      "keywords": [
        "DolphinDB",
        "线程模型",
        "SQL查询",
        "优化建议",
        "分布式数据库"
      ],
      "hypothetical_question": "DolphinDB的线程模型是如何工作的，以及如何优化分布式SQL查询的性能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/thread_intro.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/thread_intro.md",
      "start_line": 1,
      "end_line": 256,
      "summary": "DolphinDB 线程简介，包括任务管理、存储引擎、流数据、集群管理和高可用等方面的线程及其配置。",
      "keywords": [
        "DolphinDB",
        "线程",
        "任务管理",
        "存储引擎",
        "流数据"
      ],
      "hypothetical_question": "DolphinDB 中有哪些线程用于任务管理和存储引擎？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/thread_intro_2.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/thread_intro_2.md",
      "start_line": 1,
      "end_line": 256,
      "summary": "DolphinDB 2.00.X版本中线程的分类、功能及相关配置项介绍，涵盖任务管理、存储引擎、流数据、集群管理及高可用等方面。",
      "keywords": [
        "DolphinDB",
        "线程管理",
        "存储引擎",
        "流数据",
        "高可用"
      ],
      "hypothetical_question": "DolphinDB 2.00.X版本中有哪些线程类型及其功能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/timezone.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/timezone.md",
      "start_line": 1,
      "end_line": 546,
      "summary": "本教程详细介绍了DolphinDB中时间数据的存储、导入及处理时区问题的方法，包括不同业务场景下的最佳实践和与Java API、MySQL的时间处理对比。",
      "keywords": [
        "DolphinDB",
        "时区处理",
        "时间存储",
        "Java API",
        "MySQL"
      ],
      "hypothetical_question": "在DolphinDB中如何处理和存储不同时区的时间数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/the_ten_most_overlooked_details_of_programming.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/the_ten_most_overlooked_details_of_programming.md",
      "start_line": 1,
      "end_line": 425,
      "summary": "本文介绍了在DolphinDB编程中容易被忽视的十个细节，包括分区冲突、数据类型处理、矩阵与表转换、表连接、SQL变量命名、元编程、元组追加行为、分区剪枝、字典与元编程使用以及避免大结果集直接返回客户端，旨在帮助用户提高编程效率和脚本质量。",
      "keywords": [
        "DolphinDB",
        "编程细节",
        "分区冲突",
        "元编程",
        "分区剪枝"
      ],
      "hypothetical_question": "在DolphinDB编程中，有哪些容易被忽视的细节需要注意以提高编程效率？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/tsdb_engine.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/tsdb_engine.md",
      "start_line": 1,
      "end_line": 125,
      "summary": "DolphinDB TSDB 存储引擎简介及其与 OLAP 引擎的对比、适用场景、原理和使用技巧。",
      "keywords": [
        "TSDB",
        "OLAP",
        "存储引擎",
        "LSM树",
        "DolphinDB"
      ],
      "hypothetical_question": "DolphinDB 的 TSDB 存储引擎与 OLAP 引擎有哪些区别和适用场景？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/tsdb_explained.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/tsdb_explained.md",
      "start_line": 1,
      "end_line": 661,
      "summary": "本文详细介绍了DolphinDB的TSDB存储引擎，包括其与OLAP引擎的区别、架构原理、CRUD流程、配置优化建议以及实际应用案例。",
      "keywords": [
        "TSDB",
        "OLAP",
        "LSM-Tree",
        "sortColumns",
        "Level File"
      ],
      "hypothetical_question": "DolphinDB的TSDB存储引擎与OLAP引擎有哪些区别？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/user_level_resource_tracking.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/user_level_resource_tracking.md",
      "start_line": 1,
      "end_line": 301,
      "summary": "DolphinDB用户级别的资源跟踪功能详解，包括原理、配置、使用方法和常见问题。",
      "keywords": [
        "DolphinDB",
        "资源跟踪",
        "SQL查询",
        "CPU使用量",
        "内存使用量"
      ],
      "hypothetical_question": "如何在DolphinDB中配置和使用用户级别的资源跟踪功能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/udaf.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/udaf.md",
      "start_line": 1,
      "end_line": 148,
      "summary": "本教程详细介绍了如何在DolphinDB中定义和使用自定义聚合函数（UDAF），包括其在分布式环境中的map reduce实现和在cgroup by中的running aggregate实现。",
      "keywords": [
        "自定义聚合函数",
        "DolphinDB",
        "map reduce",
        "cgroup by",
        "分布式计算"
      ],
      "hypothetical_question": "如何在DolphinDB中实现自定义聚合函数并在分布式环境中使用？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/volatility_prediction.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/volatility_prediction.md",
      "start_line": 1,
      "end_line": 73,
      "summary": "本文介绍了如何使用DolphinDB进行实时股票波动率预测，包括订阅实时计算结果流表的方法和实时预测性能的测试结果。",
      "keywords": [
        "DolphinDB",
        "实时预测",
        "股票波动率",
        "LSTM模型",
        "性能测试"
      ],
      "hypothetical_question": "如何使用DolphinDB进行实时股票波动率预测并测试其性能？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/xtp.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/xtp.md",
      "start_line": 1,
      "end_line": 396,
      "summary": "本文介绍了如何使用DolphinDB XTP插件实现节点启动时自动订阅XTP行情数据并存储至分布式数据库的全流程。",
      "keywords": [
        "DolphinDB",
        "XTP插件",
        "行情数据",
        "分布式数据库",
        "自动订阅"
      ],
      "hypothetical_question": "如何使用DolphinDB XTP插件实现XTP行情数据的自动订阅和存储？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/tu_modules.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/tu_modules.md",
      "start_line": 1,
      "end_line": 331,
      "summary": "DolphinDB模块的使用指南，包括模块的定义、创建、序列化、导入、分类以及注意事项。",
      "keywords": [
        "DolphinDB",
        "模块",
        "函数",
        "导入",
        "序列化"
      ],
      "hypothetical_question": "如何在DolphinDB中创建和使用模块？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/script/ID/example.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/script/ID/example.md",
      "start_line": 1,
      "end_line": 1,
      "summary": "文本片段为空，无内容可分析。",
      "keywords": [],
      "hypothetical_question": "",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/window_cal.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/window_cal.md",
      "start_line": 1,
      "end_line": 1020,
      "summary": "DolphinDB提供了强大的窗口计算功能，包括滚动窗口、滑动窗口、累计窗口和会话窗口等，支持数据表、矩阵和流式计算，并进行了性能优化。",
      "keywords": [
        "窗口计算",
        "DolphinDB",
        "时序处理",
        "流式计算",
        "性能优化"
      ],
      "hypothetical_question": "DolphinDB中有哪些窗口计算类型及其应用场景？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/waveform_data_storage.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/waveform_data_storage.md",
      "start_line": 1,
      "end_line": 696,
      "summary": "DolphinDB提供了一种高效的地震波形数据存储及实时流处理解决方案，通过分布式存储、流计算引擎和压缩算法等技术，解决了地震行业在数据存储、查询和分析中的挑战。",
      "keywords": [
        "地震波形数据",
        "DolphinDB",
        "实时流处理",
        "分布式存储",
        "压缩算法"
      ],
      "hypothetical_question": "如何利用DolphinDB解决地震波形数据的存储和实时处理问题？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/waveform_data_storage_2.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/waveform_data_storage_2.md",
      "start_line": 1,
      "end_line": 696,
      "summary": "DolphinDB提供了一种高效的地震波形数据存储与实时流处理解决方案，解决传统存储方式在扩展性、实时处理和数据分析方面的挑战。",
      "keywords": [
        "地震波形数据",
        "DolphinDB",
        "实时流处理",
        "分布式存储",
        "MiniSeed"
      ],
      "hypothetical_question": "如何利用DolphinDB高效存储和处理地震波形数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/web_chart_integration.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/web_chart_integration.md",
      "start_line": 1,
      "end_line": 220,
      "summary": "本文介绍了如何利用 DolphinDB 的 Web 数据接口和 JavaScript 结合 Echarts 和 HighCharts 前端组件展示数据。",
      "keywords": [
        "DolphinDB",
        "Echarts",
        "HighCharts",
        "数据可视化",
        "WebApi"
      ],
      "hypothetical_question": "如何使用 DolphinDB 的 Web 数据接口结合 Echarts 或 HighCharts 展示数据？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/tutorials/zabbix_cluster_monitoring.md",
      "chunk_id": "0",
      "source_document": "./documentation/tutorials/zabbix_cluster_monitoring.md",
      "start_line": 1,
      "end_line": 445,
      "summary": "本教程详细介绍了如何使用Zabbix监控DolphinDB集群的资源使用情况，包括部署配置、监控项设置、告警机制及可视化展示。",
      "keywords": [
        "Zabbix",
        "DolphinDB",
        "集群监控",
        "告警",
        "可视化"
      ],
      "hypothetical_question": "如何使用Zabbix监控DolphinDB集群的资源使用情况并设置告警？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/db_distr_comp/jupyter.md",
      "chunk_id": "0",
      "source_document": "./documentation/db_distr_comp/jupyter.md",
      "start_line": 1,
      "end_line": 81,
      "summary": "DolphinDB提供了Jupyter Notebook插件，支持配置、连接服务器及运行DolphinDB脚本。",
      "keywords": [
        "Jupyter Notebook",
        "DolphinDB",
        "插件配置"
      ],
      "hypothetical_question": "如何在Jupyter Notebook中配置和使用DolphinDB插件？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/funcs/r/rowProd.md",
      "chunk_id": "0",
      "source_document": "./documentation/funcs/r/rowProd.md",
      "start_line": 1,
      "end_line": 40,
      "summary": "rowProd函数用于逐行计算输入参数的乘积，并返回与输入行数相同的向量。",
      "keywords": [
        "rowProd",
        "逐行乘积",
        "向量计算",
        "矩阵运算"
      ],
      "hypothetical_question": "如何在DolphinDB中逐行计算矩阵或向量的乘积？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/stream/cep_engine.md",
      "chunk_id": "0",
      "source_document": "./documentation/stream/cep_engine.md",
      "start_line": 1,
      "end_line": 271,
      "summary": "DolphinDB CEP 引擎的创建、事件追加、路由及子引擎停止的详细说明。",
      "keywords": [
        "CEP 引擎",
        "事件追加",
        "事件路由",
        "子引擎",
        "DolphinDB"
      ],
      "hypothetical_question": "如何在 DolphinDB 中创建和配置 CEP 引擎以及处理事件？",
      "tokens": null
    },
    {
      "model_type": "text_chunk",
      "file_path": "./documentation/plugins/windtdf_tutorial.md",
      "chunk_id": "0",
      "source_document": "./documentation/plugins/windtdf_tutorial.md",
      "start_line": 1,
      "end_line": 303,
      "summary": "本文介绍了如何使用DolphinDB的WindTDF插件接入万得宏汇行情系统的实时数据，并将其存储到分布式数据库中。",
      "keywords": [
        "DolphinDB",
        "WindTDF插件",
        "实时行情数据",
        "分布式数据库",
        "流数据表"
      ],
      "hypothetical_question": "如何使用DolphinDB的WindTDF插件接入万得宏汇行情系统的实时数据并存储到分布式数据库中？",
      "tokens": null
    }
  ],
  "project_name": null,
  "version": "1.0"
}